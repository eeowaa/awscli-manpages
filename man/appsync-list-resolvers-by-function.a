.\" Man page generated from reStructuredText.
.
.TH "APPSYNC-LIST-RESOLVERS-BY-FUNCTION" "a" "" ""
.SH NAME
appsync-list-resolvers-by-function \- List the resolvers that are associated with a specific function
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
List the resolvers that are associated with a specific function.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.sp
\fBlist\-resolvers\-by\-function\fP is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the \fB\-\-no\-paginate\fP argument.
When using \fB\-\-output text\fP and the \fB\-\-query\fP argument on a paginated response, the \fB\-\-query\fP argument must extract data from the results of the following query expressions: \fBresolvers\fP
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  list\-resolvers\-by\-function
\-\-api\-id <value>
\-\-function\-id <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-starting\-token <value>]
[\-\-page\-size <value>]
[\-\-max\-items <value>]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-api\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The API ID.
.UNINDENT
.UNINDENT
.sp
\fB\-\-function\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The Function ID.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-starting\-token\fP (string)
.INDENT 0.0
.INDENT 3.5
A token to specify where to start paginating. This is the \fBNextToken\fP from a previously truncated response.
.sp
For usage examples, see \fI\%Pagination\fP in the \fIAWS Command Line Interface User Guide\fP .
.UNINDENT
.UNINDENT
.sp
\fB\-\-page\-size\fP (integer)
.INDENT 0.0
.INDENT 3.5
The size of each page to get in the AWS service call. This does not affect the number of items returned in the command\(aqs output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.
.sp
For usage examples, see \fI\%Pagination\fP in the \fIAWS Command Line Interface User Guide\fP .
.UNINDENT
.UNINDENT
.sp
\fB\-\-max\-items\fP (integer)
.INDENT 0.0
.INDENT 3.5
The total number of items to return in the command\(aqs output. If the total number of items available is more than the value specified, a \fBNextToken\fP is provided in the command\(aqs output. To resume pagination, provide the \fBNextToken\fP value in the \fBstarting\-token\fP argument of a subsequent command. \fBDo not\fP use the \fBNextToken\fP response element directly outside of the AWS CLI.
.sp
For usage examples, see \fI\%Pagination\fP in the \fIAWS Command Line Interface User Guide\fP .
.UNINDENT
.UNINDENT
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
resolvers \-> (list)
.INDENT 0.0
.INDENT 3.5
The list of resolvers.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Describes a resolver.
.sp
typeName \-> (string)
.INDENT 0.0
.INDENT 3.5
The resolver type name.
.UNINDENT
.UNINDENT
.sp
fieldName \-> (string)
.INDENT 0.0
.INDENT 3.5
The resolver field name.
.UNINDENT
.UNINDENT
.sp
dataSourceName \-> (string)
.INDENT 0.0
.INDENT 3.5
The resolver data source name.
.UNINDENT
.UNINDENT
.sp
resolverArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The resolver ARN.
.UNINDENT
.UNINDENT
.sp
requestMappingTemplate \-> (string)
.INDENT 0.0
.INDENT 3.5
The request mapping template.
.UNINDENT
.UNINDENT
.sp
responseMappingTemplate \-> (string)
.INDENT 0.0
.INDENT 3.5
The response mapping template.
.UNINDENT
.UNINDENT
.sp
kind \-> (string)
.INDENT 0.0
.INDENT 3.5
The resolver type.
.INDENT 0.0
.IP \(bu 2
\fBUNIT\fP : A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.
.IP \(bu 2
\fBPIPELINE\fP : A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of \fBFunction\fP in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
pipelineConfig \-> (structure)
.INDENT 0.0
.INDENT 3.5
The \fBPipelineConfig\fP .
.sp
functions \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of \fBFunction\fP objects.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
syncConfig \-> (structure)
.INDENT 0.0
.INDENT 3.5
The \fBSyncConfig\fP for a resolver attached to a versioned datasource.
.sp
conflictHandler \-> (string)
.INDENT 0.0
.INDENT 3.5
The Conflict Resolution strategy to perform in the event of a conflict.
.INDENT 0.0
.IP \(bu 2
\fBOPTIMISTIC_CONCURRENCY\fP : Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.
.IP \(bu 2
\fBAUTOMERGE\fP : Resolve conflicts with the Automerge conflict resolution strategy.
.IP \(bu 2
\fBLAMBDA\fP : Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
conflictDetection \-> (string)
.INDENT 0.0
.INDENT 3.5
The Conflict Detection strategy to use.
.INDENT 0.0
.IP \(bu 2
\fBVERSION\fP : Detect conflicts based on object versions for this resolver.
.IP \(bu 2
\fBNONE\fP : Do not detect conflicts when executing this resolver.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
lambdaConflictHandlerConfig \-> (structure)
.INDENT 0.0
.INDENT 3.5
The \fBLambdaConflictHandlerConfig\fP when configuring LAMBDA as the Conflict Handler.
.sp
lambdaConflictHandlerArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The Arn for the Lambda function to use as the Conflict Handler.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
cachingConfig \-> (structure)
.INDENT 0.0
.INDENT 3.5
The caching configuration for the resolver.
.sp
ttl \-> (long)
.INDENT 0.0
.INDENT 3.5
The TTL in seconds for a resolver that has caching enabled.
.sp
Valid values are between 1 and 3600 seconds.
.UNINDENT
.UNINDENT
.sp
cachingKeys \-> (list)
.INDENT 0.0
.INDENT 3.5
The caching keys for a resolver that has caching enabled.
.sp
Valid values are entries from the \fB$context.arguments\fP , \fB$context.source\fP , and \fB$context.identity\fP maps.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
nextToken \-> (string)
.INDENT 0.0
.INDENT 3.5
An identifier that can be used to return the next set of items in the list.
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
