.\" Man page generated from reStructuredText.
.
.TH "GREENGRASS-CREATE-CORE-DEFINITION-VERSION" "a" "" ""
.SH NAME
greengrass-create-core-definition-version \- Creates a version of a core definition that has already been defined
.SH DESCRIPTION
.sp
Creates a version of a core definition that has already been defined. Greengrass groups must each contain exactly one Greengrass core.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  create\-core\-definition\-version
[\-\-amzn\-client\-token <value>]
\-\-core\-definition\-id <value>
[\-\-cores <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-amzn\-client\-token\fP (string)
A client token used to correlate requests and responses.
.sp
\fB\-\-core\-definition\-id\fP (string)
The ID of the core definition.
.sp
\fB\-\-cores\fP (list)
A list of cores in the core definition version.(structure)
.INDENT 0.0
.INDENT 3.5
Information about a core.
.sp
CertificateArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The ARN of the certificate associated with the core.
.UNINDENT
.UNINDENT
.sp
Id \-> (string)
.INDENT 0.0
.INDENT 3.5
A descriptive or arbitrary ID for the core. This value must be unique within the core definition version. Max length is 128 characters with pattern \(aq\(aq[a\-zA\-Z0\-9:_\-]+\(aq\(aq.
.UNINDENT
.UNINDENT
.sp
SyncShadow \-> (boolean)
.INDENT 0.0
.INDENT 3.5
If true, the core\(aqs local shadow is automatically synced with the cloud.
.UNINDENT
.UNINDENT
.sp
ThingArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The ARN of the thing which is the core.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
CertificateArn=string,Id=string,SyncShadow=boolean,ThingArn=string ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "CertificateArn": "string",
    "Id": "string",
    "SyncShadow": true|false,
    "ThingArn": "string"
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo create a core definition version\fP
.sp
The following \fBcreate\-core\-definition\-version\fP example creates a core definition version and associates it with the specified core definition. The version can contain one core only. Before you can create a core, you must first create and provision the corresponding AWS IoT thing. This process includes the following \fBiot\fP commands, which return the \fBThingArn\fP and \fBCertificateArn\fP required for the \fBcreate\-core\-definition\-version\fP command.
.INDENT 0.0
.IP \(bu 2
Create the AWS IoT thing that corresponds to the core device:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
aws iot create\-thing \e
    \-\-thing\-name "MyCoreDevice"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "thingArn": "arn:aws:iot:us\-west\-2:123456789012:thing/MyCoreDevice",
    "thingName": "MyCoreDevice",
    "thingId": "cb419a19\-9099\-4515\-9cec\-e9b0e760608a"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
Create public and private keys and the core device certificate for the thing. This example uses the \fBcreate\-keys\-and\-certificate\fP command and requires write permissions to the current directory. Alternatively, you can use the \fBcreate\-certificate\-from\-csr\fP command.
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
aws iot create\-keys\-and\-certificate \e
    \-\-set\-as\-active \e
    \-\-certificate\-pem\-outfile "myCore.cert.pem" \e
    \-\-public\-key\-outfile "myCore.public.key" \e
    \-\-private\-key\-outfile "myCore.private.key"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "certificateArn": "arn:aws:iot:us\-west\-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz",
    "certificatePem": "\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-\enMIIDWTCAkGgAwIBATgIUCgq6EGqou6zFqWgIZRndgQEFW+gwDQYJKoZIhvc...KdGewQS\en\-\-\-\-\-END CERTIFICATE\-\-\-\-\-\en",
    "keyPair": {
        "PublicKey": "\-\-\-\-\-BEGIN PUBLIC KEY\-\-\-\-\-\enMIIBIjANBzrqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqKpRgnn6yq26U3y...wIDAQAB\en\-\-\-\-\-END PUBLIC KEY\-\-\-\-\-\en",
        "PrivateKey": "\-\-\-\-\-BEGIN RSA PRIVATE KEY\-\-\-\-\-\enMIIEowIABAKCAQEAqKpRgnn6yq26U3yt5YFZquyukfRjbMXDcNOK4rMCxDR...fvY4+te\en\-\-\-\-\-END RSA PRIVATE KEY\-\-\-\-\-\en"
    },
    "certificateId": "123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
Create an AWS IoT policy that allows \fBiot\fP and \fBgreengrass\fP actions. For simplicity, the following policy allows actions on all resources, but your policy should be more restrictive.
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
aws iot create\-policy \e
    \-\-policy\-name "Core_Devices" \e
    \-\-policy\-document "{\e"Version\e":\e"2012\-10\-17\e",\e"Statement\e":[{\e"Effect\e":\e"Allow\e",\e"Action\e":[\e"iot:Publish\e",\e"iot:Subscribe\e",\e"iot:Connect\e",\e"iot:Receive\e"],\e"Resource\e":[\e"*\e"]},{\e"Effect\e":\e"Allow\e",\e"Action\e":[\e"iot:GetThingShadow\e",\e"iot:UpdateThingShadow\e",\e"iot:DeleteThingShadow\e"],\e"Resource\e":[\e"*\e"]},{\e"Effect\e":\e"Allow\e",\e"Action\e":[\e"greengrass:*\e"],\e"Resource\e":[\e"*\e"]}]}"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "policyName": "Core_Devices",
    "policyArn": "arn:aws:iot:us\-west\-2:123456789012:policy/Core_Devices",
    "policyDocument": "{\e"Version\e":\e"2012\-10\-17\e",\e"Statement\e":[{\e"Effect\e":\e"Allow\e",\e"Action\e":[\e"iot:Publish\e",\e"iot:Subscribe\e",\e"iot:Connect\e",\e"iot:Receive\e"],\e"Resource\e":[\e"*\e"]},{\e"Effect\e":\e"Allow\e",\e"Action\e":[\e"iot:GetThingShadow\e",\e"iot:UpdateThingShadow\e",\e"iot:DeleteThingShadow\e"],\e"Resource\e":[\e"*\e"]},{\e"Effect\e":\e"Allow\e",\e"Action\e":[\e"greengrass:*\e"],\e"Resource\e":[\e"*\e"]}]}",
    "policyVersionId": "1"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
Attach the policy to the certificate:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
aws iot attach\-policy \e
    \-\-policy\-name "Core_Devices" \e
    \-\-target "arn:aws:iot:us\-west\-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
This command produces no output.
.INDENT 0.0
.IP \(bu 2
Attach the thing to the certificate:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
aws iot attach\-thing\-principal \e
    \-\-thing\-name "MyCoreDevice" \e
    \-\-principal "arn:aws:iot:us\-west\-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
This command produces no output.
.INDENT 0.0
.IP \(bu 2
Create the core definition version:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
aws greengrass create\-core\-definition\-version \e
    \-\-core\-definition\-id "582efe12\-b05a\-409e\-9a24\-a2ba1bcc4a12" \e
    \-\-cores "[{\e"Id\e":\e"MyCoreDevice\e",\e"ThingArn\e":\e"arn:aws:iot:us\-west\-2:123456789012:thing/MyCoreDevice\e",\e"CertificateArn\e":\e"arn:aws:iot:us\-west\-2:123456789012:cert/123a15ec415668c2349a76170b64ac0878231c1e21ec83c10e92a1EXAMPLExyz\e",\e"SyncShadow\e":true}]"
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "Arn": "arn:aws:greengrass:us\-west\-2:123456789012:/greengrass/definition/cores/582efe12\-b05a\-409e\-9a24\-a2ba1bcc4a12/versions/3fdc1190\-2ce5\-44de\-b98b\-eec8f9571014",
    "Version": "3fdc1190\-2ce5\-44de\-b98b\-eec8f9571014",
    "CreationTimestamp": "2019\-09\-18T00:15:09.838Z",
    "Id": "582efe12\-b05a\-409e\-9a24\-a2ba1bcc4a12"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Configure the AWS IoT Greengrass Core\fP in the \fIAWS IoT Greengrass Developer Guide\fP\&.
.SH OUTPUT
.sp
Arn \-> (string)
.INDENT 0.0
.INDENT 3.5
The ARN of the version.
.UNINDENT
.UNINDENT
.sp
CreationTimestamp \-> (string)
.INDENT 0.0
.INDENT 3.5
The time, in milliseconds since the epoch, when the version was created.
.UNINDENT
.UNINDENT
.sp
Id \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the parent definition that the version is associated with.
.UNINDENT
.UNINDENT
.sp
Version \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the version.
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
