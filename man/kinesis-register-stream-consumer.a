.\" Man page generated from reStructuredText.
.
.TH "KINESIS-REGISTER-STREAM-CONSUMER" "a" "" ""
.SH NAME
kinesis-register-stream-consumer \- Registers a consumer with a Kinesis data stream
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Registers a consumer with a Kinesis data stream. When you use this operation, the consumer you register can then call  SubscribeToShard to receive data from the stream using enhanced fan\-out, at a rate of up to 2 MiB per second for every shard you subscribe to. This rate is unaffected by the total number of consumers that read from the same stream.
.sp
You can register up to 20 consumers per stream. A given consumer can only be registered with one stream at a time.
.sp
For an example of how to use this operations, see \fI\%Enhanced Fan\-Out Using the Kinesis Data Streams API\fP .
.sp
The use of this operation has a limit of five transactions per second per account. Also, only 5 consumers can be created simultaneously. In other words, you cannot have more than 5 consumers in a \fBCREATING\fP status at the same time. Registering a 6th consumer while there are 5 in a \fBCREATING\fP status results in a \fBLimitExceededException\fP .
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  register\-stream\-consumer
\-\-stream\-arn <value>
\-\-consumer\-name <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-stream\-arn\fP (string)
.INDENT 0.0
.INDENT 3.5
The ARN of the Kinesis data stream that you want to register the consumer with. For more info, see \fI\%Amazon Resource Names (ARNs) and AWS Service Namespaces\fP .
.UNINDENT
.UNINDENT
.sp
\fB\-\-consumer\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
For a given Kinesis data stream, each consumer must have a unique name. However, consumer names don\(aqt have to be unique across data streams.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo register a data stream consumer\fP
.sp
The following \fBregister\-stream\-consumer\fP example registers a consumer called \fBKinesisConsumerApplication\fP with the specified data stream.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws kinesis register\-stream\-consumer \e
    \-\-stream\-arn arn:aws:kinesis:us\-west\-2:012345678912:stream/samplestream \e
    \-\-consumer\-name KinesisConsumerApplication
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "Consumer": {
        "ConsumerName": "KinesisConsumerApplication",
        "ConsumerARN": "arn:aws:kinesis:us\-west\-2: 123456789012:stream/samplestream/consumer/KinesisConsumerApplication:1572383852",
        "ConsumerStatus": "CREATING",
        "ConsumerCreationTimestamp": 1572383852.0
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Developing Consumers with Enhanced Fan\-Out Using the Kinesis Data Streams API\fP in the \fIAmazon Kinesis Data Streams Developer Guide\fP\&.
.SH OUTPUT
.sp
Consumer \-> (structure)
.INDENT 0.0
.INDENT 3.5
An object that represents the details of the consumer you registered. When you register a consumer, it gets an ARN that is generated by Kinesis Data Streams.
.sp
ConsumerName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the consumer is something you choose when you register the consumer.
.UNINDENT
.UNINDENT
.sp
ConsumerARN \-> (string)
.INDENT 0.0
.INDENT 3.5
When you register a consumer, Kinesis Data Streams generates an ARN for it. You need this ARN to be able to call  SubscribeToShard .
.sp
If you delete a consumer and then create a new one with the same name, it won\(aqt have the same ARN. That\(aqs because consumer ARNs contain the creation timestamp. This is important to keep in mind if you have IAM policies that reference consumer ARNs.
.UNINDENT
.UNINDENT
.sp
ConsumerStatus \-> (string)
.INDENT 0.0
.INDENT 3.5
A consumer can\(aqt read data while in the \fBCREATING\fP or \fBDELETING\fP states.
.UNINDENT
.UNINDENT
.sp
ConsumerCreationTimestamp \-> (timestamp)
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
