.\" Man page generated from reStructuredText.
.
.TH "CLOUDWATCH-PUT-METRIC-DATA" "a" "" ""
.SH NAME
cloudwatch-put-metric-data \- Publishes metric data points to Amazon CloudWatch
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metric. If the specified metric does not exist, CloudWatch creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes for the metric to appear in calls to \fI\%ListMetrics\fP .
.sp
You can publish either individual data points in the \fBValue\fP field, or arrays of values and the number of times each value occurred during the period by using the \fBValues\fP and \fBCounts\fP fields in the \fBMetricDatum\fP structure. Using the \fBValues\fP and \fBCounts\fP method enables you to publish up to 150 values per metric with one \fBPutMetricData\fP request, and supports retrieving percentile statistics on this data.
.sp
Each \fBPutMetricData\fP request is limited to 40 KB in size for HTTP POST requests. You can send a payload compressed by gzip. Each request is also limited to no more than 20 different metrics.
.sp
Although the \fBValue\fP parameter accepts numbers of type \fBDouble\fP , CloudWatch rejects values that are either too small or too large. Values must be in the range of \-2^360 to 2^360. In addition, special values (for example, NaN, +Infinity, \-Infinity) are not supported.
.sp
You can use up to 10 dimensions per metric to further clarify what data the metric collects. Each dimension consists of a Name and Value pair. For more information about specifying dimensions, see \fI\%Publishing Metrics\fP in the \fIAmazon CloudWatch User Guide\fP .
.sp
You specify the time stamp to be associated with each data point. You can specify time stamps that are as much as two weeks before the current date, and as much as 2 hours after the current day and time.
.sp
Data points with time stamps from 24 hours ago or longer can take at least 48 hours to become available for \fI\%GetMetricData\fP or \fI\%GetMetricStatistics\fP from the time they are submitted. Data points with time stamps between 3 and 24 hours ago can take as much as 2 hours to become available for for \fI\%GetMetricData\fP or \fI\%GetMetricStatistics\fP .
.sp
CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:
.INDENT 0.0
.IP \(bu 2
The \fBSampleCount\fP value of the statistic set is 1 and \fBMin\fP , \fBMax\fP , and \fBSum\fP are all equal.
.IP \(bu 2
The \fBMin\fP and \fBMax\fP are equal, and \fBSum\fP is equal to \fBMin\fP multiplied by \fBSampleCount\fP .
.UNINDENT
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  put\-metric\-data
\-\-namespace <value>
[\-\-metric\-data <value>]
[\-\-metric\-name <value>]
[\-\-timestamp <value>]
[\-\-unit <value>]
[\-\-value <value>]
[\-\-dimensions <value>]
[\-\-statistic\-values <value>]
[\-\-storage\-resolution <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-namespace\fP (string)
.INDENT 0.0
.INDENT 3.5
The namespace for the metric data.
.sp
To avoid conflicts with AWS service namespaces, you should not specify a namespace that begins with \fBAWS/\fP
.UNINDENT
.UNINDENT
.sp
\fB\-\-metric\-data\fP (list)
.INDENT 0.0
.INDENT 3.5
The data for the metric. The array can include no more than 20 metrics per call.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Encapsulates the information sent to either create a metric or add new values to be aggregated into an existing metric.
.sp
MetricName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the metric.
.UNINDENT
.UNINDENT
.sp
Dimensions \-> (list)
.INDENT 0.0
.INDENT 3.5
The dimensions associated with the metric.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A dimension is a name/value pair that is part of the identity of a metric. You can assign up to 10 dimensions to a metric. Because dimensions are part of the unique identifier for a metric, whenever you add a unique name/value pair to one of your metrics, you are creating a new variation of that metric.
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the dimension. Dimension names cannot contain blank spaces or non\-ASCII characters.
.UNINDENT
.UNINDENT
.sp
Value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value of the dimension. Dimension values cannot contain blank spaces or non\-ASCII characters.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Timestamp \-> (timestamp)
.INDENT 0.0
.INDENT 3.5
The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.
.UNINDENT
.UNINDENT
.sp
Value \-> (double)
.INDENT 0.0
.INDENT 3.5
The value for the metric.
.sp
Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or too large. Values must be in the range of \-2^360 to 2^360. In addition, special values (for example, NaN, +Infinity, \-Infinity) are not supported.
.UNINDENT
.UNINDENT
.sp
StatisticValues \-> (structure)
.INDENT 0.0
.INDENT 3.5
The statistical values for the metric.
.sp
SampleCount \-> (double)
.INDENT 0.0
.INDENT 3.5
The number of samples used for the statistic set.
.UNINDENT
.UNINDENT
.sp
Sum \-> (double)
.INDENT 0.0
.INDENT 3.5
The sum of values for the sample set.
.UNINDENT
.UNINDENT
.sp
Minimum \-> (double)
.INDENT 0.0
.INDENT 3.5
The minimum value of the sample set.
.UNINDENT
.UNINDENT
.sp
Maximum \-> (double)
.INDENT 0.0
.INDENT 3.5
The maximum value of the sample set.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Values \-> (list)
.INDENT 0.0
.INDENT 3.5
Array of numbers representing the values for the metric during the period. Each unique value is listed just once in this array, and the corresponding number in the \fBCounts\fP array specifies the number of times that value occurred during the period. You can include up to 150 unique values in each \fBPutMetricData\fP action that specifies a \fBValues\fP array.
.sp
Although the \fBValues\fP array accepts numbers of type \fBDouble\fP , CloudWatch rejects values that are either too small or too large. Values must be in the range of \-2^360 to 2^360. In addition, special values (for example, NaN, +Infinity, \-Infinity) are not supported.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
Counts \-> (list)
.INDENT 0.0
.INDENT 3.5
Array of numbers that is used along with the \fBValues\fP array. Each number in the \fBCount\fP array is the number of times the corresponding value in the \fBValues\fP array occurred during the period.
.sp
If you omit the \fBCounts\fP array, the default of 1 is used as the value for each count. If you include a \fBCounts\fP array, it must include the same amount of values as the \fBValues\fP array.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
Unit \-> (string)
.INDENT 0.0
.INDENT 3.5
When you are using a \fBPut\fP operation, this defines what unit you want to use when storing the metric.
.sp
In a \fBGet\fP operation, this displays the unit that is used for the metric.
.UNINDENT
.UNINDENT
.sp
StorageResolution \-> (integer)
.INDENT 0.0
.INDENT 3.5
Valid values are 1 and 60. Setting this to 1 specifies this metric as a high\-resolution metric, so that CloudWatch stores the metric with sub\-minute resolution down to one second. Setting this to 60 specifies this metric as a regular\-resolution metric, which CloudWatch stores at 1\-minute resolution. Currently, high resolution is available only for custom metrics. For more information about high\-resolution metrics, see \fI\%High\-Resolution Metrics\fP in the \fIAmazon CloudWatch User Guide\fP .
.sp
This field is optional, if you do not specify it the default of 60 is used.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
MetricName=string,Dimensions=[{Name=string,Value=string},{Name=string,Value=string}],Timestamp=timestamp,Value=double,StatisticValues={SampleCount=double,Sum=double,Minimum=double,Maximum=double},Values=double,double,Counts=double,double,Unit=string,StorageResolution=integer ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "MetricName": "string",
    "Dimensions": [
      {
        "Name": "string",
        "Value": "string"
      }
      ...
    ],
    "Timestamp": timestamp,
    "Value": double,
    "StatisticValues": {
      "SampleCount": double,
      "Sum": double,
      "Minimum": double,
      "Maximum": double
    },
    "Values": [double, ...],
    "Counts": [double, ...],
    "Unit": "Seconds"|"Microseconds"|"Milliseconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None",
    "StorageResolution": integer
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-metric\-name\fP (string)
The name of the metric.
.sp
\fB\-\-timestamp\fP (string)
The time stamp used for the metric. If not specified, the default value is set to the time the metric data was received.
.sp
\fB\-\-unit\fP (string)
The unit of metric.
.sp
\fB\-\-value\fP (string)
The value for the metric. Although the \-\-value parameter accepts numbers of type Double, Amazon CloudWatch truncates values with very large exponents. Values with base\-10 exponents greater than 126 (1 x 10^126) are truncated. Likewise, values with base\-10 exponents less than \-130 (1 x 10^\-130) are also truncated.
.sp
\fB\-\-dimensions\fP (string)
The \-\-dimensions argument further expands on the identity of a metric using a Name=Value pair, separated by commas, for example: \fB\-\-dimensions InstanceID=1\-23456789,InstanceType=m1.small\fP . Note that the \fB\-\-dimensions\fP argument has a different format when used in \fBget\-metric\-data\fP , where for the same example you would use the format \fB\-\-dimensions Name=InstanceID,Value=i\-aaba32d4 Name=InstanceType,value=m1.small\fP .
.sp
\fB\-\-statistic\-values\fP (string)
A set of statistical values describing the metric.
.sp
\fB\-\-storage\-resolution\fP (string)
.INDENT 0.0
.INDENT 3.5
Valid values are 1 and 60. Setting this to 1 specifies this metric as a high\-resolution metric, so that CloudWatch stores the metric with sub\-minute resolution down to one second. Setting this to 60 specifies this metric as a regular\-resolution metric, which CloudWatch stores at 1\-minute resolution. Currently, high resolution is available only for custom metrics. For more information about high\-resolution metrics, see \fI\%High\-Resolution Metrics\fP in the \fIAmazon CloudWatch User Guide\fP .
.sp
This field is optional, if you do not specify it the default of 60 is used.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo publish a custom metric to Amazon CloudWatch\fP
.sp
The following example uses the \fBput\-metric\-data\fP command to publish a custom metric to Amazon CloudWatch:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws cloudwatch put\-metric\-data \-\-namespace "Usage Metrics" \-\-metric\-data file://metric.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The values for the metric itself are stored in the JSON file, \fBmetric.json\fP\&.
.sp
Here are the contents of that file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "MetricName": "New Posts",
    "Timestamp": "Wednesday, June 12, 2013 8:28:20 PM",
    "Value": 0.50,
    "Unit": "Count"
  }
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Publishing Custom Metrics\fP in the \fIAmazon CloudWatch Developer Guide\fP\&.
.sp
\fBTo specify multiple dimensions\fP
.sp
The following example illustrates how to specify multiple dimensions. Each dimension is specified as a Name=Value pair. Multiple dimensions are separated by a comma.:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws cloudwatch put\-metric\-data \-\-metric\-name Buffers \-\-namespace MyNameSpace \-\-unit Bytes \-\-value 231434333 \-\-dimensions InstanceID=1\-23456789,InstanceType=m1.small
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OUTPUT
.sp
None
.\" Generated by docutils manpage writer.
.
