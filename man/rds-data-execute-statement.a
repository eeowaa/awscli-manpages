.\" Man page generated from reStructuredText.
.
.TH "RDS-DATA-EXECUTE-STATEMENT" "a" "" ""
.SH NAME
rds-data-execute-statement \- Runs a SQL statement against a database
.SH DESCRIPTION
.sp
Runs a SQL statement against a database.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
If a call isn\(aqt part of a transaction because it doesn\(aqt include the \fBtransactionID\fP parameter, changes that result from the call are committed automatically.
.UNINDENT
.UNINDENT
.sp
The response size limit is 1 MB. If the call returns more than 1 MB of response data, the call is terminated.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  execute\-statement
[\-\-continue\-after\-timeout | \-\-no\-continue\-after\-timeout]
[\-\-database <value>]
[\-\-include\-result\-metadata | \-\-no\-include\-result\-metadata]
[\-\-parameters <value>]
\-\-resource\-arn <value>
[\-\-result\-set\-options <value>]
[\-\-schema <value>]
\-\-secret\-arn <value>
\-\-sql <value>
[\-\-transaction\-id <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-continue\-after\-timeout\fP | \fB\-\-no\-continue\-after\-timeout\fP (boolean)
.INDENT 0.0
.INDENT 3.5
A value that indicates whether to continue running the statement after the call times out. By default, the statement stops running when the call times out.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
For DDL statements, we recommend continuing to run the statement after the call times out. When a DDL statement terminates before it is finished running, it can result in errors and possibly corrupted data structures.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-database\fP (string)
.INDENT 0.0
.INDENT 3.5
The name of the database.
.UNINDENT
.UNINDENT
.sp
\fB\-\-include\-result\-metadata\fP | \fB\-\-no\-include\-result\-metadata\fP (boolean)
.INDENT 0.0
.INDENT 3.5
A value that indicates whether to include metadata in the results.
.UNINDENT
.UNINDENT
.sp
\fB\-\-parameters\fP (list)
.INDENT 0.0
.INDENT 3.5
The parameters for the SQL statement.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Array parameters are not supported.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A parameter used in a SQL statement.
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the parameter.
.UNINDENT
.UNINDENT
.sp
typeHint \-> (string)
.INDENT 0.0
.INDENT 3.5
A hint that specifies the correct object type for data type mapping. Possible values are as follows:
.INDENT 0.0
.IP \(bu 2
\fBDATE\fP \- The corresponding \fBString\fP parameter value is sent as an object of \fBDATE\fP type to the database. The accepted format is \fBYYYY\-MM\-DD\fP .
.IP \(bu 2
\fBDECIMAL\fP \- The corresponding \fBString\fP parameter value is sent as an object of \fBDECIMAL\fP type to the database.
.IP \(bu 2
\fBJSON\fP \- The corresponding \fBString\fP parameter value is sent as an object of \fBJSON\fP type to the database.
.IP \(bu 2
\fBTIME\fP \- The corresponding \fBString\fP parameter value is sent as an object of \fBTIME\fP type to the database. The accepted format is \fBHH:MM:SS[.FFF]\fP .
.IP \(bu 2
\fBTIMESTAMP\fP \- The corresponding \fBString\fP parameter value is sent as an object of \fBTIMESTAMP\fP type to the database. The accepted format is \fBYYYY\-MM\-DD HH:MM:SS[.FFF]\fP .
.IP \(bu 2
\fBUUID\fP \- The corresponding \fBString\fP parameter value is sent as an object of \fBUUID\fP type to the database.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
value \-> (structure)
.INDENT 0.0
.INDENT 3.5
The value of the parameter.
.sp
arrayValue \-> (structure)
.INDENT 0.0
.INDENT 3.5
An array of values.
.sp
arrayValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of arrays.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Contains an array.
.sp
arrayValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of arrays.
.sp
( ... recursive ... )
.UNINDENT
.UNINDENT
.sp
booleanValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of Boolean values.
.sp
(boolean)
.UNINDENT
.UNINDENT
.sp
doubleValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of integers.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
longValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of floating point numbers.
.sp
(long)
.UNINDENT
.UNINDENT
.sp
stringValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of strings.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
booleanValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of Boolean values.
.sp
(boolean)
.UNINDENT
.UNINDENT
.sp
doubleValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of integers.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
longValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of floating point numbers.
.sp
(long)
.UNINDENT
.UNINDENT
.sp
stringValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of strings.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
blobValue \-> (blob)
.INDENT 0.0
.INDENT 3.5
A value of BLOB data type.
.UNINDENT
.UNINDENT
.sp
booleanValue \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A value of Boolean data type.
.UNINDENT
.UNINDENT
.sp
doubleValue \-> (double)
.INDENT 0.0
.INDENT 3.5
A value of double data type.
.UNINDENT
.UNINDENT
.sp
isNull \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A NULL value.
.UNINDENT
.UNINDENT
.sp
longValue \-> (long)
.INDENT 0.0
.INDENT 3.5
A value of long data type.
.UNINDENT
.UNINDENT
.sp
stringValue \-> (string)
.INDENT 0.0
.INDENT 3.5
A value of string data type.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "name": "string",
    "typeHint": "JSON"|"UUID"|"TIMESTAMP"|"DATE"|"TIME"|"DECIMAL",
    "value": {
      "arrayValue": {
        "arrayValues": [
          {
            "arrayValues": [
              { ... recursive ... }
              ...
            ],
            "booleanValues": [true|false, ...],
            "doubleValues": [double, ...],
            "longValues": [long, ...],
            "stringValues": ["string", ...]
          }
          ...
        ],
        "booleanValues": [true|false, ...],
        "doubleValues": [double, ...],
        "longValues": [long, ...],
        "stringValues": ["string", ...]
      },
      "blobValue": blob,
      "booleanValue": true|false,
      "doubleValue": double,
      "isNull": true|false,
      "longValue": long,
      "stringValue": "string"
    }
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-resource\-arn\fP (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.
.UNINDENT
.UNINDENT
.sp
\fB\-\-result\-set\-options\fP (structure)
.INDENT 0.0
.INDENT 3.5
Options that control how the result set is returned.
.sp
decimalReturnType \-> (string)
.INDENT 0.0
.INDENT 3.5
A value that indicates how a field of \fBDECIMAL\fP type is represented in the response. The value of \fBSTRING\fP , the default, specifies that it is converted to a String value. The value of \fBDOUBLE_OR_LONG\fP specifies that it is converted to a Long value if its scale is 0, or to a Double value otherwise.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Conversion to Double or Long can result in roundoff errors due to precision loss. We recommend converting to String, especially when working with currency values.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
decimalReturnType=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "decimalReturnType": "STRING"|"DOUBLE_OR_LONG"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-schema\fP (string)
.INDENT 0.0
.INDENT 3.5
The name of the database schema.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Currently, the \fBschema\fP parameter isn\(aqt supported.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-secret\-arn\fP (string)
.INDENT 0.0
.INDENT 3.5
The name or ARN of the secret that enables access to the DB cluster.
.UNINDENT
.UNINDENT
.sp
\fB\-\-sql\fP (string)
.INDENT 0.0
.INDENT 3.5
The SQL statement to run.
.UNINDENT
.UNINDENT
.sp
\fB\-\-transaction\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The identifier of a transaction that was started by using the \fBBeginTransaction\fP operation. Specify the transaction ID of the transaction that you want to include the SQL statement in.
.sp
If the SQL statement is not part of a transaction, don\(aqt set this parameter.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBExample 1: To execute a SQL statement that is part of a transaction\fP
.sp
The following \fBexecute\-statement\fP example runs a SQL statement that is part of a transaction.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws rds\-data execute\-statement \e
    \-\-resource\-arn "arn:aws:rds:us\-west\-2:123456789012:cluster:mydbcluster" \e
    \-\-database "mydb" \e
    \-\-secret\-arn "arn:aws:secretsmanager:us\-west\-2:123456789012:secret:mysecret" \e
    \-\-sql "update mytable set quantity=5 where id=201" \e
    \-\-transaction\-id "ABC1234567890xyz"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "numberOfRecordsUpdated": 1
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBExample 2: To execute a SQL statement with parameters\fP
.sp
The following \fBexecute\-statement\fP example runs a SQL statement with parameters.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws rds\-data execute\-statement \e
    \-\-resource\-arn "arn:aws:rds:us\-east\-1:123456789012:cluster:mydbcluster" \e
    \-\-database "mydb" \e
    \-\-secret\-arn "arn:aws:secretsmanager:us\-east\-1:123456789012:secret:mysecret" \e
    \-\-sql "insert into mytable values (:id, :val)" \e
    \-\-parameters "[{\e"name\e": \e"id\e", \e"value\e": {\e"longValue\e": 1}},{\e"name\e": \e"val\e", \e"value\e": {\e"stringValue\e": \e"value1\e"}}]"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "numberOfRecordsUpdated": 1
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Using the Data API for Aurora Serverless\fP in the \fIAmazon RDS User Guide\fP\&.
.SH OUTPUT
.sp
columnMetadata \-> (list)
.INDENT 0.0
.INDENT 3.5
Metadata for the columns included in the results.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Contains the metadata for a column.
.sp
arrayBaseColumnType \-> (integer)
.INDENT 0.0
.INDENT 3.5
The type of the column.
.UNINDENT
.UNINDENT
.sp
isAutoIncrement \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A value that indicates whether the column increments automatically.
.UNINDENT
.UNINDENT
.sp
isCaseSensitive \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A value that indicates whether the column is case\-sensitive.
.UNINDENT
.UNINDENT
.sp
isCurrency \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A value that indicates whether the column contains currency values.
.UNINDENT
.UNINDENT
.sp
isSigned \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A value that indicates whether an integer column is signed.
.UNINDENT
.UNINDENT
.sp
label \-> (string)
.INDENT 0.0
.INDENT 3.5
The label for the column.
.UNINDENT
.UNINDENT
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the column.
.UNINDENT
.UNINDENT
.sp
nullable \-> (integer)
.INDENT 0.0
.INDENT 3.5
A value that indicates whether the column is nullable.
.UNINDENT
.UNINDENT
.sp
precision \-> (integer)
.INDENT 0.0
.INDENT 3.5
The precision value of a decimal number column.
.UNINDENT
.UNINDENT
.sp
scale \-> (integer)
.INDENT 0.0
.INDENT 3.5
The scale value of a decimal number column.
.UNINDENT
.UNINDENT
.sp
schemaName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the schema that owns the table that includes the column.
.UNINDENT
.UNINDENT
.sp
tableName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the table that includes the column.
.UNINDENT
.UNINDENT
.sp
type \-> (integer)
.INDENT 0.0
.INDENT 3.5
The type of the column.
.UNINDENT
.UNINDENT
.sp
typeName \-> (string)
.INDENT 0.0
.INDENT 3.5
The database\-specific data type of the column.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
generatedFields \-> (list)
.INDENT 0.0
.INDENT 3.5
Values for fields generated during the request.
.INDENT 0.0
.INDENT 3.5
\fB<note> <p>The <code>generatedFields</code> data isn\(aqt supported by Aurora PostgreSQL. To get the values of generated fields, use the <code>RETURNING</code> clause. For more information, see <a href="https://www.postgresql.org/docs/10/dml\-returning.html">Returning Data From Modified Rows</a> in the PostgreSQL documentation.</p> </note>\fP
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Contains a value.
.sp
arrayValue \-> (structure)
.INDENT 0.0
.INDENT 3.5
An array of values.
.sp
arrayValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of arrays.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Contains an array.
.sp
arrayValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of arrays.
.sp
( ... recursive ... )
.UNINDENT
.UNINDENT
.sp
booleanValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of Boolean values.
.sp
(boolean)
.UNINDENT
.UNINDENT
.sp
doubleValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of integers.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
longValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of floating point numbers.
.sp
(long)
.UNINDENT
.UNINDENT
.sp
stringValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of strings.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
booleanValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of Boolean values.
.sp
(boolean)
.UNINDENT
.UNINDENT
.sp
doubleValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of integers.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
longValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of floating point numbers.
.sp
(long)
.UNINDENT
.UNINDENT
.sp
stringValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of strings.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
blobValue \-> (blob)
.INDENT 0.0
.INDENT 3.5
A value of BLOB data type.
.UNINDENT
.UNINDENT
.sp
booleanValue \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A value of Boolean data type.
.UNINDENT
.UNINDENT
.sp
doubleValue \-> (double)
.INDENT 0.0
.INDENT 3.5
A value of double data type.
.UNINDENT
.UNINDENT
.sp
isNull \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A NULL value.
.UNINDENT
.UNINDENT
.sp
longValue \-> (long)
.INDENT 0.0
.INDENT 3.5
A value of long data type.
.UNINDENT
.UNINDENT
.sp
stringValue \-> (string)
.INDENT 0.0
.INDENT 3.5
A value of string data type.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
numberOfRecordsUpdated \-> (long)
.INDENT 0.0
.INDENT 3.5
The number of records updated by the request.
.UNINDENT
.UNINDENT
.sp
records \-> (list)
.INDENT 0.0
.INDENT 3.5
The records returned by the SQL statement.
.sp
(list)
.INDENT 0.0
.INDENT 3.5
(structure)
.INDENT 0.0
.INDENT 3.5
Contains a value.
.sp
arrayValue \-> (structure)
.INDENT 0.0
.INDENT 3.5
An array of values.
.sp
arrayValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of arrays.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Contains an array.
.sp
arrayValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of arrays.
.sp
( ... recursive ... )
.UNINDENT
.UNINDENT
.sp
booleanValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of Boolean values.
.sp
(boolean)
.UNINDENT
.UNINDENT
.sp
doubleValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of integers.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
longValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of floating point numbers.
.sp
(long)
.UNINDENT
.UNINDENT
.sp
stringValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of strings.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
booleanValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of Boolean values.
.sp
(boolean)
.UNINDENT
.UNINDENT
.sp
doubleValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of integers.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
longValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of floating point numbers.
.sp
(long)
.UNINDENT
.UNINDENT
.sp
stringValues \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of strings.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
blobValue \-> (blob)
.INDENT 0.0
.INDENT 3.5
A value of BLOB data type.
.UNINDENT
.UNINDENT
.sp
booleanValue \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A value of Boolean data type.
.UNINDENT
.UNINDENT
.sp
doubleValue \-> (double)
.INDENT 0.0
.INDENT 3.5
A value of double data type.
.UNINDENT
.UNINDENT
.sp
isNull \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A NULL value.
.UNINDENT
.UNINDENT
.sp
longValue \-> (long)
.INDENT 0.0
.INDENT 3.5
A value of long data type.
.UNINDENT
.UNINDENT
.sp
stringValue \-> (string)
.INDENT 0.0
.INDENT 3.5
A value of string data type.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
