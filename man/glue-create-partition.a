.\" Man page generated from reStructuredText.
.
.TH "GLUE-CREATE-PARTITION" "a" "" ""
.SH NAME
glue-create-partition \- Creates a new partition
.SH DESCRIPTION
.sp
Creates a new partition.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  create\-partition
[\-\-catalog\-id <value>]
\-\-database\-name <value>
\-\-table\-name <value>
\-\-partition\-input <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-catalog\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The AWS account ID of the catalog in which the partition is to be created.
.UNINDENT
.UNINDENT
.sp
\fB\-\-database\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
The name of the metadata database in which the partition is to be created.
.UNINDENT
.UNINDENT
.sp
\fB\-\-table\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
The name of the metadata table in which the partition is to be created.
.UNINDENT
.UNINDENT
.sp
\fB\-\-partition\-input\fP (structure)
.INDENT 0.0
.INDENT 3.5
A \fBPartitionInput\fP structure defining the partition to be created.
.sp
Values \-> (list)
.INDENT 0.0
.INDENT 3.5
The values of the partition. Although this parameter is not required by the SDK, you must specify this parameter for a valid input.
.sp
The values for the keys for the new partition must be passed as an array of String objects that must be ordered in the same order as the partition keys appearing in the Amazon S3 prefix. Otherwise AWS Glue will add the values to the wrong keys.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
LastAccessTime \-> (timestamp)
.INDENT 0.0
.INDENT 3.5
The last time at which the partition was accessed.
.UNINDENT
.UNINDENT
.sp
StorageDescriptor \-> (structure)
.INDENT 0.0
.INDENT 3.5
Provides information about the physical location where the partition is stored.
.sp
Columns \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of the \fBColumns\fP in the table.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A column in a \fBTable\fP .
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the \fBColumn\fP .
.UNINDENT
.UNINDENT
.sp
Type \-> (string)
.INDENT 0.0
.INDENT 3.5
The data type of the \fBColumn\fP .
.UNINDENT
.UNINDENT
.sp
Comment \-> (string)
.INDENT 0.0
.INDENT 3.5
A free\-form text comment.
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
These key\-value pairs define properties associated with the column.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Location \-> (string)
.INDENT 0.0
.INDENT 3.5
The physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.
.UNINDENT
.UNINDENT
.sp
InputFormat \-> (string)
.INDENT 0.0
.INDENT 3.5
The input format: \fBSequenceFileInputFormat\fP (binary), or \fBTextInputFormat\fP , or a custom format.
.UNINDENT
.UNINDENT
.sp
OutputFormat \-> (string)
.INDENT 0.0
.INDENT 3.5
The output format: \fBSequenceFileOutputFormat\fP (binary), or \fBIgnoreKeyTextOutputFormat\fP , or a custom format.
.UNINDENT
.UNINDENT
.sp
Compressed \-> (boolean)
.INDENT 0.0
.INDENT 3.5
\fBTrue\fP if the data in the table is compressed, or \fBFalse\fP if not.
.UNINDENT
.UNINDENT
.sp
NumberOfBuckets \-> (integer)
.INDENT 0.0
.INDENT 3.5
Must be specified if the table contains any dimension columns.
.UNINDENT
.UNINDENT
.sp
SerdeInfo \-> (structure)
.INDENT 0.0
.INDENT 3.5
The serialization/deserialization (SerDe) information.
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
Name of the SerDe.
.UNINDENT
.UNINDENT
.sp
SerializationLibrary \-> (string)
.INDENT 0.0
.INDENT 3.5
Usually the class that implements the SerDe. An example is \fBorg.apache.hadoop.hive.serde2.columnar.ColumnarSerDe\fP .
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
These key\-value pairs define initialization parameters for the SerDe.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
BucketColumns \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of reducer grouping columns, clustering columns, and bucketing columns in the table.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
SortColumns \-> (list)
.INDENT 0.0
.INDENT 3.5
A list specifying the sort order of each bucket in the table.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Specifies the sort order of a sorted column.
.sp
Column \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the column.
.UNINDENT
.UNINDENT
.sp
SortOrder \-> (integer)
.INDENT 0.0
.INDENT 3.5
Indicates that the column is sorted in ascending order (\fB== 1\fP ), or in descending order (\fB==0\fP ).
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
The user\-supplied properties in key\-value form.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
SkewedInfo \-> (structure)
.INDENT 0.0
.INDENT 3.5
The information about values that appear frequently in a column (skewed values).
.sp
SkewedColumnNames \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of names of columns that contain skewed values.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
SkewedColumnValues \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of values that appear so frequently as to be considered skewed.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
SkewedColumnValueLocationMaps \-> (map)
.INDENT 0.0
.INDENT 3.5
A mapping of skewed values to the columns that contain them.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
StoredAsSubDirectories \-> (boolean)
.INDENT 0.0
.INDENT 3.5
\fBTrue\fP if the table data is stored in subdirectories, or \fBFalse\fP if not.
.UNINDENT
.UNINDENT
.sp
SchemaReference \-> (structure)
.INDENT 0.0
.INDENT 3.5
An object that references a schema stored in the AWS Glue Schema Registry.
.sp
When creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.
.sp
SchemaId \-> (structure)
.INDENT 0.0
.INDENT 3.5
A structure that contains schema identity fields. Either this or the \fBSchemaVersionId\fP has to be provided.
.sp
SchemaArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) of the schema. One of \fBSchemaArn\fP or \fBSchemaName\fP has to be provided.
.UNINDENT
.UNINDENT
.sp
SchemaName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the schema. One of \fBSchemaArn\fP or \fBSchemaName\fP has to be provided.
.UNINDENT
.UNINDENT
.sp
RegistryName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the schema registry that contains the schema.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
SchemaVersionId \-> (string)
.INDENT 0.0
.INDENT 3.5
The unique ID assigned to a version of the schema. Either this or the \fBSchemaId\fP has to be provided.
.UNINDENT
.UNINDENT
.sp
SchemaVersionNumber \-> (long)
.INDENT 0.0
.INDENT 3.5
The version number of the schema.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
These key\-value pairs define partition parameters.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
LastAnalyzedTime \-> (timestamp)
.INDENT 0.0
.INDENT 3.5
The last time at which column statistics were computed for this partition.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "Values": ["string", ...],
  "LastAccessTime": timestamp,
  "StorageDescriptor": {
    "Columns": [
      {
        "Name": "string",
        "Type": "string",
        "Comment": "string",
        "Parameters": {"string": "string"
          ...}
      }
      ...
    ],
    "Location": "string",
    "InputFormat": "string",
    "OutputFormat": "string",
    "Compressed": true|false,
    "NumberOfBuckets": integer,
    "SerdeInfo": {
      "Name": "string",
      "SerializationLibrary": "string",
      "Parameters": {"string": "string"
        ...}
    },
    "BucketColumns": ["string", ...],
    "SortColumns": [
      {
        "Column": "string",
        "SortOrder": integer
      }
      ...
    ],
    "Parameters": {"string": "string"
      ...},
    "SkewedInfo": {
      "SkewedColumnNames": ["string", ...],
      "SkewedColumnValues": ["string", ...],
      "SkewedColumnValueLocationMaps": {"string": "string"
        ...}
    },
    "StoredAsSubDirectories": true|false,
    "SchemaReference": {
      "SchemaId": {
        "SchemaArn": "string",
        "SchemaName": "string",
        "RegistryName": "string"
      },
      "SchemaVersionId": "string",
      "SchemaVersionNumber": long
    }
  },
  "Parameters": {"string": "string"
    ...},
  "LastAnalyzedTime": timestamp
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
None
.\" Generated by docutils manpage writer.
.
