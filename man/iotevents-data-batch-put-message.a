.\" Man page generated from reStructuredText.
.
.TH "IOTEVENTS-DATA-BATCH-PUT-MESSAGE" "a" "" ""
.SH NAME
iotevents-data-batch-put-message \- Sends a set of messages to the AWS IoT Events system
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Sends a set of messages to the AWS IoT Events system. Each message payload is transformed into the input you specify (\fB"inputName"\fP ) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn\(aqt guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  batch\-put\-message
\-\-messages <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-messages\fP (list)
.INDENT 0.0
.INDENT 3.5
The list of messages to send. Each message has the following format: \fB\(aq{ "messageId": "string", "inputName": "string", "payload": "string"}\(aq\fP
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Information about a message.
.sp
messageId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID to assign to the message. Within each batch sent, each \fB"messageId"\fP must be unique.
.UNINDENT
.UNINDENT
.sp
inputName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the input into which the message payload is transformed.
.UNINDENT
.UNINDENT
.sp
payload \-> (blob)
.INDENT 0.0
.INDENT 3.5
The payload of the message. This can be a JSON string or a Base\-64\-encoded string representing binary data (in which case you must decode it).
.UNINDENT
.UNINDENT
.sp
timestamp \-> (structure)
.INDENT 0.0
.INDENT 3.5
The timestamp associated with the message.
.sp
timeInMillis \-> (long)
.INDENT 0.0
.INDENT 3.5
The value of the timestamp, in the Unix epoch format.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
messageId=string,inputName=string,payload=blob,timestamp={timeInMillis=long} ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "messageId": "string",
    "inputName": "string",
    "payload": blob,
    "timestamp": {
      "timeInMillis": long
    }
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo send messages (inputs) to AWS IoT Events\fP
.sp
The following \fBbatch\-put\-message\fP example sends a set of messages to the AWS IoT Events system. Each message payload is transformed into the input you specify ( \fBinputName\fP ) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn\(aqt guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws iotevents\-data batch\-put\-message \e
    \-\-cli\-input\-json file://highPressureMessage.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Contents of \fBhighPressureMessage.json\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "messages": [
        {
            "messageId": "00001",
            "inputName": "PressureInput",
            "payload": "{\e"motorid\e": \e"Fulton\-A32\e", \e"sensorData\e": {\e"pressure\e": 80, \e"temperature\e": 39} }"
        }
    ]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "BatchPutMessageErrorEntries": []
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%BatchPutMessage\fP in the \fIAWS IoT Events Developer Guide*\fP\&.
.SH OUTPUT
.sp
BatchPutMessageErrorEntries \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of any errors encountered when sending the messages.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Contains information about the errors encountered.
.sp
messageId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the message that caused the error. (See the value corresponding to the \fB"messageId"\fP key in the \fB"message"\fP object.)
.UNINDENT
.UNINDENT
.sp
errorCode \-> (string)
.INDENT 0.0
.INDENT 3.5
The error code.
.UNINDENT
.UNINDENT
.sp
errorMessage \-> (string)
.INDENT 0.0
.INDENT 3.5
A message that describes the error.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
