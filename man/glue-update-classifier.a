.\" Man page generated from reStructuredText.
.
.TH "GLUE-UPDATE-CLASSIFIER" "a" "" ""
.SH NAME
glue-update-classifier \- Modifies an existing classifier (a GrokClassifier , an XMLClassifier , a JsonClassifier , or a CsvClassifier , depending on which field is present)
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Modifies an existing classifier (a \fBGrokClassifier\fP , an \fBXMLClassifier\fP , a \fBJsonClassifier\fP , or a \fBCsvClassifier\fP , depending on which field is present).
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  update\-classifier
[\-\-grok\-classifier <value>]
[\-\-xml\-classifier <value>]
[\-\-json\-classifier <value>]
[\-\-csv\-classifier <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-grok\-classifier\fP (structure)
.INDENT 0.0
.INDENT 3.5
A \fBGrokClassifier\fP object with updated fields.
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the \fBGrokClassifier\fP .
.UNINDENT
.UNINDENT
.sp
Classification \-> (string)
.INDENT 0.0
.INDENT 3.5
An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.
.UNINDENT
.UNINDENT
.sp
GrokPattern \-> (string)
.INDENT 0.0
.INDENT 3.5
The grok pattern used by this classifier.
.UNINDENT
.UNINDENT
.sp
CustomPatterns \-> (string)
.INDENT 0.0
.INDENT 3.5
Optional custom grok patterns used by this classifier.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Name=string,Classification=string,GrokPattern=string,CustomPatterns=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "Name": "string",
  "Classification": "string",
  "GrokPattern": "string",
  "CustomPatterns": "string"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-xml\-classifier\fP (structure)
.INDENT 0.0
.INDENT 3.5
An \fBXMLClassifier\fP object with updated fields.
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the classifier.
.UNINDENT
.UNINDENT
.sp
Classification \-> (string)
.INDENT 0.0
.INDENT 3.5
An identifier of the data format that the classifier matches.
.UNINDENT
.UNINDENT
.sp
RowTag \-> (string)
.INDENT 0.0
.INDENT 3.5
The XML tag designating the element that contains each record in an XML document being parsed. This cannot identify a self\-closing element (closed by \fB/>\fP ). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, \fB<row item_a="A" item_b="B"></row>\fP is okay, but \fB<row item_a="A" item_b="B" />\fP is not).
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Name=string,Classification=string,RowTag=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "Name": "string",
  "Classification": "string",
  "RowTag": "string"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-json\-classifier\fP (structure)
.INDENT 0.0
.INDENT 3.5
A \fBJsonClassifier\fP object with updated fields.
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the classifier.
.UNINDENT
.UNINDENT
.sp
JsonPath \-> (string)
.INDENT 0.0
.INDENT 3.5
A \fBJsonPath\fP string defining the JSON data for the classifier to classify. AWS Glue supports a subset of JsonPath, as described in \fI\%Writing JsonPath Custom Classifiers\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Name=string,JsonPath=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "Name": "string",
  "JsonPath": "string"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-csv\-classifier\fP (structure)
.INDENT 0.0
.INDENT 3.5
A \fBCsvClassifier\fP object with updated fields.
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the classifier.
.UNINDENT
.UNINDENT
.sp
Delimiter \-> (string)
.INDENT 0.0
.INDENT 3.5
A custom symbol to denote what separates each column entry in the row.
.UNINDENT
.UNINDENT
.sp
QuoteSymbol \-> (string)
.INDENT 0.0
.INDENT 3.5
A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.
.UNINDENT
.UNINDENT
.sp
ContainsHeader \-> (string)
.INDENT 0.0
.INDENT 3.5
Indicates whether the CSV file contains a header.
.UNINDENT
.UNINDENT
.sp
Header \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of strings representing column names.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
DisableValueTrimming \-> (boolean)
.INDENT 0.0
.INDENT 3.5
Specifies not to trim values before identifying the type of column values. The default value is true.
.UNINDENT
.UNINDENT
.sp
AllowSingleColumn \-> (boolean)
.INDENT 0.0
.INDENT 3.5
Enables the processing of files that contain only one column.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Name=string,Delimiter=string,QuoteSymbol=string,ContainsHeader=string,Header=string,string,DisableValueTrimming=boolean,AllowSingleColumn=boolean
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "Name": "string",
  "Delimiter": "string",
  "QuoteSymbol": "string",
  "ContainsHeader": "UNKNOWN"|"PRESENT"|"ABSENT",
  "Header": ["string", ...],
  "DisableValueTrimming": true|false,
  "AllowSingleColumn": true|false
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
None
.\" Generated by docutils manpage writer.
.
