.\" Man page generated from reStructuredText.
.
.TH "GLUE-CREATE-TABLE" "a" "" ""
.SH NAME
glue-create-table \- Creates a new table definition in the Data Catalog
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Creates a new table definition in the Data Catalog.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  create\-table
[\-\-catalog\-id <value>]
\-\-database\-name <value>
\-\-table\-input <value>
[\-\-partition\-indexes <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-catalog\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The ID of the Data Catalog in which to create the \fBTable\fP . If none is supplied, the AWS account ID is used by default.
.UNINDENT
.UNINDENT
.sp
\fB\-\-database\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
The catalog database in which to create the new table. For Hive compatibility, this name is entirely lowercase.
.UNINDENT
.UNINDENT
.sp
\fB\-\-table\-input\fP (structure)
.INDENT 0.0
.INDENT 3.5
The \fBTableInput\fP object that defines the metadata table to create in the catalog.
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The table name. For Hive compatibility, this is folded to lowercase when it is stored.
.UNINDENT
.UNINDENT
.sp
Description \-> (string)
.INDENT 0.0
.INDENT 3.5
A description of the table.
.UNINDENT
.UNINDENT
.sp
Owner \-> (string)
.INDENT 0.0
.INDENT 3.5
The table owner.
.UNINDENT
.UNINDENT
.sp
LastAccessTime \-> (timestamp)
.INDENT 0.0
.INDENT 3.5
The last time that the table was accessed.
.UNINDENT
.UNINDENT
.sp
LastAnalyzedTime \-> (timestamp)
.INDENT 0.0
.INDENT 3.5
The last time that column statistics were computed for this table.
.UNINDENT
.UNINDENT
.sp
Retention \-> (integer)
.INDENT 0.0
.INDENT 3.5
The retention time for this table.
.UNINDENT
.UNINDENT
.sp
StorageDescriptor \-> (structure)
.INDENT 0.0
.INDENT 3.5
A storage descriptor containing information about the physical storage of this table.
.sp
Columns \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of the \fBColumns\fP in the table.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A column in a \fBTable\fP .
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the \fBColumn\fP .
.UNINDENT
.UNINDENT
.sp
Type \-> (string)
.INDENT 0.0
.INDENT 3.5
The data type of the \fBColumn\fP .
.UNINDENT
.UNINDENT
.sp
Comment \-> (string)
.INDENT 0.0
.INDENT 3.5
A free\-form text comment.
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
These key\-value pairs define properties associated with the column.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Location \-> (string)
.INDENT 0.0
.INDENT 3.5
The physical location of the table. By default, this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.
.UNINDENT
.UNINDENT
.sp
InputFormat \-> (string)
.INDENT 0.0
.INDENT 3.5
The input format: \fBSequenceFileInputFormat\fP (binary), or \fBTextInputFormat\fP , or a custom format.
.UNINDENT
.UNINDENT
.sp
OutputFormat \-> (string)
.INDENT 0.0
.INDENT 3.5
The output format: \fBSequenceFileOutputFormat\fP (binary), or \fBIgnoreKeyTextOutputFormat\fP , or a custom format.
.UNINDENT
.UNINDENT
.sp
Compressed \-> (boolean)
.INDENT 0.0
.INDENT 3.5
\fBTrue\fP if the data in the table is compressed, or \fBFalse\fP if not.
.UNINDENT
.UNINDENT
.sp
NumberOfBuckets \-> (integer)
.INDENT 0.0
.INDENT 3.5
Must be specified if the table contains any dimension columns.
.UNINDENT
.UNINDENT
.sp
SerdeInfo \-> (structure)
.INDENT 0.0
.INDENT 3.5
The serialization/deserialization (SerDe) information.
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
Name of the SerDe.
.UNINDENT
.UNINDENT
.sp
SerializationLibrary \-> (string)
.INDENT 0.0
.INDENT 3.5
Usually the class that implements the SerDe. An example is \fBorg.apache.hadoop.hive.serde2.columnar.ColumnarSerDe\fP .
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
These key\-value pairs define initialization parameters for the SerDe.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
BucketColumns \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of reducer grouping columns, clustering columns, and bucketing columns in the table.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
SortColumns \-> (list)
.INDENT 0.0
.INDENT 3.5
A list specifying the sort order of each bucket in the table.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Specifies the sort order of a sorted column.
.sp
Column \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the column.
.UNINDENT
.UNINDENT
.sp
SortOrder \-> (integer)
.INDENT 0.0
.INDENT 3.5
Indicates that the column is sorted in ascending order (\fB== 1\fP ), or in descending order (\fB==0\fP ).
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
The user\-supplied properties in key\-value form.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
SkewedInfo \-> (structure)
.INDENT 0.0
.INDENT 3.5
The information about values that appear frequently in a column (skewed values).
.sp
SkewedColumnNames \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of names of columns that contain skewed values.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
SkewedColumnValues \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of values that appear so frequently as to be considered skewed.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
SkewedColumnValueLocationMaps \-> (map)
.INDENT 0.0
.INDENT 3.5
A mapping of skewed values to the columns that contain them.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
StoredAsSubDirectories \-> (boolean)
.INDENT 0.0
.INDENT 3.5
\fBTrue\fP if the table data is stored in subdirectories, or \fBFalse\fP if not.
.UNINDENT
.UNINDENT
.sp
SchemaReference \-> (structure)
.INDENT 0.0
.INDENT 3.5
An object that references a schema stored in the AWS Glue Schema Registry.
.sp
When creating a table, you can pass an empty list of columns for the schema, and instead use a schema reference.
.sp
SchemaId \-> (structure)
.INDENT 0.0
.INDENT 3.5
A structure that contains schema identity fields. Either this or the \fBSchemaVersionId\fP has to be provided.
.sp
SchemaArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) of the schema. One of \fBSchemaArn\fP or \fBSchemaName\fP has to be provided.
.UNINDENT
.UNINDENT
.sp
SchemaName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the schema. One of \fBSchemaArn\fP or \fBSchemaName\fP has to be provided.
.UNINDENT
.UNINDENT
.sp
RegistryName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the schema registry that contains the schema.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
SchemaVersionId \-> (string)
.INDENT 0.0
.INDENT 3.5
The unique ID assigned to a version of the schema. Either this or the \fBSchemaId\fP has to be provided.
.UNINDENT
.UNINDENT
.sp
SchemaVersionNumber \-> (long)
.INDENT 0.0
.INDENT 3.5
The version number of the schema.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
PartitionKeys \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.
.sp
When you create a table used by Amazon Athena, and you do not specify any \fBpartitionKeys\fP , you must at least set the value of \fBpartitionKeys\fP to an empty list. For example:
.INDENT 0.0
.INDENT 3.5
\fB"PartitionKeys": []\fP
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A column in a \fBTable\fP .
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the \fBColumn\fP .
.UNINDENT
.UNINDENT
.sp
Type \-> (string)
.INDENT 0.0
.INDENT 3.5
The data type of the \fBColumn\fP .
.UNINDENT
.UNINDENT
.sp
Comment \-> (string)
.INDENT 0.0
.INDENT 3.5
A free\-form text comment.
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
These key\-value pairs define properties associated with the column.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
ViewOriginalText \-> (string)
.INDENT 0.0
.INDENT 3.5
If the table is a view, the original text of the view; otherwise \fBnull\fP .
.UNINDENT
.UNINDENT
.sp
ViewExpandedText \-> (string)
.INDENT 0.0
.INDENT 3.5
If the table is a view, the expanded text of the view; otherwise \fBnull\fP .
.UNINDENT
.UNINDENT
.sp
TableType \-> (string)
.INDENT 0.0
.INDENT 3.5
The type of this table (\fBEXTERNAL_TABLE\fP , \fBVIRTUAL_VIEW\fP , etc.).
.UNINDENT
.UNINDENT
.sp
Parameters \-> (map)
.INDENT 0.0
.INDENT 3.5
These key\-value pairs define properties associated with the table.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
TargetTable \-> (structure)
.INDENT 0.0
.INDENT 3.5
A \fBTableIdentifier\fP structure that describes a target table for resource linking.
.sp
CatalogId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the Data Catalog in which the table resides.
.UNINDENT
.UNINDENT
.sp
DatabaseName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the catalog database that contains the target table.
.UNINDENT
.UNINDENT
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the target table.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "Name": "string",
  "Description": "string",
  "Owner": "string",
  "LastAccessTime": timestamp,
  "LastAnalyzedTime": timestamp,
  "Retention": integer,
  "StorageDescriptor": {
    "Columns": [
      {
        "Name": "string",
        "Type": "string",
        "Comment": "string",
        "Parameters": {"string": "string"
          ...}
      }
      ...
    ],
    "Location": "string",
    "InputFormat": "string",
    "OutputFormat": "string",
    "Compressed": true|false,
    "NumberOfBuckets": integer,
    "SerdeInfo": {
      "Name": "string",
      "SerializationLibrary": "string",
      "Parameters": {"string": "string"
        ...}
    },
    "BucketColumns": ["string", ...],
    "SortColumns": [
      {
        "Column": "string",
        "SortOrder": integer
      }
      ...
    ],
    "Parameters": {"string": "string"
      ...},
    "SkewedInfo": {
      "SkewedColumnNames": ["string", ...],
      "SkewedColumnValues": ["string", ...],
      "SkewedColumnValueLocationMaps": {"string": "string"
        ...}
    },
    "StoredAsSubDirectories": true|false,
    "SchemaReference": {
      "SchemaId": {
        "SchemaArn": "string",
        "SchemaName": "string",
        "RegistryName": "string"
      },
      "SchemaVersionId": "string",
      "SchemaVersionNumber": long
    }
  },
  "PartitionKeys": [
    {
      "Name": "string",
      "Type": "string",
      "Comment": "string",
      "Parameters": {"string": "string"
        ...}
    }
    ...
  ],
  "ViewOriginalText": "string",
  "ViewExpandedText": "string",
  "TableType": "string",
  "Parameters": {"string": "string"
    ...},
  "TargetTable": {
    "CatalogId": "string",
    "DatabaseName": "string",
    "Name": "string"
  }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-partition\-indexes\fP (list)
.INDENT 0.0
.INDENT 3.5
A list of partition indexes, \fBPartitionIndex\fP structures, to create in the table.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A structure for a partition index.
.sp
Keys \-> (list)
.INDENT 0.0
.INDENT 3.5
The keys for the partition index.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
IndexName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the partition index.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Keys=string,string,IndexName=string ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "Keys": ["string", ...],
    "IndexName": "string"
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBExample 1: To create a table for a Kinesis data stream\fP
.sp
The following \fBcreate\-table\fP example creates a table in the AWS Glue Data Catalog that describes a Kinesis data stream.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws glue create\-table \e
    \-\-database\-name tempdb \e
    \-\-table\-input  \(aq{"Name":"test\-kinesis\-input", "StorageDescriptor":{ \e
        "Columns":[ \e
            {"Name":"sensorid", "Type":"int"}, \e
            {"Name":"currenttemperature", "Type":"int"}, \e
            {"Name":"status", "Type":"string"}
        ], \e
        "Location":"my\-testing\-stream", \e
        "Parameters":{ \e
            "typeOfData":"kinesis","streamName":"my\-testing\-stream", \e
            "kinesisUrl":"https://kinesis.us\-east\-1.amazonaws.com" \e
        }, \e
        "SerdeInfo":{ \e
            "SerializationLibrary":"org.openx.data.jsonserde.JsonSerDe"} \e
        }, \e
        "Parameters":{ \e
            "classification":"json"} \e
        }\(aq \e
    \-\-profile my\-profile \e
    \-\-endpoint https://glue.us\-east\-1.amazonaws.com
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This command produces no output.
.sp
For more information, see \fI\%Defining Tables in the AWS Glue Data Catalog\fP in the \fIAWS Glue Developer Guide\fP\&.
.sp
\fBExample 2: To create a table for a Kafka data store\fP
.sp
The following \fBcreate\-table\fP example creates a table in the AWS Glue Data Catalog that describes a Kafka data store.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws glue create\-table \e
    \-\-database\-name tempdb \e
    \-\-table\-input  \(aq{"Name":"test\-kafka\-input", "StorageDescriptor":{ \e
        "Columns":[ \e
            {"Name":"sensorid", "Type":"int"}, \e
            {"Name":"currenttemperature", "Type":"int"}, \e
            {"Name":"status", "Type":"string"}
        ], \e
        "Location":"glue\-topic", \e
        "Parameters":{ \e
            "typeOfData":"kafka","topicName":"glue\-topic", \e
            "connectionName":"my\-kafka\-connection"
        }, \e
        "SerdeInfo":{ \e
            "SerializationLibrary":"org.apache.hadoop.hive.serde2.OpenCSVSerde"} \e
        }, \e
        "Parameters":{ \e
            "separatorChar":","} \e
        }\(aq \e
    \-\-profile my\-profile \e
    \-\-endpoint https://glue.us\-east\-1.amazonaws.com
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This command produces no output.
.sp
For more information, see \fI\%Defining Tables in the AWS Glue Data Catalog\fP in the \fIAWS Glue Developer Guide\fP\&.
.sp
\fBExample 3: To create a table for a AWS S3 data store\fP
.sp
The following \fBcreate\-table\fP example creates a table in the AWS Glue Data Catalog that
describes a AWS Simple Storage Service (AWS S3) data store.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws glue create\-table \e
    \-\-database\-name tempdb \e
    \-\-table\-input  \(aq{"Name":"s3\-output", "StorageDescriptor":{ \e
        "Columns":[ \e
            {"Name":"s1", "Type":"string"}, \e
            {"Name":"s2", "Type":"int"}, \e
            {"Name":"s3", "Type":"string"}
        ], \e
        "Location":"s3://bucket\-path/"}, \e
        "SerdeInfo":{ \e
            "SerializationLibrary":"org.openx.data.jsonserde.JsonSerDe"}, \e
        "Parameters":{ \e
            "classification":"json"} \e
        }\(aq \e
    \-\-profile my\-profile \e
    \-\-endpoint https://glue.us\-east\-1.amazonaws.com
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This command produces no output.
.sp
For more information, see \fI\%Defining Tables in the AWS Glue Data Catalog\fP in the \fIAWS Glue Developer Guide\fP\&.
.SH OUTPUT
.sp
None
.\" Generated by docutils manpage writer.
.
