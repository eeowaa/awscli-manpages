.\" Man page generated from reStructuredText.
.
.TH "IOT-GET-CARDINALITY" "a" "" ""
.SH NAME
iot-get-cardinality \- Returns the approximate count of unique values that match the query
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Returns the approximate count of unique values that match the query.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  get\-cardinality
[\-\-index\-name <value>]
\-\-query\-string <value>
[\-\-aggregation\-field <value>]
[\-\-query\-version <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-index\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
The name of the index to search.
.UNINDENT
.UNINDENT
.sp
\fB\-\-query\-string\fP (string)
.INDENT 0.0
.INDENT 3.5
The search query.
.UNINDENT
.UNINDENT
.sp
\fB\-\-aggregation\-field\fP (string)
.INDENT 0.0
.INDENT 3.5
The field to aggregate.
.UNINDENT
.UNINDENT
.sp
\fB\-\-query\-version\fP (string)
.INDENT 0.0
.INDENT 3.5
The query version.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo return the approximate count of unique values that match the query\fP
.sp
You can use the following setup script to create 10 things representing 10 temperature sensors. Each new thing has 3 attributes.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Bash script. If in other shells, type \(gabash\(ga before running
Temperatures=(70 71 72 73 74 75 47 97 98 99)
Racks=(Rack1 Rack1 Rack2 Rack2 Rack3 Rack4 Rack5 Rack6 Rack6 Rack6)
IsNormal=(true true true true true true false false false false)
for ((i=0; i<10 ; i++))
do
  thing=$(aws iot create\-thing \-\-thing\-name "TempSensor$i" \-\-attribute\-payload attributes="{temperature=${Temperatures[i]},rackId=${Racks[i]},stateNormal=${IsNormal[i]}}")
  aws iot describe\-thing \-\-thing\-name "TempSensor$i"
done
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Example output of the setup script:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "version": 1,
    "thingName": "TempSensor0",
    "defaultClientId": "TempSensor0",
    "attributes": {
        "rackId": "Rack1",
        "stateNormal": "true",
        "temperature": "70"
    },
    "thingArn": "arn:aws:iot:us\-east\-1:123456789012:thing/TempSensor0",
    "thingId": "example1\-90ab\-cdef\-fedc\-ba987example"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following \fBget\-cardinality\fP example queries the 10 sensors created by the setup script and returns the number of racks that have temperature sensors reporting abnormal temperature values. If the temperature value is below 60 or above 80, the temperature sensor is in an abnormal state.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws iot get\-cardinality \e
    \-\-aggregation\-field "attributes.rackId" \e
    \-\-query\-string "thingName:TempSensor* AND attributes.stateNormal:false"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "cardinality": 2
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see 
.nf
\(gaQuerying for Aggregate Data<https://docs.aws.amazon.com/iot/latest/developerguide/index\-aggregate.html>\(ga__
.fi
 in the \fIAWS IoT Developer Guide\fP\&.
.SH OUTPUT
.sp
cardinality \-> (integer)
.INDENT 0.0
.INDENT 3.5
The approximate count of unique values that match the query.
.UNINDENT
.UNINDENT
.SH DOCUTILS SYSTEM MESSAGES
.IP "System Message: ERROR/3 (<string>:)"
Anonymous hyperlink mismatch: 1 references but 0 targets.
See "backrefs" attribute for IDs.
.\" Generated by docutils manpage writer.
.
