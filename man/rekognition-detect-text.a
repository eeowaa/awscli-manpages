.\" Man page generated from reStructuredText.
.
.TH "REKOGNITION-DETECT-TEXT" "a" "" ""
.SH NAME
rekognition-detect-text \- Detects text in the input image and converts it into machine-readable text
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Detects text in the input image and converts it into machine\-readable text.
.sp
Pass the input image as base64\-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, you must pass it as a reference to an image in an Amazon S3 bucket. For the AWS CLI, passing image bytes is not supported. The image must be either a .png or .jpeg formatted file.
.sp
The \fBDetectText\fP operation returns text in an array of  TextDetection elements, \fBTextDetections\fP . Each \fBTextDetection\fP element provides information about a single word or line of text that was detected in the image.
.sp
A word is one or more ISO basic latin script characters that are not separated by spaces. \fBDetectText\fP can detect up to 50 words in an image.
.sp
A line is a string of equally spaced words. A line isn\(aqt necessarily a complete sentence. For example, a driver\(aqs license number is detected as a line. A line ends when there is no aligned text after it. Also, a line ends when there is a large gap between words, relative to the length of the words. This means, depending on the gap between words, Amazon Rekognition may detect multiple lines in text aligned in the same direction. Periods don\(aqt represent the end of a line. If a sentence spans multiple lines, the \fBDetectText\fP operation returns multiple lines.
.sp
To determine whether a \fBTextDetection\fP element is a line of text or a word, use the \fBTextDetection\fP object \fBType\fP field.
.sp
To be detected, text must be within +/\- 90 degrees orientation of the horizontal axis.
.sp
For more information, see DetectText in the Amazon Rekognition Developer Guide.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  detect\-text
[\-\-image <value>]
[\-\-filters <value>]
[\-\-image\-bytes <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-image\fP (structure)
.INDENT 0.0
.INDENT 3.5
The input image as base64\-encoded bytes or an Amazon S3 object. If you use the AWS CLI to call Amazon Rekognition operations, you can\(aqt pass image bytes.
.sp
If you are using an AWS SDK to call Amazon Rekognition, you might not need to base64\-encode image bytes passed using the \fBBytes\fP field. For more information, see Images in the Amazon Rekognition developer guide.
.sp
To specify a local file use \fB\-\-image\-bytes\fP instead.
.sp
Bytes \-> (blob)
.INDENT 0.0
.INDENT 3.5
Blob of image bytes up to 5 MBs.
.UNINDENT
.UNINDENT
.sp
S3Object \-> (structure)
.INDENT 0.0
.INDENT 3.5
Identifies an S3 object as the image source.
.sp
Bucket \-> (string)
.INDENT 0.0
.INDENT 3.5
Name of the S3 bucket.
.UNINDENT
.UNINDENT
.sp
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
S3 object key name.
.UNINDENT
.UNINDENT
.sp
Version \-> (string)
.INDENT 0.0
.INDENT 3.5
If the bucket is versioning enabled, you can specify the object version.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Bytes=blob,S3Object={Bucket=string,Name=string,Version=string}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "Bytes": blob,
  "S3Object": {
    "Bucket": "string",
    "Name": "string",
    "Version": "string"
  }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-filters\fP (structure)
.INDENT 0.0
.INDENT 3.5
Optional parameters that let you set the criteria that the text must meet to be included in your response.
.sp
WordFilter \-> (structure)
.INDENT 0.0
.INDENT 3.5
A set of parameters that allow you to filter out certain results from your returned results.
.sp
MinConfidence \-> (float)
.INDENT 0.0
.INDENT 3.5
Sets the confidence of word detection. Words with detection confidence below this will be excluded from the result. Values should be between 50 and 100 as Text in Video will not return any result below 50.
.UNINDENT
.UNINDENT
.sp
MinBoundingBoxHeight \-> (float)
.INDENT 0.0
.INDENT 3.5
Sets the minimum height of the word bounding box. Words with bounding box heights lesser than this value will be excluded from the result. Value is relative to the video frame height.
.UNINDENT
.UNINDENT
.sp
MinBoundingBoxWidth \-> (float)
.INDENT 0.0
.INDENT 3.5
Sets the minimum width of the word bounding box. Words with bounding boxes widths lesser than this value will be excluded from the result. Value is relative to the video frame width.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
RegionsOfInterest \-> (list)
.INDENT 0.0
.INDENT 3.5
A Filter focusing on a certain area of the image. Uses a \fBBoundingBox\fP object to set the region of the image.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Specifies a location within the frame that Rekognition checks for text. Uses a \fBBoundingBox\fP object to set a region of the screen.
.sp
A word is included in the region if the word is more than half in that region. If there is more than one region, the word will be compared with all regions of the screen. Any word more than half in a region is kept in the results.
.sp
BoundingBox \-> (structure)
.INDENT 0.0
.INDENT 3.5
The box representing a region of interest on screen.
.sp
Width \-> (float)
.INDENT 0.0
.INDENT 3.5
Width of the bounding box as a ratio of the overall image width.
.UNINDENT
.UNINDENT
.sp
Height \-> (float)
.INDENT 0.0
.INDENT 3.5
Height of the bounding box as a ratio of the overall image height.
.UNINDENT
.UNINDENT
.sp
Left \-> (float)
.INDENT 0.0
.INDENT 3.5
Left coordinate of the bounding box as a ratio of overall image width.
.UNINDENT
.UNINDENT
.sp
Top \-> (float)
.INDENT 0.0
.INDENT 3.5
Top coordinate of the bounding box as a ratio of overall image height.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "WordFilter": {
    "MinConfidence": float,
    "MinBoundingBoxHeight": float,
    "MinBoundingBoxWidth": float
  },
  "RegionsOfInterest": [
    {
      "BoundingBox": {
        "Width": float,
        "Height": float,
        "Left": float,
        "Top": float
      }
    }
    ...
  ]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-image\-bytes\fP (blob)
.INDENT 0.0
.INDENT 3.5
The content of the image to be uploaded. To specify the content of a local file use the fileb:// prefix. Example: fileb://image.png
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo detect text in an image\fP
.sp
The following \fBdetect\-text\fP command detects text in the specified image.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws rekognition detect\-text \e
    \-\-image \(aq{"S3Object":{"Bucket":"MyImageS3Bucket","Name":"ExamplePicture.jpg"}}\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "TextDetections": [
        {
            "Geometry": {
                "BoundingBox": {
                    "Width": 0.24624845385551453,
                    "Top": 0.28288066387176514,
                    "Left": 0.391388863325119,
                    "Height": 0.022687450051307678
                },
                "Polygon": [
                    {
                        "Y": 0.28288066387176514,
                        "X": 0.391388863325119
                    },
                    {
                        "Y": 0.2826388478279114,
                        "X": 0.6376373171806335
                    },
                    {
                        "Y": 0.30532628297805786,
                        "X": 0.637677013874054
                    },
                    {
                        "Y": 0.305568128824234,
                        "X": 0.39142853021621704
                    }
                ]
            },
            "Confidence": 94.35709381103516,
            "DetectedText": "ESTD 1882",
            "Type": "LINE",
            "Id": 0
        },
        {
            "Geometry": {
                "BoundingBox": {
                    "Width": 0.33933889865875244,
                    "Top": 0.32603850960731506,
                    "Left": 0.34534579515457153,
                    "Height": 0.07126858830451965
                },
                "Polygon": [
                    {
                        "Y": 0.32603850960731506,
                        "X": 0.34534579515457153
                    },
                    {
                        "Y": 0.32633158564567566,
                        "X": 0.684684693813324
                    },
                    {
                        "Y": 0.3976001739501953,
                        "X": 0.684575080871582
                    },
                    {
                        "Y": 0.3973070979118347,
                        "X": 0.345236212015152
                    }
                ]
            },
            "Confidence": 99.95779418945312,
            "DetectedText": "BRAINS",
            "Type": "LINE",
            "Id": 1
        },
        {
            "Confidence": 97.22098541259766,
            "Geometry": {
                "BoundingBox": {
                    "Width": 0.061079490929841995,
                    "Top": 0.2843210697174072,
                    "Left": 0.391391396522522,
                    "Height": 0.021029088646173477
                },
                "Polygon": [
                    {
                        "Y": 0.2843210697174072,
                        "X": 0.391391396522522
                    },
                    {
                        "Y": 0.2828207015991211,
                        "X": 0.4524524509906769
                    },
                    {
                        "Y": 0.3038259446620941,
                        "X": 0.4534534513950348
                    },
                    {
                        "Y": 0.30532634258270264,
                        "X": 0.3923923969268799
                    }
                ]
            },
            "DetectedText": "ESTD",
            "ParentId": 0,
            "Type": "WORD",
            "Id": 2
        },
        {
            "Confidence": 91.49320983886719,
            "Geometry": {
                "BoundingBox": {
                    "Width": 0.07007007300853729,
                    "Top": 0.2828207015991211,
                    "Left": 0.5675675868988037,
                    "Height": 0.02250562608242035
                },
                "Polygon": [
                    {
                        "Y": 0.2828207015991211,
                        "X": 0.5675675868988037
                    },
                    {
                        "Y": 0.2828207015991211,
                        "X": 0.6376376152038574
                    },
                    {
                        "Y": 0.30532634258270264,
                        "X": 0.6376376152038574
                    },
                    {
                        "Y": 0.30532634258270264,
                        "X": 0.5675675868988037
                    }
                ]
            },
            "DetectedText": "1882",
            "ParentId": 0,
            "Type": "WORD",
            "Id": 3
        },
        {
            "Confidence": 99.95779418945312,
            "Geometry": {
                "BoundingBox": {
                    "Width": 0.33933934569358826,
                    "Top": 0.32633158564567566,
                    "Left": 0.3453453481197357,
                    "Height": 0.07127484679222107
                },
                "Polygon": [
                    {
                        "Y": 0.32633158564567566,
                        "X": 0.3453453481197357
                    },
                    {
                        "Y": 0.32633158564567566,
                        "X": 0.684684693813324
                    },
                    {
                        "Y": 0.39759939908981323,
                        "X": 0.6836836934089661
                    },
                    {
                        "Y": 0.39684921503067017,
                        "X": 0.3453453481197357
                    }
                ]
            },
            "DetectedText": "BRAINS",
            "ParentId": 1,
            "Type": "WORD",
            "Id": 4
        }
    ]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OUTPUT
.sp
TextDetections \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of text that was detected in the input image.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Information about a word or line of text detected by  DetectText .
.sp
The \fBDetectedText\fP field contains the text that Amazon Rekognition detected in the image.
.sp
Every word and line has an identifier (\fBId\fP ). Each word belongs to a line and has a parent identifier (\fBParentId\fP ) that identifies the line of text in which the word appears. The word \fBId\fP is also an index for the word within a line of words.
.sp
For more information, see Detecting Text in the Amazon Rekognition Developer Guide.
.sp
DetectedText \-> (string)
.INDENT 0.0
.INDENT 3.5
The word or line of text recognized by Amazon Rekognition.
.UNINDENT
.UNINDENT
.sp
Type \-> (string)
.INDENT 0.0
.INDENT 3.5
The type of text that was detected.
.UNINDENT
.UNINDENT
.sp
Id \-> (integer)
.INDENT 0.0
.INDENT 3.5
The identifier for the detected text. The identifier is only unique for a single call to \fBDetectText\fP .
.UNINDENT
.UNINDENT
.sp
ParentId \-> (integer)
.INDENT 0.0
.INDENT 3.5
The Parent identifier for the detected text identified by the value of \fBID\fP . If the type of detected text is \fBLINE\fP , the value of \fBParentId\fP is \fBNull\fP .
.UNINDENT
.UNINDENT
.sp
Confidence \-> (float)
.INDENT 0.0
.INDENT 3.5
The confidence that Amazon Rekognition has in the accuracy of the detected text and the accuracy of the geometry points around the detected text.
.UNINDENT
.UNINDENT
.sp
Geometry \-> (structure)
.INDENT 0.0
.INDENT 3.5
The location of the detected text on the image. Includes an axis aligned coarse bounding box surrounding the text and a finer grain polygon for more accurate spatial information.
.sp
BoundingBox \-> (structure)
.INDENT 0.0
.INDENT 3.5
An axis\-aligned coarse representation of the detected item\(aqs location on the image.
.sp
Width \-> (float)
.INDENT 0.0
.INDENT 3.5
Width of the bounding box as a ratio of the overall image width.
.UNINDENT
.UNINDENT
.sp
Height \-> (float)
.INDENT 0.0
.INDENT 3.5
Height of the bounding box as a ratio of the overall image height.
.UNINDENT
.UNINDENT
.sp
Left \-> (float)
.INDENT 0.0
.INDENT 3.5
Left coordinate of the bounding box as a ratio of overall image width.
.UNINDENT
.UNINDENT
.sp
Top \-> (float)
.INDENT 0.0
.INDENT 3.5
Top coordinate of the bounding box as a ratio of overall image height.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Polygon \-> (list)
.INDENT 0.0
.INDENT 3.5
Within the bounding box, a fine\-grained polygon around the detected item.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The X and Y coordinates of a point on an image. The X and Y values returned are ratios of the overall image size. For example, if the input image is 700x200 and the operation returns X=0.5 and Y=0.25, then the point is at the (350,50) pixel coordinate on the image.
.sp
An array of \fBPoint\fP objects, \fBPolygon\fP , is returned by  DetectText and by  DetectCustomLabels . \fBPolygon\fP represents a fine\-grained polygon around a detected item. For more information, see Geometry in the Amazon Rekognition Developer Guide.
.sp
X \-> (float)
.INDENT 0.0
.INDENT 3.5
The value of the X coordinate for a point on a \fBPolygon\fP .
.UNINDENT
.UNINDENT
.sp
Y \-> (float)
.INDENT 0.0
.INDENT 3.5
The value of the Y coordinate for a point on a \fBPolygon\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
TextModelVersion \-> (string)
.INDENT 0.0
.INDENT 3.5
The model version used to detect text.
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
