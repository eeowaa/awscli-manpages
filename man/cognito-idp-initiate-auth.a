.\" Man page generated from reStructuredText.
.
.TH "COGNITO-IDP-INITIATE-AUTH" "a" "" ""
.SH NAME
cognito-idp-initiate-auth \- Initiates the authentication flow
.SH DESCRIPTION
.sp
Initiates the authentication flow.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  initiate\-auth
\-\-auth\-flow <value>
[\-\-auth\-parameters <value>]
[\-\-client\-metadata <value>]
\-\-client\-id <value>
[\-\-analytics\-metadata <value>]
[\-\-user\-context\-data <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-auth\-flow\fP (string)
.INDENT 0.0
.INDENT 3.5
The authentication flow for this call to execute. The API action will depend on this value. For example:
.INDENT 0.0
.IP \(bu 2
\fBREFRESH_TOKEN_AUTH\fP will take in a valid refresh token and return new tokens.
.IP \(bu 2
\fBUSER_SRP_AUTH\fP will take in \fBUSERNAME\fP and \fBSRP_A\fP and return the SRP variables to be used for next challenge execution.
.IP \(bu 2
\fBUSER_PASSWORD_AUTH\fP will take in \fBUSERNAME\fP and \fBPASSWORD\fP and return the next challenge or tokens.
.UNINDENT
.sp
Valid values include:
.INDENT 0.0
.IP \(bu 2
\fBUSER_SRP_AUTH\fP : Authentication flow for the Secure Remote Password (SRP) protocol.
.IP \(bu 2
\fBREFRESH_TOKEN_AUTH\fP /\fBREFRESH_TOKEN\fP : Authentication flow for refreshing the access token and ID token by supplying a valid refresh token.
.IP \(bu 2
\fBCUSTOM_AUTH\fP : Custom authentication flow.
.IP \(bu 2
\fBUSER_PASSWORD_AUTH\fP : Non\-SRP authentication flow; USERNAME and PASSWORD are passed directly. If a user migration Lambda trigger is set, this flow will invoke the user migration Lambda if the USERNAME is not found in the user pool.
.IP \(bu 2
\fBADMIN_USER_PASSWORD_AUTH\fP : Admin\-based user password authentication. This replaces the \fBADMIN_NO_SRP_AUTH\fP authentication flow. In this flow, Cognito receives the password in the request instead of using the SRP process to verify passwords.
.UNINDENT
.INDENT 0.0
.INDENT 3.5
\fBADMIN_NO_SRP_AUTH\fP is not a valid value.
.UNINDENT
.UNINDENT
.sp
Possible values:
.INDENT 0.0
.IP \(bu 2
\fBUSER_SRP_AUTH\fP
.IP \(bu 2
\fBREFRESH_TOKEN_AUTH\fP
.IP \(bu 2
\fBREFRESH_TOKEN\fP
.IP \(bu 2
\fBCUSTOM_AUTH\fP
.IP \(bu 2
\fBADMIN_NO_SRP_AUTH\fP
.IP \(bu 2
\fBUSER_PASSWORD_AUTH\fP
.IP \(bu 2
\fBADMIN_USER_PASSWORD_AUTH\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-auth\-parameters\fP (map)
.INDENT 0.0
.INDENT 3.5
The authentication parameters. These are inputs corresponding to the \fBAuthFlow\fP that you are invoking. The required values depend on the value of \fBAuthFlow\fP :
.INDENT 0.0
.IP \(bu 2
For \fBUSER_SRP_AUTH\fP : \fBUSERNAME\fP (required), \fBSRP_A\fP (required), \fBSECRET_HASH\fP (required if the app client is configured with a client secret), \fBDEVICE_KEY\fP .
.IP \(bu 2
For \fBREFRESH_TOKEN_AUTH/REFRESH_TOKEN\fP : \fBREFRESH_TOKEN\fP (required), \fBSECRET_HASH\fP (required if the app client is configured with a client secret), \fBDEVICE_KEY\fP .
.IP \(bu 2
For \fBCUSTOM_AUTH\fP : \fBUSERNAME\fP (required), \fBSECRET_HASH\fP (if app client is configured with client secret), \fBDEVICE_KEY\fP . To start the authentication flow with password verification, include \fBChallengeName: SRP_A\fP and \fBSRP_A: (The SRP_A Value)\fP .
.UNINDENT
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
KeyName1=string,KeyName2=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"string": "string"
  ...}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-client\-metadata\fP (map)
.INDENT 0.0
.INDENT 3.5
A map of custom key\-value pairs that you can provide as input for certain custom workflows that this action triggers.
.sp
You create custom workflows by assigning AWS Lambda functions to user pool triggers. When you use the InitiateAuth API action, Amazon Cognito invokes the AWS Lambda functions that are specified for various triggers. The ClientMetadata value is passed as input to the functions for only the following triggers:
.INDENT 0.0
.IP \(bu 2
Pre signup
.IP \(bu 2
Pre authentication
.IP \(bu 2
User migration
.UNINDENT
.sp
When Amazon Cognito invokes the functions for these triggers, it passes a JSON payload, which the function receives as input. This payload contains a \fBvalidationData\fP attribute, which provides the data that you assigned to the ClientMetadata parameter in your InitiateAuth request. In your function code in AWS Lambda, you can process the \fBvalidationData\fP value to enhance your workflow for your specific needs.
.sp
When you use the InitiateAuth API action, Amazon Cognito also invokes the functions for the following triggers, but it does not provide the ClientMetadata value as input:
.INDENT 0.0
.IP \(bu 2
Post authentication
.IP \(bu 2
Custom message
.IP \(bu 2
Pre token generation
.IP \(bu 2
Create auth challenge
.IP \(bu 2
Define auth challenge
.IP \(bu 2
Verify auth challenge
.UNINDENT
.sp
For more information, see \fI\%Customizing User Pool Workflows with Lambda Triggers\fP in the \fIAmazon Cognito Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Take the following limitations into consideration when you use the ClientMetadata parameter:
.INDENT 0.0
.IP \(bu 2
Amazon Cognito does not store the ClientMetadata value. This data is available only to AWS Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose.
.IP \(bu 2
Amazon Cognito does not validate the ClientMetadata value.
.IP \(bu 2
Amazon Cognito does not encrypt the the ClientMetadata value, so don\(aqt use it to provide sensitive information.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
KeyName1=string,KeyName2=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"string": "string"
  ...}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-client\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The app client ID.
.UNINDENT
.UNINDENT
.sp
\fB\-\-analytics\-metadata\fP (structure)
.INDENT 0.0
.INDENT 3.5
The Amazon Pinpoint analytics metadata for collecting metrics for \fBInitiateAuth\fP calls.
.sp
AnalyticsEndpointId \-> (string)
.INDENT 0.0
.INDENT 3.5
The endpoint ID.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
AnalyticsEndpointId=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "AnalyticsEndpointId": "string"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-user\-context\-data\fP (structure)
.INDENT 0.0
.INDENT 3.5
Contextual data such as the user\(aqs device fingerprint, IP address, or location used for evaluating the risk of an unexpected event by Amazon Cognito advanced security.
.sp
EncodedData \-> (string)
.INDENT 0.0
.INDENT 3.5
Contextual data such as the user\(aqs device fingerprint, IP address, or location used for evaluating the risk of an unexpected event by Amazon Cognito advanced security.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
EncodedData=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "EncodedData": "string"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
ChallengeName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the challenge which you are responding to with this call. This is returned to you in the \fBAdminInitiateAuth\fP response if you need to pass another challenge.
.sp
Valid values include the following. Note that all of these challenges require \fBUSERNAME\fP and \fBSECRET_HASH\fP (if applicable) in the parameters.
.INDENT 0.0
.IP \(bu 2
\fBSMS_MFA\fP : Next challenge is to supply an \fBSMS_MFA_CODE\fP , delivered via SMS.
.IP \(bu 2
\fBPASSWORD_VERIFIER\fP : Next challenge is to supply \fBPASSWORD_CLAIM_SIGNATURE\fP , \fBPASSWORD_CLAIM_SECRET_BLOCK\fP , and \fBTIMESTAMP\fP after the client\-side SRP calculations.
.IP \(bu 2
\fBCUSTOM_CHALLENGE\fP : This is returned if your custom authentication flow determines that the user should pass another challenge before tokens are issued.
.IP \(bu 2
\fBDEVICE_SRP_AUTH\fP : If device tracking was enabled on your user pool and the previous challenges were passed, this challenge is returned so that Amazon Cognito can start tracking this device.
.IP \(bu 2
\fBDEVICE_PASSWORD_VERIFIER\fP : Similar to \fBPASSWORD_VERIFIER\fP , but for devices only.
.IP \(bu 2
\fBNEW_PASSWORD_REQUIRED\fP : For users who are required to change their passwords after successful first login. This challenge should be passed with \fBNEW_PASSWORD\fP and any other required attributes.
.IP \(bu 2
\fBMFA_SETUP\fP : For users who are required to setup an MFA factor before they can sign\-in. The MFA types enabled for the user pool will be listed in the challenge parameters \fBMFA_CAN_SETUP\fP value.  To setup software token MFA, use the session returned here from \fBInitiateAuth\fP as an input to \fBAssociateSoftwareToken\fP , and use the session returned by \fBVerifySoftwareToken\fP as an input to \fBRespondToAuthChallenge\fP with challenge name \fBMFA_SETUP\fP to complete sign\-in. To setup SMS MFA, users will need help from an administrator to add a phone number to their account and then call \fBInitiateAuth\fP again to restart sign\-in.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Session \-> (string)
.INDENT 0.0
.INDENT 3.5
The session which should be passed both ways in challenge\-response calls to the service. If the caller needs to go through another challenge, they return a session with other challenge parameters. This session should be passed as it is to the next \fBRespondToAuthChallenge\fP API call.
.UNINDENT
.UNINDENT
.sp
ChallengeParameters \-> (map)
.INDENT 0.0
.INDENT 3.5
The challenge parameters. These are returned to you in the \fBInitiateAuth\fP response if you need to pass another challenge. The responses in this parameter should be used to compute inputs to the next call (\fBRespondToAuthChallenge\fP ).
.sp
All challenges require \fBUSERNAME\fP and \fBSECRET_HASH\fP (if applicable).
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
AuthenticationResult \-> (structure)
.INDENT 0.0
.INDENT 3.5
The result of the authentication response. This is only returned if the caller does not need to pass another challenge. If the caller does need to pass another challenge before it gets tokens, \fBChallengeName\fP , \fBChallengeParameters\fP , and \fBSession\fP are returned.
.sp
AccessToken \-> (string)
.INDENT 0.0
.INDENT 3.5
The access token.
.UNINDENT
.UNINDENT
.sp
ExpiresIn \-> (integer)
.INDENT 0.0
.INDENT 3.5
The expiration period of the authentication result in seconds.
.UNINDENT
.UNINDENT
.sp
TokenType \-> (string)
.INDENT 0.0
.INDENT 3.5
The token type.
.UNINDENT
.UNINDENT
.sp
RefreshToken \-> (string)
.INDENT 0.0
.INDENT 3.5
The refresh token.
.UNINDENT
.UNINDENT
.sp
IdToken \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID token.
.UNINDENT
.UNINDENT
.sp
NewDeviceMetadata \-> (structure)
.INDENT 0.0
.INDENT 3.5
The new device metadata from an authentication result.
.sp
DeviceKey \-> (string)
.INDENT 0.0
.INDENT 3.5
The device key.
.UNINDENT
.UNINDENT
.sp
DeviceGroupKey \-> (string)
.INDENT 0.0
.INDENT 3.5
The device group key.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
