.\" Man page generated from reStructuredText.
.
.TH "LICENSE-MANAGER-UPDATE-LICENSE-MANAGER-REPORT-GENERATOR" "a" "" ""
.SH NAME
license-manager-update-license-manager-report-generator \- Updates a report generator
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Updates a report generator.
.sp
After you make changes to a report generator, it will start generating new reports within 60 minutes of being updated.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  update\-license\-manager\-report\-generator
\-\-license\-manager\-report\-generator\-arn <value>
\-\-report\-generator\-name <value>
\-\-type <value>
\-\-report\-context <value>
\-\-report\-frequency <value>
\-\-client\-token <value>
[\-\-description <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-license\-manager\-report\-generator\-arn\fP (string)
.INDENT 0.0
.INDENT 3.5
Amazon Resource Number (ARN) of the report generator to update.
.UNINDENT
.UNINDENT
.sp
\fB\-\-report\-generator\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
Name of the report generator.
.UNINDENT
.UNINDENT
.sp
\fB\-\-type\fP (list)
.INDENT 0.0
.INDENT 3.5
Type of reports to generate. The following report types an be generated:
.INDENT 0.0
.IP \(bu 2
License configuration report \- Reports on the number and details of consumed licenses for a license configuration.
.IP \(bu 2
Resource report \- Reports on the tracked licenses and resource consumption for a license configuration.
.UNINDENT
.sp
(string)
.UNINDENT
.UNINDENT
.sp
Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
"string" "string" ...

Where valid values are:
  LicenseConfigurationSummaryReport
  LicenseConfigurationUsageReport
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-report\-context\fP (structure)
.INDENT 0.0
.INDENT 3.5
?
.sp
licenseConfigurationArns \-> (list)
.INDENT 0.0
.INDENT 3.5
Amazon Resource Number (ARN) of the license configuration that this generator reports on.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
licenseConfigurationArns=string,string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "licenseConfigurationArns": ["string", ...]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-report\-frequency\fP (structure)
.INDENT 0.0
.INDENT 3.5
Frequency by which reports are generated. The following options are avaiable:
.sp
??? What are the APi value options?
.sp
value \-> (integer)
.INDENT 0.0
.INDENT 3.5
Number of times within the frequency period that a report will be generated. Currently only \fB1\fP is supported.
.UNINDENT
.UNINDENT
.sp
period \-> (string)
.INDENT 0.0
.INDENT 3.5
Time period between each report. The period can be daily, weekly, or monthly.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
value=integer,period=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "value": integer,
  "period": "DAY"|"WEEK"|"MONTH"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-client\-token\fP (string)
.INDENT 0.0
.INDENT 3.5
Unique, case\-sensitive identifier that you provide to ensure the idempotency of the request.
.UNINDENT
.UNINDENT
.sp
\fB\-\-description\fP (string)
.INDENT 0.0
.INDENT 3.5
Description of the report generator.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
None
.\" Generated by docutils manpage writer.
.
