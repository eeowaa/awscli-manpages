.\" Man page generated from reStructuredText.
.
.TH "BATCH-CREATE-COMPUTE-ENVIRONMENT" "a" "" ""
.SH NAME
batch-create-compute-environment \- Creates an AWS Batch compute environment
.SH DESCRIPTION
.sp
Creates an AWS Batch compute environment. You can create \fBMANAGED\fP or \fBUNMANAGED\fP compute environments. \fBMANAGED\fP compute environments can use Amazon EC2 or AWS Fargate resources. \fBUNMANAGED\fP compute environments can only use EC2 resources.
.sp
In a managed compute environment, AWS Batch manages the capacity and instance types of the compute resources within the environment. This is based on the compute resource specification that you define or the \fI\%launch template\fP that you specify when you create the compute environment. Either, you can choose to use EC2 On\-Demand Instances and EC2 Spot Instances. Or, you can use Fargate and Fargate Spot capacity in your managed compute environment. You can optionally set a maximum price so that Spot Instances only launch when the Spot Instance price is less than a specified percentage of the On\-Demand price.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Multi\-node parallel jobs aren\(aqt supported on Spot Instances.
.UNINDENT
.UNINDENT
.sp
In an unmanaged compute environment, you can manage your own EC2 compute resources and have a lot of flexibility with how you configure your compute resources. For example, you can use custom AMIs. However, you must verify that each of your AMIs meet the Amazon ECS container instance AMI specification. For more information, see \fI\%container instance AMIs\fP in the \fIAmazon Elastic Container Service Developer Guide\fP . After you created your unmanaged compute environment, you can use the  DescribeComputeEnvironments operation to find the Amazon ECS cluster that\(aqs associated with it. Then, launch your container instances into that Amazon ECS cluster. For more information, see \fI\%Launching an Amazon ECS container instance\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
AWS Batch doesn\(aqt upgrade the AMIs in a compute environment after the environment is created. For example, it doesn\(aqt update the AMIs when a newer version of the Amazon ECS optimized AMI is available. Therefore, you\(aqre responsible for managing the guest operating system (including its updates and security patches) and any additional application software or utilities that you install on the compute resources. To use a new AMI for your AWS Batch jobs, complete these steps:
.INDENT 0.0
.IP \(bu 2
Create a new compute environment with the new AMI.
.IP \(bu 2
Add the compute environment to an existing job queue.
.IP \(bu 2
Remove the earlier compute environment from your job queue.
.IP \(bu 2
Delete the earlier compute environment.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  create\-compute\-environment
\-\-compute\-environment\-name <value>
\-\-type <value>
[\-\-state <value>]
[\-\-compute\-resources <value>]
[\-\-service\-role <value>]
[\-\-tags <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-compute\-environment\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.
.UNINDENT
.UNINDENT
.sp
\fB\-\-type\fP (string)
.INDENT 0.0
.INDENT 3.5
The type of the compute environment: \fBMANAGED\fP or \fBUNMANAGED\fP . For more information, see \fI\%Compute Environments\fP in the \fIAWS Batch User Guide\fP .
.sp
Possible values:
.INDENT 0.0
.IP \(bu 2
\fBMANAGED\fP
.IP \(bu 2
\fBUNMANAGED\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-state\fP (string)
.INDENT 0.0
.INDENT 3.5
The state of the compute environment. If the state is \fBENABLED\fP , then the compute environment accepts jobs from a queue and can scale out automatically based on queues.
.sp
If the state is \fBENABLED\fP , then the AWS Batch scheduler can attempt to place jobs from an associated job queue on the compute resources within the environment. If the compute environment is managed, then it can scale its instances out or in automatically, based on the job queue demand.
.sp
If the state is \fBDISABLED\fP , then the AWS Batch scheduler doesn\(aqt attempt to place jobs within the environment. Jobs in a \fBSTARTING\fP or \fBRUNNING\fP state continue to progress normally. Managed compute environments in the \fBDISABLED\fP state don\(aqt scale out. However, they scale in to \fBminvCpus\fP value after instances become idle.
.sp
Possible values:
.INDENT 0.0
.IP \(bu 2
\fBENABLED\fP
.IP \(bu 2
\fBDISABLED\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-compute\-resources\fP (structure)
.INDENT 0.0
.INDENT 3.5
Details about the compute resources managed by the compute environment. This parameter is required for managed compute environments. For more information, see \fI\%Compute Environments\fP in the \fIAWS Batch User Guide\fP .
.sp
type \-> (string)
.INDENT 0.0
.INDENT 3.5
The type of compute environment: \fBEC2\fP , \fBSPOT\fP , \fBFARGATE\fP , or \fBFARGATE_SPOT\fP . For more information, see \fI\%Compute Environments\fP in the \fIAWS Batch User Guide\fP .
.sp
If you choose \fBSPOT\fP , you must also specify an Amazon EC2 Spot Fleet role with the \fBspotIamFleetRole\fP parameter. For more information, see \fI\%Amazon EC2 Spot Fleet role\fP in the \fIAWS Batch User Guide\fP .
.UNINDENT
.UNINDENT
.sp
allocationStrategy \-> (string)
.INDENT 0.0
.INDENT 3.5
The allocation strategy to use for the compute resource if not enough instances of the best fitting instance type can be allocated. This might be because of availability of the instance type in the Region or \fI\%Amazon EC2 service limits\fP . For more information, see \fI\%Allocation Strategies\fP in the \fIAWS Batch User Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.sp
BEST_FIT (default)
.UNINDENT
.UNINDENT
.sp
AWS Batch selects an instance type that best fits the needs of the jobs with a preference for the lowest\-cost instance type. If additional instances of the selected instance type aren\(aqt available, AWS Batch waits for the additional instances to be available. If there aren\(aqt enough instances available, or if the user is hitting \fI\%Amazon EC2 service limits\fP then additional jobs aren\(aqt run until the currently running jobs have completed. This allocation strategy keeps costs lower but can limit scaling. If you are using Spot Fleets with \fBBEST_FIT\fP then the Spot Fleet IAM Role must be specified.
.INDENT 0.0
.INDENT 3.5
BEST_FIT_PROGRESSIVE
.UNINDENT
.UNINDENT
.sp
AWS Batch will select additional instance types that are large enough to meet the requirements of the jobs in the queue, with a preference for instance types with a lower cost per unit vCPU. If additional instances of the previously selected instance types aren\(aqt available, AWS Batch will select new instance types.
.INDENT 0.0
.INDENT 3.5
SPOT_CAPACITY_OPTIMIZED
.UNINDENT
.UNINDENT
.sp
AWS Batch will select one or more instance types that are large enough to meet the requirements of the jobs in the queue, with a preference for instance types that are less likely to be interrupted. This allocation strategy is only available for Spot Instance compute resources.
.sp
With both \fBBEST_FIT_PROGRESSIVE\fP and \fBSPOT_CAPACITY_OPTIMIZED\fP strategies, AWS Batch might need to go above \fBmaxvCpus\fP to meet your capacity requirements. In this event, AWS Batch never exceeds \fBmaxvCpus\fP by more than a single instance.
.UNINDENT
.UNINDENT
.sp
minvCpus \-> (integer)
.INDENT 0.0
.INDENT 3.5
The minimum number of Amazon EC2 vCPUs that an environment should maintain (even if the compute environment is \fBDISABLED\fP ).
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
maxvCpus \-> (integer)
.INDENT 0.0
.INDENT 3.5
The maximum number of Amazon EC2 vCPUs that a compute environment can reach.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
With both \fBBEST_FIT_PROGRESSIVE\fP and \fBSPOT_CAPACITY_OPTIMIZED\fP allocation strategies, AWS Batch might need to exceed \fBmaxvCpus\fP to meet your capacity requirements. In this event, AWS Batch never exceeds \fBmaxvCpus\fP by more than a single instance. For example, no more than a single instance from among those specified in your compute environment is allocated.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
desiredvCpus \-> (integer)
.INDENT 0.0
.INDENT 3.5
The desired number of Amazon EC2 vCPUS in the compute environment. AWS Batch modifies this value between the minimum and maximum values, based on job queue demand.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
instanceTypes \-> (list)
.INDENT 0.0
.INDENT 3.5
The instances types that can be launched. You can specify instance families to launch any instance type within those families (for example, \fBc5\fP or \fBp3\fP ), or you can specify specific sizes within a family (such as \fBc5.8xlarge\fP ). You can also choose \fBoptimal\fP to select instance types (from the C4, M4, and R4 instance families) that match the demand of your job queues.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
When you create a compute environment, the instance types that you select for the compute environment must share the same architecture. For example, you can\(aqt mix x86 and ARM instances in the same compute environment.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Currently, \fBoptimal\fP uses instance types from the C4, M4, and R4 instance families. In Regions that don\(aqt have instance types from those instance families, instance types from the C5, M5. and R5 instance families are used.
.UNINDENT
.UNINDENT
.sp
(string)
.UNINDENT
.UNINDENT
.sp
imageId \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter is overridden by the \fBimageIdOverride\fP member of the \fBEc2Configuration\fP structure.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The AMI that you choose for a compute environment must match the architecture of the instance types that you intend to use for that compute environment. For example, if your compute environment uses A1 instance types, the compute resource AMI that you choose must support ARM instances. Amazon ECS vends both x86 and ARM versions of the Amazon ECS\-optimized Amazon Linux 2 AMI. For more information, see \fI\%Amazon ECS\-optimized Amazon Linux 2 AMI\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
subnets \-> (list)
.INDENT 0.0
.INDENT 3.5
The VPC subnets into which the compute resources are launched. These subnets must be within the same VPC. Fargate compute resources can contain up to 16 subnets. For more information, see \fI\%VPCs and Subnets\fP in the \fIAmazon VPC User Guide\fP .
.sp
(string)
.UNINDENT
.UNINDENT
.sp
securityGroupIds \-> (list)
.INDENT 0.0
.INDENT 3.5
The Amazon EC2 security groups associated with instances launched in the compute environment. One or more security groups must be specified, either in \fBsecurityGroupIds\fP or using a launch template referenced in \fBlaunchTemplate\fP . This parameter is required for jobs running on Fargate resources and must contain at least one security group. Fargate doesn\(aqt support launch templates. If security groups are specified using both \fBsecurityGroupIds\fP and \fBlaunchTemplate\fP , the values in \fBsecurityGroupIds\fP is used.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
ec2KeyPair \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon EC2 key pair that\(aqs used for instances launched in the compute environment. You can use this key pair to log in to your instances with SSH.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
instanceRole \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon ECS instance profile applied to Amazon EC2 instances in a compute environment. You can specify the short name or full Amazon Resource Name (ARN) of an instance profile. For example, \(ga\(ga \fIecsInstanceRole\fP \(ga\(ga or 
.nf
\(ga\(ga
.fi
arn:aws:iam::\fI<aws_account_id>\fP :instance\-profile/\fIecsInstanceRole\fP \(ga\(ga . For more information, see \fI\%Amazon ECS Instance Role\fP in the \fIAWS Batch User Guide\fP .
.IP "System Message: WARNING/2 (<string>:, line 390)"
Inline literal start\-string without end\-string.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
tags \-> (map)
.INDENT 0.0
.INDENT 3.5
Key\-value pair tags to be applied to EC2 resources that are launched in the compute environment. For AWS Batch, these take the form of "String1": "String2", where String1 is the tag key and String2 is the tag value−for example, { "Name": "AWS Batch Instance \- C4OnDemand" }. This is helpful for recognizing your AWS Batch instances in the Amazon EC2 console. These tags can\(aqt be updated or removed after the compute environment has been created; any changes require creating a new compute environment and removing the old compute environment. These tags aren\(aqt seen when using the AWS Batch \fBListTagsForResource\fP API operation.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
placementGroup \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon EC2 placement group to associate with your compute resources. If you intend to submit multi\-node parallel jobs to your compute environment, you should consider creating a cluster placement group and associate it with your compute resources. This keeps your multi\-node parallel job on a logical grouping of instances within a single Availability Zone with high network flow potential. For more information, see \fI\%Placement Groups\fP in the \fIAmazon EC2 User Guide for Linux Instances\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
bidPercentage \-> (integer)
.INDENT 0.0
.INDENT 3.5
The maximum percentage that a Spot Instance price can be when compared with the On\-Demand price for that instance type before instances are launched. For example, if your maximum percentage is 20%, then the Spot price must be less than 20% of the current On\-Demand price for that Amazon EC2 instance. You always pay the lowest (market) price and never more than your maximum percentage. If you leave this field empty, the default value is 100% of the On\-Demand price.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
spotIamFleetRole \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a \fBSPOT\fP compute environment. This role is required if the allocation strategy set to \fBBEST_FIT\fP or if the allocation strategy isn\(aqt specified. For more information, see \fI\%Amazon EC2 Spot Fleet Role\fP in the \fIAWS Batch User Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
To tag your Spot Instances on creation, the Spot Fleet IAM role specified here must use the newer \fBAmazonEC2SpotFleetTaggingRole\fP managed policy. The previously recommended \fBAmazonEC2SpotFleetRole\fP managed policy doesn\(aqt have the required permissions to tag Spot Instances. For more information, see \fI\%Spot Instances not tagged on creation\fP in the \fIAWS Batch User Guide\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
launchTemplate \-> (structure)
.INDENT 0.0
.INDENT 3.5
The launch template to use for your compute resources. Any other compute resource parameters that you specify in a  CreateComputeEnvironment API operation override the same parameters in the launch template. You must specify either the launch template ID or launch template name in the request, but not both. For more information, see \fI\%Launch Template Support\fP in the \fIAWS Batch User Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.sp
launchTemplateId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the launch template.
.UNINDENT
.UNINDENT
.sp
launchTemplateName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the launch template.
.UNINDENT
.UNINDENT
.sp
version \-> (string)
.INDENT 0.0
.INDENT 3.5
The version number of the launch template, \fB$Latest\fP , or \fB$Default\fP .
.sp
If the value is \fB$Latest\fP , the latest version of the launch template is used. If the value is \fB$Default\fP , the default version of the launch template is used.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
After the compute environment is created, the launch template version used will not be changed, even if the \fB$Default\fP or \fB$Latest\fP version for the launch template is updated. To use a new launch template version, create a new compute environment, add the new compute environment to the existing job queue, remove the old compute environment from the job queue, and delete the old compute environment.
.UNINDENT
.UNINDENT
.sp
Default: \fB$Default\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
ec2Configuration \-> (list)
.INDENT 0.0
.INDENT 3.5
Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If \fBEc2Configuration\fP isn\(aqt specified, the default is \fBECS_AL1\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter isn\(aqt applicable to jobs running on Fargate resources, and shouldn\(aqt be specified.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Provides information used to select Amazon Machine Images (AMIs) for instances in the compute environment. If \fBEc2Configuration\fP isn\(aqt specified, the default is currently \fBECS_AL1\fP (\fI\%Amazon Linux\fP ) for non\-GPU, non\-Graviton instances. Starting on March 31, 2021, this default will be changing to \fBECS_AL2\fP (\fI\%Amazon Linux 2\fP ).
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This object isn\(aqt applicable to jobs running on Fargate resources.
.UNINDENT
.UNINDENT
.sp
imageType \-> (string)
.INDENT 0.0
.INDENT 3.5
The image type to match with the instance type to select an AMI. If the \fBimageIdOverride\fP parameter isn\(aqt specified, then a recent \fI\%Amazon ECS\-optimized AMI\fP (\fBECS_AL1\fP ) is used. Starting on March 31, 2021, this default will be changing to \fBECS_AL2\fP (\fI\%Amazon Linux 2\fP ).
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
ECS_AL2
.UNINDENT
.UNINDENT
.sp
\fI\%Amazon Linux 2\fP − Default for all AWS Graviton\-based instance families (for example, \fBC6g\fP , \fBM6g\fP , \fBR6g\fP , and \fBT4g\fP ) and can be used for all non\-GPU instance types.
.INDENT 0.0
.INDENT 3.5
ECS_AL2_NVIDIA
.UNINDENT
.UNINDENT
.sp
\fI\%Amazon Linux 2 (GPU)\fP −Default for all GPU instance families (for example \fBP4\fP and \fBG4\fP ) and can be used for all non\-AWS Graviton\-based instance types.
.INDENT 0.0
.INDENT 3.5
ECS_AL1
.UNINDENT
.UNINDENT
.sp
\fI\%Amazon Linux\fP −Default for all non\-GPU, non\-AWS Graviton instance families. Amazon Linux is reaching the end\-of\-life of standard support. For more information, see \fI\%Amazon Linux AMI\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
imageIdOverride \-> (string)
.INDENT 0.0
.INDENT 3.5
The AMI ID used for instances launched in the compute environment that match the image type. This setting overrides the \fBimageId\fP set in the \fBcomputeResource\fP object.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
type=string,allocationStrategy=string,minvCpus=integer,maxvCpus=integer,desiredvCpus=integer,instanceTypes=string,string,imageId=string,subnets=string,string,securityGroupIds=string,string,ec2KeyPair=string,instanceRole=string,tags={KeyName1=string,KeyName2=string},placementGroup=string,bidPercentage=integer,spotIamFleetRole=string,launchTemplate={launchTemplateId=string,launchTemplateName=string,version=string},ec2Configuration=[{imageType=string,imageIdOverride=string},{imageType=string,imageIdOverride=string}]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "type": "EC2"|"SPOT"|"FARGATE"|"FARGATE_SPOT",
  "allocationStrategy": "BEST_FIT"|"BEST_FIT_PROGRESSIVE"|"SPOT_CAPACITY_OPTIMIZED",
  "minvCpus": integer,
  "maxvCpus": integer,
  "desiredvCpus": integer,
  "instanceTypes": ["string", ...],
  "imageId": "string",
  "subnets": ["string", ...],
  "securityGroupIds": ["string", ...],
  "ec2KeyPair": "string",
  "instanceRole": "string",
  "tags": {"string": "string"
    ...},
  "placementGroup": "string",
  "bidPercentage": integer,
  "spotIamFleetRole": "string",
  "launchTemplate": {
    "launchTemplateId": "string",
    "launchTemplateName": "string",
    "version": "string"
  },
  "ec2Configuration": [
    {
      "imageType": "string",
      "imageIdOverride": "string"
    }
    ...
  ]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-service\-role\fP (string)
.INDENT 0.0
.INDENT 3.5
The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf. For more information, see \fI\%AWS Batch service IAM role\fP in the \fIAWS Batch User Guide\fP .
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
If your account has already created the AWS Batch service\-linked role, that role is used by default for your compute environment unless you specify a role here. If the AWS Batch service\-linked role does not exist in your account, and no role is specified here, the service will try to create the AWS Batch service\-linked role in your account.
.UNINDENT
.UNINDENT
.sp
If your specified role has a path other than \fB/\fP , then you must specify either the full role ARN (recommended) or prefix the role name with the path. For example, if a role with the name \fBbar\fP has a path of \fB/foo/\fP then you would specify \fB/foo/bar\fP as the role name. For more information, see \fI\%Friendly names and paths\fP in the \fIIAM User Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Depending on how you created your AWS Batch service role, its ARN might contain the \fBservice\-role\fP path prefix. When you only specify the name of the service role, AWS Batch assumes that your ARN doesn\(aqt use the \fBservice\-role\fP path prefix. Because of this, we recommend that you specify the full ARN of your service role when you create compute environments.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-tags\fP (map)
.INDENT 0.0
.INDENT 3.5
The tags that you apply to the compute environment to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see \fI\%Tagging AWS Resources\fP in \fIAWS General Reference\fP .
.sp
These tags can be updated or removed using the \fI\%TagResource\fP and \fI\%UntagResource\fP API operations. These tags don\(aqt propagate to the underlying compute resources.
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
KeyName1=string,KeyName2=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"string": "string"
  ...}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo create a managed compute environment with On\-Demand instances\fP
.sp
This example creates a managed compute environment with specific C4 instance types that are launched on demand. The compute environment is called \fIC4OnDemand\fP\&.
.sp
Command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws batch create\-compute\-environment \-\-cli\-input\-json file://<path_to_json_file>/C4OnDemand.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON file format:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "computeEnvironmentName": "C4OnDemand",
  "type": "MANAGED",
  "state": "ENABLED",
  "computeResources": {
    "type": "EC2",
    "minvCpus": 0,
    "maxvCpus": 128,
    "desiredvCpus": 48,
    "instanceTypes": [
      "c4.large",
      "c4.xlarge",
      "c4.2xlarge",
      "c4.4xlarge",
      "c4.8xlarge"
    ],
    "subnets": [
      "subnet\-220c0e0a",
      "subnet\-1a95556d",
      "subnet\-978f6dce"
    ],
    "securityGroupIds": [
      "sg\-cf5093b2"
    ],
    "ec2KeyPair": "id_rsa",
    "instanceRole": "ecsInstanceRole",
    "tags": {
      "Name": "Batch Instance \- C4OnDemand"
    }
  },
  "serviceRole": "arn:aws:iam::012345678910:role/AWSBatchServiceRole"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "computeEnvironmentName": "C4OnDemand",
    "computeEnvironmentArn": "arn:aws:batch:us\-east\-1:012345678910:compute\-environment/C4OnDemand"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBTo create a managed compute environment with Spot Instances\fP
.sp
This example creates a managed compute environment with the M4 instance type that is launched when the Spot bid price is at or below 20% of the On\-Demand price for the instance type. The compute environment is called \fIM4Spot\fP\&.
.sp
Command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws batch create\-compute\-environment \-\-cli\-input\-json file://<path_to_json_file>/M4Spot.json
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON file format:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "computeEnvironmentName": "M4Spot",
  "type": "MANAGED",
  "state": "ENABLED",
  "computeResources": {
    "type": "SPOT",
    "spotIamFleetRole": "arn:aws:iam::012345678910:role/aws\-ec2\-spot\-fleet\-role",
    "minvCpus": 0,
    "maxvCpus": 128,
    "desiredvCpus": 4,
    "instanceTypes": [
      "m4"
    ],
    "bidPercentage": 20,
    "subnets": [
      "subnet\-220c0e0a",
      "subnet\-1a95556d",
      "subnet\-978f6dce"
    ],
    "securityGroupIds": [
      "sg\-cf5093b2"
    ],
    "ec2KeyPair": "id_rsa",
    "instanceRole": "ecsInstanceRole",
    "tags": {
      "Name": "Batch Instance \- M4Spot"
    }
  },
  "serviceRole": "arn:aws:iam::012345678910:role/AWSBatchServiceRole"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "computeEnvironmentName": "M4Spot",
    "computeEnvironmentArn": "arn:aws:batch:us\-east\-1:012345678910:compute\-environment/M4Spot"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OUTPUT
.sp
computeEnvironmentName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the compute environment. Up to 128 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.
.UNINDENT
.UNINDENT
.sp
computeEnvironmentArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) of the compute environment.
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
