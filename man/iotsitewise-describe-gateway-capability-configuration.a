.\" Man page generated from reStructuredText.
.
.TH "IOTSITEWISE-DESCRIBE-GATEWAY-CAPABILITY-CONFIGURATION" "a" "" ""
.SH NAME
iotsitewise-describe-gateway-capability-configuration \- Retrieves information about a gateway capability configuration
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Retrieves information about a gateway capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC\-UA sources for a gateway in the AWS IoT SiteWise console, all of your OPC\-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use \fI\%DescribeGateway\fP .
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  describe\-gateway\-capability\-configuration
\-\-gateway\-id <value>
\-\-capability\-namespace <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-gateway\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The ID of the gateway that defines the capability configuration.
.UNINDENT
.UNINDENT
.sp
\fB\-\-capability\-namespace\fP (string)
.INDENT 0.0
.INDENT 3.5
The namespace of the capability configuration. For example, if you configure OPC\-UA sources from the AWS IoT SiteWise console, your OPC\-UA capability configuration has the namespace \fBiotsitewise:opcuacollector:version\fP , where \fBversion\fP is a number such as \fB1\fP .
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo describe a gateway capability\fP
.sp
The following \fBdescribe\-gateway\-capability\-configuration\fP example describes an OPC\-UA source capability.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws iotsitewise describe\-gateway\-capability\-configuration \e
    \-\-gateway\-id a1b2c3d4\-5678\-90ab\-cdef\-1a1a1EXAMPLE \e
    \-\-capability\-namespace "iotsitewise:opcuacollector:1"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "gatewayId": "a1b2c3d4\-5678\-90ab\-cdef\-1a1a1EXAMPLE",
    "capabilityNamespace": "iotsitewise:opcuacollector:1",
    "capabilityConfiguration": "{\e"sources\e":[{\e"name\e":\e"Wind Farm #1\e",\e"endpoint\e":{\e"certificateTrust\e":{\e"type\e":\e"TrustAny\e"},\e"endpointUri\e":\e"opc.tcp://203.0.113.0:49320\e",\e"securityPolicy\e":\e"BASIC256\e",\e"messageSecurityMode\e":\e"SIGN_AND_ENCRYPT\e",\e"identityProvider\e":{\e"type\e":\e"Username\e",\e"usernameSecretArn\e":\e"arn:aws:secretsmanager:us\-east\-1:123456789012:secret:greengrass\-factory1\-auth\-3QNDmM\e"},\e"nodeFilterRules\e":[]},\e"measurementDataStreamPrefix\e":\e"\e"}]}",
    "capabilitySyncStatus": "IN_SYNC"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Configuring data sources\fP in the \fIAWS IoT SiteWise User Guide\fP\&.
.SH OUTPUT
.sp
gatewayId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the gateway that defines the capability configuration.
.UNINDENT
.UNINDENT
.sp
capabilityNamespace \-> (string)
.INDENT 0.0
.INDENT 3.5
The namespace of the gateway capability.
.UNINDENT
.UNINDENT
.sp
capabilityConfiguration \-> (string)
.INDENT 0.0
.INDENT 3.5
The JSON document that defines the gateway capability\(aqs configuration. For more information, see \fI\%Configuring data sources (CLI)\fP in the \fIAWS IoT SiteWise User Guide\fP .
.UNINDENT
.UNINDENT
.sp
capabilitySyncStatus \-> (string)
.INDENT 0.0
.INDENT 3.5
The synchronization status of the capability configuration. The sync status can be one of the following:
.INDENT 0.0
.IP \(bu 2
\fBIN_SYNC\fP – The gateway is running the capability configuration.
.IP \(bu 2
\fBOUT_OF_SYNC\fP – The gateway hasn\(aqt received the capability configuration.
.IP \(bu 2
\fBSYNC_FAILED\fP – The gateway rejected the capability configuration.
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
