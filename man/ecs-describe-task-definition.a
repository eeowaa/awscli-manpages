.\" Man page generated from reStructuredText.
.
.TH "ECS-DESCRIBE-TASK-DEFINITION" "a" "" ""
.SH NAME
ecs-describe-task-definition \- Describes a task definition
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Describes a task definition. You can specify a \fBfamily\fP and \fBrevision\fP to find information about a specific task definition, or you can simply specify the family to find the latest \fBACTIVE\fP revision in that family.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
You can only describe \fBINACTIVE\fP task definitions while an active task or service references them.
.UNINDENT
.UNINDENT
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  describe\-task\-definition
\-\-task\-definition <value>
[\-\-include <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-task\-definition\fP (string)
.INDENT 0.0
.INDENT 3.5
The \fBfamily\fP for the latest \fBACTIVE\fP revision, \fBfamily\fP and \fBrevision\fP (\fBfamily:revision\fP ) for a specific revision in the family, or full Amazon Resource Name (ARN) of the task definition to describe.
.UNINDENT
.UNINDENT
.sp
\fB\-\-include\fP (list)
.INDENT 0.0
.INDENT 3.5
Specifies whether to see the resource tags for the task definition. If \fBTAGS\fP is specified, the tags are included in the response. If this field is omitted, tags are not included in the response.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
"string" "string" ...

Where valid values are:
  TAGS
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo describe a task definition\fP
.sp
The following \fBdescribe\-task\-definition\fP example retrieves the details of a task definition.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws ecs describe\-task\-definition \-\-task\-definition hello_world:8
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "taskDefinition": {
        "volumes": [],
        "taskDefinitionArn": "arn:aws:ecs:us\-west\-2:123456789012:task\-definition/hello_world:8",
        "containerDefinitions": [
            {
                "environment": [],
                "name": "wordpress",
                "links": [
                    "mysql"
                ],
                "mountPoints": [],
                "image": "wordpress",
                "essential": true,
                "portMappings": [
                    {
                        "containerPort": 80,
                        "hostPort": 80
                    }
                ],
                "memory": 500,
                "cpu": 10,
                "volumesFrom": []
            },
            {
                "environment": [
                    {
                        "name": "MYSQL_ROOT_PASSWORD",
                        "value": "password"
                    }
                ],
                "name": "mysql",
                "mountPoints": [],
                "image": "mysql",
                "cpu": 10,
                "portMappings": [],
                "memory": 500,
                "essential": true,
                "volumesFrom": []
            }
        ],
        "family": "hello_world",
        "revision": 8
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Amazon ECS Task Definitions\fP in the \fIAmazon ECS Developer Guide\fP\&.
.SH OUTPUT
.sp
taskDefinition \-> (structure)
.INDENT 0.0
.INDENT 3.5
The full task definition description.
.sp
taskDefinitionArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The full Amazon Resource Name (ARN) of the task definition.
.UNINDENT
.UNINDENT
.sp
containerDefinitions \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of container definitions in JSON format that describe the different containers that make up your task. For more information about container definition parameters and defaults, see \fI\%Amazon ECS Task Definitions\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Container definitions are used in task definitions to describe the different containers that are launched as part of a task.
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of a container. If you are linking multiple containers together in a task definition, the \fBname\fP of one container can be entered in the \fBlinks\fP of another container to connect the containers. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. This parameter maps to \fBname\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-name\fP option to \fI\%docker run\fP .
.UNINDENT
.UNINDENT
.sp
image \-> (string)
.INDENT 0.0
.INDENT 3.5
The image used to start a container. This string is passed directly to the Docker daemon. Images in the Docker Hub registry are available by default. Other repositories are specified with either \(ga\(ga \fIrepository\-url\fP /\fIimage\fP :\fItag\fP \(ga\(ga or \(ga\(ga \fIrepository\-url\fP /\fIimage\fP @*digest* \(ga\(ga . Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number signs are allowed. This parameter maps to \fBImage\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fBIMAGE\fP parameter of \fI\%docker run\fP .
.INDENT 0.0
.IP \(bu 2
When a new task starts, the Amazon ECS container agent pulls the latest version of the specified image and tag for the container to use. However, subsequent updates to a repository image are not propagated to already running tasks.
.IP \(bu 2
Images in Amazon ECR repositories can be specified by either using the full \fBregistry/repository:tag\fP or \fBregistry/repository@digest\fP . For example, \fB012345678910.dkr.ecr.<region\-name>.amazonaws.com/<repository\-name>:latest\fP or \fB012345678910.dkr.ecr.<region\-name>.amazonaws.com/<repository\-name>@sha256:94afd1f2e64d908bc90dbca0035a5b567EXAMPLE\fP .
.IP \(bu 2
Images in official repositories on Docker Hub use a single name (for example, \fBubuntu\fP or \fBmongo\fP ).
.IP \(bu 2
Images in other repositories on Docker Hub are qualified with an organization name (for example, \fBamazon/amazon\-ecs\-agent\fP ).
.IP \(bu 2
Images in other online repositories are qualified further by a domain name (for example, \fBquay.io/assemblyline/ubuntu\fP ).
.UNINDENT
.UNINDENT
.UNINDENT
.sp
repositoryCredentials \-> (structure)
.INDENT 0.0
.INDENT 3.5
The private repository authentication credentials to use.
.sp
credentialsParameter \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) of the secret containing the private repository credentials.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
When you are using the Amazon ECS API, AWS CLI, or AWS SDK, if the secret exists in the same Region as the task that you are launching then you can use either the full ARN or the name of the secret. When you are using the AWS Management Console, you must specify the full ARN of the secret.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
cpu \-> (integer)
.INDENT 0.0
.INDENT 3.5
The number of \fBcpu\fP units reserved for the container. This parameter maps to \fBCpuShares\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-cpu\-shares\fP option to \fI\%docker run\fP .
.sp
This field is optional for tasks using the Fargate launch type, and the only requirement is that the total amount of CPU reserved for all containers within a task be lower than the task\-level \fBcpu\fP value.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
You can determine the number of CPU units that are available per EC2 instance type by multiplying the vCPUs listed for that instance type on the \fI\%Amazon EC2 Instances\fP detail page by 1,024.
.UNINDENT
.UNINDENT
.sp
Linux containers share unallocated CPU units with other containers on the container instance with the same ratio as their allocated amount. For example, if you run a single\-container task on a single\-core instance type with 512 CPU units specified for that container, and that is the only task running on the container instance, that container could use the full 1,024 CPU unit share at any given time. However, if you launched another copy of the same task on that container instance, each task would be guaranteed a minimum of 512 CPU units when needed, and each container could float to higher CPU usage if the other container was not using it, but if both tasks were 100% active all of the time, they would be limited to 512 CPU units.
.sp
On Linux container instances, the Docker daemon on the container instance uses the CPU value to calculate the relative CPU share ratios for running containers. For more information, see \fI\%CPU share constraint\fP in the Docker documentation. The minimum valid CPU share value that the Linux kernel allows is 2. However, the CPU parameter is not required, and you can use CPU values below 2 in your container definitions. For CPU values below 2 (including null), the behavior varies based on your Amazon ECS container agent version:
.INDENT 0.0
.IP \(bu 2
\fBAgent versions less than or equal to 1.1.0:\fP Null and zero CPU values are passed to Docker as 0, which Docker then converts to 1,024 CPU shares. CPU values of 1 are passed to Docker as 1, which the Linux kernel converts to two CPU shares.
.IP \(bu 2
\fBAgent versions greater than or equal to 1.2.0:\fP Null, zero, and CPU values of 1 are passed to Docker as 2.
.UNINDENT
.sp
On Windows container instances, the CPU limit is enforced as an absolute limit, or a quota. Windows containers only have access to the specified amount of CPU that is described in the task definition. A null or zero CPU value is passed to Docker as \fB0\fP , which Windows interprets as 1% of one CPU.
.UNINDENT
.UNINDENT
.sp
memory \-> (integer)
.INDENT 0.0
.INDENT 3.5
The amount (in MiB) of memory to present to the container. If your container attempts to exceed the memory specified here, the container is killed. The total amount of memory reserved for all containers within a task must be lower than the task \fBmemory\fP value, if one is specified. This parameter maps to \fBMemory\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-memory\fP option to \fI\%docker run\fP .
.sp
If using the Fargate launch type, this parameter is optional.
.sp
If using the EC2 launch type, you must specify either a task\-level memory value or a container\-level memory value. If you specify both a container\-level \fBmemory\fP and \fBmemoryReservation\fP value, \fBmemory\fP must be greater than \fBmemoryReservation\fP . If you specify \fBmemoryReservation\fP , then that value is subtracted from the available memory resources for the container instance on which the container is placed. Otherwise, the value of \fBmemory\fP is used.
.sp
The Docker daemon reserves a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers.
.UNINDENT
.UNINDENT
.sp
memoryReservation \-> (integer)
.INDENT 0.0
.INDENT 3.5
The soft limit (in MiB) of memory to reserve for the container. When system memory is under heavy contention, Docker attempts to keep the container memory to this soft limit. However, your container can consume more memory when it needs to, up to either the hard limit specified with the \fBmemory\fP parameter (if applicable), or all of the available memory on the container instance, whichever comes first. This parameter maps to \fBMemoryReservation\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-memory\-reservation\fP option to \fI\%docker run\fP .
.sp
If a task\-level memory value is not specified, you must specify a non\-zero integer for one or both of \fBmemory\fP or \fBmemoryReservation\fP in a container definition. If you specify both, \fBmemory\fP must be greater than \fBmemoryReservation\fP . If you specify \fBmemoryReservation\fP , then that value is subtracted from the available memory resources for the container instance on which the container is placed. Otherwise, the value of \fBmemory\fP is used.
.sp
For example, if your container normally uses 128 MiB of memory, but occasionally bursts to 256 MiB of memory for short periods of time, you can set a \fBmemoryReservation\fP of 128 MiB, and a \fBmemory\fP hard limit of 300 MiB. This configuration would allow the container to only reserve 128 MiB of memory from the remaining resources on the container instance, but also allow the container to consume more memory resources when needed.
.sp
The Docker daemon reserves a minimum of 4 MiB of memory for a container, so you should not specify fewer than 4 MiB of memory for your containers.
.UNINDENT
.UNINDENT
.sp
links \-> (list)
.INDENT 0.0
.INDENT 3.5
The \fBlinks\fP parameter allows containers to communicate with each other without the need for port mappings. This parameter is only supported if the network mode of a task definition is \fBbridge\fP . The \fBname:internalName\fP construct is analogous to \fBname:alias\fP in Docker links. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. For more information about linking Docker containers, go to \fI\%Legacy container links\fP in the Docker documentation. This parameter maps to \fBLinks\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-link\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers.
.UNINDENT
.UNINDENT
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Containers that are collocated on a single container instance may be able to communicate with each other without requiring links or host port mappings. Network isolation is achieved on the container instance using security groups and VPC settings.
.UNINDENT
.UNINDENT
.sp
(string)
.UNINDENT
.UNINDENT
.sp
portMappings \-> (list)
.INDENT 0.0
.INDENT 3.5
The list of port mappings for the container. Port mappings allow containers to access ports on the host container instance to send or receive traffic.
.sp
For task definitions that use the \fBawsvpc\fP network mode, you should only specify the \fBcontainerPort\fP . The \fBhostPort\fP can be left blank or it must be the same value as the \fBcontainerPort\fP .
.sp
Port mappings on Windows use the \fBNetNAT\fP gateway address rather than \fBlocalhost\fP . There is no loopback for port mappings on Windows, so you cannot access a container\(aqs mapped port from the host itself.
.sp
This parameter maps to \fBPortBindings\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-publish\fP option to \fI\%docker run\fP . If the network mode of a task definition is set to \fBnone\fP , then you can\(aqt specify port mappings. If the network mode of a task definition is set to \fBhost\fP , then host ports must either be undefined or they must match the container port in the port mapping.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
After a task reaches the \fBRUNNING\fP status, manual and automatic host and container port assignments are visible in the \fBNetwork Bindings\fP section of a container description for a selected task in the Amazon ECS console. The assignments are also visible in the \fBnetworkBindings\fP section  DescribeTasks responses.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Port mappings allow containers to access ports on the host container instance to send or receive traffic. Port mappings are specified as part of the container definition.
.sp
If you are using containers in a task with the \fBawsvpc\fP or \fBhost\fP network mode, exposed ports should be specified using \fBcontainerPort\fP . The \fBhostPort\fP can be left blank or it must be the same value as the \fBcontainerPort\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
You cannot expose the same container port for multiple protocols. An error will be returned if this is attempted
.UNINDENT
.UNINDENT
.sp
After a task reaches the \fBRUNNING\fP status, manual and automatic host and container port assignments are visible in the \fBnetworkBindings\fP section of  DescribeTasks API responses.
.sp
containerPort \-> (integer)
.INDENT 0.0
.INDENT 3.5
The port number on the container that is bound to the user\-specified or automatically assigned host port.
.sp
If you are using containers in a task with the \fBawsvpc\fP or \fBhost\fP network mode, exposed ports should be specified using \fBcontainerPort\fP .
.sp
If you are using containers in a task with the \fBbridge\fP network mode and you specify a container port and not a host port, your container automatically receives a host port in the ephemeral port range. For more information, see \fBhostPort\fP . Port mappings that are automatically assigned in this way do not count toward the 100 reserved ports limit of a container instance.
.UNINDENT
.UNINDENT
.sp
hostPort \-> (integer)
.INDENT 0.0
.INDENT 3.5
The port number on the container instance to reserve for your container.
.sp
If you are using containers in a task with the \fBawsvpc\fP or \fBhost\fP network mode, the \fBhostPort\fP can either be left blank or set to the same value as the \fBcontainerPort\fP .
.sp
If you are using containers in a task with the \fBbridge\fP network mode, you can specify a non\-reserved host port for your container port mapping, or you can omit the \fBhostPort\fP (or set it to \fB0\fP ) while specifying a \fBcontainerPort\fP and your container automatically receives a port in the ephemeral port range for your container instance operating system and Docker version.
.sp
The default ephemeral port range for Docker version 1.6.0 and later is listed on the instance under \fB/proc/sys/net/ipv4/ip_local_port_range\fP . If this kernel parameter is unavailable, the default ephemeral port range from 49153 through 65535 is used. Do not attempt to specify a host port in the ephemeral port range as these are reserved for automatic assignment. In general, ports below 32768 are outside of the ephemeral port range.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The default ephemeral port range from 49153 through 65535 is always used for Docker versions before 1.6.0.
.UNINDENT
.UNINDENT
.sp
The default reserved ports are 22 for SSH, the Docker ports 2375 and 2376, and the Amazon ECS container agent ports 51678\-51680. Any host port that was previously specified in a running task is also reserved while the task is running (after a task stops, the host port is released). The current reserved ports are displayed in the \fBremainingResources\fP of  DescribeContainerInstances output. A container instance can have up to 100 reserved ports at a time, including the default reserved ports. Automatically assigned ports don\(aqt count toward the 100 reserved ports limit.
.UNINDENT
.UNINDENT
.sp
protocol \-> (string)
.INDENT 0.0
.INDENT 3.5
The protocol used for the port mapping. Valid values are \fBtcp\fP and \fBudp\fP . The default is \fBtcp\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
essential \-> (boolean)
.INDENT 0.0
.INDENT 3.5
If the \fBessential\fP parameter of a container is marked as \fBtrue\fP , and that container fails or stops for any reason, all other containers that are part of the task are stopped. If the \fBessential\fP parameter of a container is marked as \fBfalse\fP , then its failure does not affect the rest of the containers in a task. If this parameter is omitted, a container is assumed to be essential.
.sp
All tasks must have at least one essential container. If you have an application that is composed of multiple containers, you should group containers that are used for a common purpose into components, and separate the different components into multiple task definitions. For more information, see \fI\%Application Architecture\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.sp
entryPoint \-> (list)
.INDENT 0.0
.INDENT 3.5
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Early versions of the Amazon ECS container agent do not properly handle \fBentryPoint\fP parameters. If you have problems using \fBentryPoint\fP , update your container agent or enter your commands and arguments as \fBcommand\fP array items instead.
.UNINDENT
.UNINDENT
.sp
The entry point that is passed to the container. This parameter maps to \fBEntrypoint\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-entrypoint\fP option to \fI\%docker run\fP . For more information, see \fI\%https://docs.docker.com/engine/reference/builder/#entrypoint\fP .
.sp
(string)
.UNINDENT
.UNINDENT
.sp
command \-> (list)
.INDENT 0.0
.INDENT 3.5
The command that is passed to the container. This parameter maps to \fBCmd\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fBCOMMAND\fP parameter to \fI\%docker run\fP . For more information, see \fI\%https://docs.docker.com/engine/reference/builder/#cmd\fP . If there are multiple arguments, each argument should be a separated string in the array.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
environment \-> (list)
.INDENT 0.0
.INDENT 3.5
The environment variables to pass to a container. This parameter maps to \fBEnv\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-env\fP option to \fI\%docker run\fP .
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
We do not recommend using plaintext environment variables for sensitive information, such as credential data.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A key\-value pair object.
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the key\-value pair. For environment variables, this is the name of the environment variable.
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value of the key\-value pair. For environment variables, this is the value of the environment variable.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
environmentFiles \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of files containing the environment variables to pass to a container. This parameter maps to the \fB\-\-env\-file\fP option to \fI\%docker run\fP .
.sp
You can specify up to ten environment files. The file must have a \fB\&.env\fP file extension. Each line in an environment file should contain an environment variable in \fBVARIABLE=VALUE\fP format. Lines beginning with \fB#\fP are treated as comments and are ignored. For more information on the environment variable file syntax, see \fI\%Declare default environment variables in file\fP .
.sp
If there are environment variables specified using the \fBenvironment\fP parameter in a container definition, they take precedence over the variables contained within an environment file. If multiple environment files are specified that contain the same variable, they are processed from the top down. It is recommended to use unique variable names. For more information, see \fI\%Specifying Environment Variables\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A list of files containing the environment variables to pass to a container. You can specify up to ten environment files. The file must have a \fB\&.env\fP file extension. Each line in an environment file should contain an environment variable in \fBVARIABLE=VALUE\fP format. Lines beginning with \fB#\fP are treated as comments and are ignored. For more information on the environment variable file syntax, see \fI\%Declare default environment variables in file\fP .
.sp
If there are environment variables specified using the \fBenvironment\fP parameter in a container definition, they take precedence over the variables contained within an environment file. If multiple environment files are specified that contain the same variable, they are processed from the top down. It is recommended to use unique variable names. For more information, see \fI\%Specifying environment variables\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
This field is only valid for containers in Fargate tasks that use platform version \fB1.4.0\fP or later.
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) of the Amazon S3 object containing the environment variable file.
.UNINDENT
.UNINDENT
.sp
type \-> (string)
.INDENT 0.0
.INDENT 3.5
The file type to use. The only supported value is \fBs3\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
mountPoints \-> (list)
.INDENT 0.0
.INDENT 3.5
The mount points for data volumes in your container.
.sp
This parameter maps to \fBVolumes\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-volume\fP option to \fI\%docker run\fP .
.sp
Windows containers can mount whole directories on the same drive as \fB$env:ProgramData\fP . Windows containers cannot mount directories on a different drive, and mount point cannot be across drives.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Details on a volume mount point that is used in a container definition.
.sp
sourceVolume \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the volume to mount. Must be a volume name referenced in the \fBname\fP parameter of task definition \fBvolume\fP .
.UNINDENT
.UNINDENT
.sp
containerPath \-> (string)
.INDENT 0.0
.INDENT 3.5
The path on the container to mount the host volume at.
.UNINDENT
.UNINDENT
.sp
readOnly \-> (boolean)
.INDENT 0.0
.INDENT 3.5
If this value is \fBtrue\fP , the container has read\-only access to the volume. If this value is \fBfalse\fP , then the container can write to the volume. The default value is \fBfalse\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
volumesFrom \-> (list)
.INDENT 0.0
.INDENT 3.5
Data volumes to mount from another container. This parameter maps to \fBVolumesFrom\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-volumes\-from\fP option to \fI\%docker run\fP .
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Details on a data volume from another container in the same task definition.
.sp
sourceContainer \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of another container within the same task definition from which to mount volumes.
.UNINDENT
.UNINDENT
.sp
readOnly \-> (boolean)
.INDENT 0.0
.INDENT 3.5
If this value is \fBtrue\fP , the container has read\-only access to the volume. If this value is \fBfalse\fP , then the container can write to the volume. The default value is \fBfalse\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
linuxParameters \-> (structure)
.INDENT 0.0
.INDENT 3.5
Linux\-specific modifications that are applied to the container, such as Linux kernel capabilities. For more information see  KernelCapabilities .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers.
.UNINDENT
.UNINDENT
.sp
capabilities \-> (structure)
.INDENT 0.0
.INDENT 3.5
The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
For tasks that use the Fargate launch type, \fBcapabilities\fP is supported for all platform versions but the \fBadd\fP parameter is only supported if using platform version 1.4.0 or later.
.UNINDENT
.UNINDENT
.sp
add \-> (list)
.INDENT 0.0
.INDENT 3.5
The Linux capabilities for the container that have been added to the default configuration provided by Docker. This parameter maps to \fBCapAdd\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-cap\-add\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Tasks launched on AWS Fargate only support adding the \fBSYS_PTRACE\fP kernel capability.
.UNINDENT
.UNINDENT
.sp
Valid values: \fB"ALL" | "AUDIT_CONTROL" | "AUDIT_WRITE" | "BLOCK_SUSPEND" | "CHOWN" | "DAC_OVERRIDE" | "DAC_READ_SEARCH" | "FOWNER" | "FSETID" | "IPC_LOCK" | "IPC_OWNER" | "KILL" | "LEASE" | "LINUX_IMMUTABLE" | "MAC_ADMIN" | "MAC_OVERRIDE" | "MKNOD" | "NET_ADMIN" | "NET_BIND_SERVICE" | "NET_BROADCAST" | "NET_RAW" | "SETFCAP" | "SETGID" | "SETPCAP" | "SETUID" | "SYS_ADMIN" | "SYS_BOOT" | "SYS_CHROOT" | "SYS_MODULE" | "SYS_NICE" | "SYS_PACCT" | "SYS_PTRACE" | "SYS_RAWIO" | "SYS_RESOURCE" | "SYS_TIME" | "SYS_TTY_CONFIG" | "SYSLOG" | "WAKE_ALARM"\fP
.sp
(string)
.UNINDENT
.UNINDENT
.sp
drop \-> (list)
.INDENT 0.0
.INDENT 3.5
The Linux capabilities for the container that have been removed from the default configuration provided by Docker. This parameter maps to \fBCapDrop\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-cap\-drop\fP option to \fI\%docker run\fP .
.sp
Valid values: \fB"ALL" | "AUDIT_CONTROL" | "AUDIT_WRITE" | "BLOCK_SUSPEND" | "CHOWN" | "DAC_OVERRIDE" | "DAC_READ_SEARCH" | "FOWNER" | "FSETID" | "IPC_LOCK" | "IPC_OWNER" | "KILL" | "LEASE" | "LINUX_IMMUTABLE" | "MAC_ADMIN" | "MAC_OVERRIDE" | "MKNOD" | "NET_ADMIN" | "NET_BIND_SERVICE" | "NET_BROADCAST" | "NET_RAW" | "SETFCAP" | "SETGID" | "SETPCAP" | "SETUID" | "SYS_ADMIN" | "SYS_BOOT" | "SYS_CHROOT" | "SYS_MODULE" | "SYS_NICE" | "SYS_PACCT" | "SYS_PTRACE" | "SYS_RAWIO" | "SYS_RESOURCE" | "SYS_TIME" | "SYS_TTY_CONFIG" | "SYSLOG" | "WAKE_ALARM"\fP
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
devices \-> (list)
.INDENT 0.0
.INDENT 3.5
Any host devices to expose to the container. This parameter maps to \fBDevices\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-device\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If you are using tasks that use the Fargate launch type, the \fBdevices\fP parameter is not supported.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
An object representing a container instance host device.
.sp
hostPath \-> (string)
.INDENT 0.0
.INDENT 3.5
The path for the device on the host container instance.
.UNINDENT
.UNINDENT
.sp
containerPath \-> (string)
.INDENT 0.0
.INDENT 3.5
The path inside the container at which to expose the host device.
.UNINDENT
.UNINDENT
.sp
permissions \-> (list)
.INDENT 0.0
.INDENT 3.5
The explicit permissions to provide to the container for the device. By default, the container has permissions for \fBread\fP , \fBwrite\fP , and \fBmknod\fP for the device.
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
initProcessEnabled \-> (boolean)
.INDENT 0.0
.INDENT 3.5
Run an \fBinit\fP process inside the container that forwards signals and reaps processes. This parameter maps to the \fB\-\-init\fP option to \fI\%docker run\fP . This parameter requires version 1.25 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \fBsudo docker version \-\-format \(aq{{.Server.APIVersion}}\(aq\fP
.UNINDENT
.UNINDENT
.sp
sharedMemorySize \-> (integer)
.INDENT 0.0
.INDENT 3.5
The value for the size (in MiB) of the \fB/dev/shm\fP volume. This parameter maps to the \fB\-\-shm\-size\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If you are using tasks that use the Fargate launch type, the \fBsharedMemorySize\fP parameter is not supported.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
tmpfs \-> (list)
.INDENT 0.0
.INDENT 3.5
The container path, mount options, and size (in MiB) of the tmpfs mount. This parameter maps to the \fB\-\-tmpfs\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If you are using tasks that use the Fargate launch type, the \fBtmpfs\fP parameter is not supported.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The container path, mount options, and size of the tmpfs mount.
.sp
containerPath \-> (string)
.INDENT 0.0
.INDENT 3.5
The absolute file path where the tmpfs volume is to be mounted.
.UNINDENT
.UNINDENT
.sp
size \-> (integer)
.INDENT 0.0
.INDENT 3.5
The maximum size (in MiB) of the tmpfs volume.
.UNINDENT
.UNINDENT
.sp
mountOptions \-> (list)
.INDENT 0.0
.INDENT 3.5
The list of tmpfs volume mount options.
.sp
Valid values: \fB"defaults" | "ro" | "rw" | "suid" | "nosuid" | "dev" | "nodev" | "exec" | "noexec" | "sync" | "async" | "dirsync" | "remount" | "mand" | "nomand" | "atime" | "noatime" | "diratime" | "nodiratime" | "bind" | "rbind" | "unbindable" | "runbindable" | "private" | "rprivate" | "shared" | "rshared" | "slave" | "rslave" | "relatime" | "norelatime" | "strictatime" | "nostrictatime" | "mode" | "uid" | "gid" | "nr_inodes" | "nr_blocks" | "mpol"\fP
.sp
(string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
maxSwap \-> (integer)
.INDENT 0.0
.INDENT 3.5
The total amount of swap memory (in MiB) a container can use. This parameter will be translated to the \fB\-\-memory\-swap\fP option to \fI\%docker run\fP where the value would be the sum of the container memory plus the \fBmaxSwap\fP value.
.sp
If a \fBmaxSwap\fP value of \fB0\fP is specified, the container will not use swap. Accepted values are \fB0\fP or any positive integer. If the \fBmaxSwap\fP parameter is omitted, the container will use the swap configuration for the container instance it is running on. A \fBmaxSwap\fP value must be set for the \fBswappiness\fP parameter to be used.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If you are using tasks that use the Fargate launch type, the \fBmaxSwap\fP parameter is not supported.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
swappiness \-> (integer)
.INDENT 0.0
.INDENT 3.5
This allows you to tune a container\(aqs memory swappiness behavior. A \fBswappiness\fP value of \fB0\fP will cause swapping to not happen unless absolutely necessary. A \fBswappiness\fP value of \fB100\fP will cause pages to be swapped very aggressively. Accepted values are whole numbers between \fB0\fP and \fB100\fP . If the \fBswappiness\fP parameter is not specified, a default value of \fB60\fP is used. If a value is not specified for \fBmaxSwap\fP then this parameter is ignored. This parameter maps to the \fB\-\-memory\-swappiness\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If you are using tasks that use the Fargate launch type, the \fBswappiness\fP parameter is not supported.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
secrets \-> (list)
.INDENT 0.0
.INDENT 3.5
The secrets to pass to the container. For more information, see \fI\%Specifying Sensitive Data\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
An object representing the secret to expose to your container. Secrets can be exposed to a container in the following ways:
.INDENT 0.0
.IP \(bu 2
To inject sensitive data into your containers as environment variables, use the \fBsecrets\fP container definition parameter.
.IP \(bu 2
To reference sensitive information in the log configuration of a container, use the \fBsecretOptions\fP container definition parameter.
.UNINDENT
.sp
For more information, see \fI\%Specifying Sensitive Data\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the secret.
.UNINDENT
.UNINDENT
.sp
valueFrom \-> (string)
.INDENT 0.0
.INDENT 3.5
The secret to expose to the container. The supported values are either the full ARN of the AWS Secrets Manager secret or the full ARN of the parameter in the AWS Systems Manager Parameter Store.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If the AWS Systems Manager Parameter Store parameter exists in the same Region as the task you are launching, then you can use either the full ARN or name of the parameter. If the parameter exists in a different Region, then the full ARN must be specified.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
dependsOn \-> (list)
.INDENT 0.0
.INDENT 3.5
The dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency is defined for container startup, for container shutdown it is reversed.
.sp
For tasks using the EC2 launch type, the container instances require at least version 1.26.0 of the container agent to enable container dependencies. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see \fI\%Updating the Amazon ECS Container Agent\fP in the \fIAmazon Elastic Container Service Developer Guide\fP . If you are using an Amazon ECS\-optimized Linux AMI, your instance needs at least version 1.26.0\-1 of the \fBecs\-init\fP package. If your container instances are launched from version \fB20190301\fP or later, then they contain the required versions of the container agent and \fBecs\-init\fP . For more information, see \fI\%Amazon ECS\-optimized Linux AMI\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
For tasks using the Fargate launch type, the task or service requires platform version \fB1.3.0\fP or later.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency is defined for container startup, for container shutdown it is reversed.
.sp
Your Amazon ECS container instances require at least version 1.26.0 of the container agent to enable container dependencies. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see \fI\%Updating the Amazon ECS Container Agent\fP in the \fIAmazon Elastic Container Service Developer Guide\fP . If you are using an Amazon ECS\-optimized Linux AMI, your instance needs at least version 1.26.0\-1 of the \fBecs\-init\fP package. If your container instances are launched from version \fB20190301\fP or later, then they contain the required versions of the container agent and \fBecs\-init\fP . For more information, see \fI\%Amazon ECS\-optimized Linux AMI\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
For tasks using the Fargate launch type, this parameter requires that the task or service uses platform version 1.3.0 or later.
.UNINDENT
.UNINDENT
.sp
containerName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of a container.
.UNINDENT
.UNINDENT
.sp
condition \-> (string)
.INDENT 0.0
.INDENT 3.5
The dependency condition of the container. The following are the available conditions and their behavior:
.INDENT 0.0
.IP \(bu 2
\fBSTART\fP \- This condition emulates the behavior of links and volumes today. It validates that a dependent container is started before permitting other containers to start.
.IP \(bu 2
\fBCOMPLETE\fP \- This condition validates that a dependent container runs to completion (exits) before permitting other containers to start. This can be useful for nonessential containers that run a script and then exit. This condition cannot be set on an essential container.
.IP \(bu 2
\fBSUCCESS\fP \- This condition is the same as \fBCOMPLETE\fP , but it also requires that the container exits with a \fBzero\fP status. This condition cannot be set on an essential container.
.IP \(bu 2
\fBHEALTHY\fP \- This condition validates that the dependent container passes its Docker health check before permitting other containers to start. This requires that the dependent container has health checks configured. This condition is confirmed only at task startup.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
startTimeout \-> (integer)
.INDENT 0.0
.INDENT 3.5
Time duration (in seconds) to wait before giving up on resolving dependencies for a container. For example, you specify two containers in a task definition with containerA having a dependency on containerB reaching a \fBCOMPLETE\fP , \fBSUCCESS\fP , or \fBHEALTHY\fP status. If a \fBstartTimeout\fP value is specified for containerB and it does not reach the desired status within that time then containerA will give up and not start. This results in the task transitioning to a \fBSTOPPED\fP state.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
When the \fBECS_CONTAINER_START_TIMEOUT\fP container agent configuration variable is used, it is enforced indendently from this start timeout value.
.UNINDENT
.UNINDENT
.sp
For tasks using the Fargate launch type, this parameter requires that the task or service uses platform version 1.3.0 or later.
.sp
For tasks using the EC2 launch type, your container instances require at least version \fB1.26.0\fP of the container agent to enable a container start timeout value. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see \fI\%Updating the Amazon ECS Container Agent\fP in the \fIAmazon Elastic Container Service Developer Guide\fP . If you are using an Amazon ECS\-optimized Linux AMI, your instance needs at least version \fB1.26.0\-1\fP of the \fBecs\-init\fP package. If your container instances are launched from version \fB20190301\fP or later, then they contain the required versions of the container agent and \fBecs\-init\fP . For more information, see \fI\%Amazon ECS\-optimized Linux AMI\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.sp
stopTimeout \-> (integer)
.INDENT 0.0
.INDENT 3.5
Time duration (in seconds) to wait before the container is forcefully killed if it doesn\(aqt exit normally on its own.
.sp
For tasks using the Fargate launch type, the task or service requires platform version 1.3.0 or later. The max stop timeout value is 120 seconds and if the parameter is not specified, the default value of 30 seconds is used.
.sp
For tasks using the EC2 launch type, if the \fBstopTimeout\fP parameter is not specified, the value set for the Amazon ECS container agent configuration variable \fBECS_CONTAINER_STOP_TIMEOUT\fP is used by default. If neither the \fBstopTimeout\fP parameter or the \fBECS_CONTAINER_STOP_TIMEOUT\fP agent configuration variable are set, then the default values of 30 seconds for Linux containers and 30 seconds on Windows containers are used. Your container instances require at least version 1.26.0 of the container agent to enable a container stop timeout value. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see \fI\%Updating the Amazon ECS Container Agent\fP in the \fIAmazon Elastic Container Service Developer Guide\fP . If you are using an Amazon ECS\-optimized Linux AMI, your instance needs at least version 1.26.0\-1 of the \fBecs\-init\fP package. If your container instances are launched from version \fB20190301\fP or later, then they contain the required versions of the container agent and \fBecs\-init\fP . For more information, see \fI\%Amazon ECS\-optimized Linux AMI\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.sp
hostname \-> (string)
.INDENT 0.0
.INDENT 3.5
The hostname to use for your container. This parameter maps to \fBHostname\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-hostname\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The \fBhostname\fP parameter is not supported if you are using the \fBawsvpc\fP network mode.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
user \-> (string)
.INDENT 0.0
.INDENT 3.5
The user to use inside the container. This parameter maps to \fBUser\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-user\fP option to \fI\%docker run\fP .
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
When running tasks using the \fBhost\fP network mode, you should not run containers using the root user (UID 0). It is considered best practice to use a non\-root user.
.UNINDENT
.UNINDENT
.sp
You can specify the \fBuser\fP using the following formats. If specifying a UID or GID, you must specify it as a positive integer.
.INDENT 0.0
.IP \(bu 2
\fBuser\fP
.IP \(bu 2
\fBuser:group\fP
.IP \(bu 2
\fBuid\fP
.IP \(bu 2
\fBuid:gid\fP
.IP \(bu 2
\fBuser:gid\fP
.IP \(bu 2
\fBuid:group\fP
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
workingDirectory \-> (string)
.INDENT 0.0
.INDENT 3.5
The working directory in which to run commands inside the container. This parameter maps to \fBWorkingDir\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-workdir\fP option to \fI\%docker run\fP .
.UNINDENT
.UNINDENT
.sp
disableNetworking \-> (boolean)
.INDENT 0.0
.INDENT 3.5
When this parameter is true, networking is disabled within the container. This parameter maps to \fBNetworkDisabled\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
privileged \-> (boolean)
.INDENT 0.0
.INDENT 3.5
When this parameter is true, the container is given elevated privileges on the host container instance (similar to the \fBroot\fP user). This parameter maps to \fBPrivileged\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-privileged\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers or tasks run on AWS Fargate.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
readonlyRootFilesystem \-> (boolean)
.INDENT 0.0
.INDENT 3.5
When this parameter is true, the container is given read\-only access to its root file system. This parameter maps to \fBReadonlyRootfs\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-read\-only\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
dnsServers \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of DNS servers that are presented to the container. This parameter maps to \fBDns\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-dns\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers.
.UNINDENT
.UNINDENT
.sp
(string)
.UNINDENT
.UNINDENT
.sp
dnsSearchDomains \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of DNS search domains that are presented to the container. This parameter maps to \fBDnsSearch\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-dns\-search\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers.
.UNINDENT
.UNINDENT
.sp
(string)
.UNINDENT
.UNINDENT
.sp
extraHosts \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of hostnames and IP address mappings to append to the \fB/etc/hosts\fP file on the container. This parameter maps to \fBExtraHosts\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-add\-host\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers or tasks that use the \fBawsvpc\fP network mode.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Hostnames and IP address entries that are added to the \fB/etc/hosts\fP file of a container via the \fBextraHosts\fP parameter of its  ContainerDefinition .
.sp
hostname \-> (string)
.INDENT 0.0
.INDENT 3.5
The hostname to use in the \fB/etc/hosts\fP entry.
.UNINDENT
.UNINDENT
.sp
ipAddress \-> (string)
.INDENT 0.0
.INDENT 3.5
The IP address to use in the \fB/etc/hosts\fP entry.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
dockerSecurityOptions \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of strings to provide custom labels for SELinux and AppArmor multi\-level security systems. This field is not valid for containers in tasks using the Fargate launch type.
.sp
With Windows containers, this parameter can be used to reference a credential spec file when configuring a container for Active Directory authentication. For more information, see \fI\%Using gMSAs for Windows Containers\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
This parameter maps to \fBSecurityOpt\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-security\-opt\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The Amazon ECS container agent running on a container instance must register with the \fBECS_SELINUX_CAPABLE=true\fP or \fBECS_APPARMOR_CAPABLE=true\fP environment variables before containers placed on that instance can use these security options. For more information, see \fI\%Amazon ECS Container Agent Configuration\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.sp
For more information about valid values, see \fI\%Docker Run Security Configuration\fP .
.sp
Valid values: "no\-new\-privileges" | "apparmor:PROFILE" | "label:value" | "credentialspec:CredentialSpecFilePath"
.sp
(string)
.UNINDENT
.UNINDENT
.sp
interactive \-> (boolean)
.INDENT 0.0
.INDENT 3.5
When this parameter is \fBtrue\fP , this allows you to deploy containerized applications that require \fBstdin\fP or a \fBtty\fP to be allocated. This parameter maps to \fBOpenStdin\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-interactive\fP option to \fI\%docker run\fP .
.UNINDENT
.UNINDENT
.sp
pseudoTerminal \-> (boolean)
.INDENT 0.0
.INDENT 3.5
When this parameter is \fBtrue\fP , a TTY is allocated. This parameter maps to \fBTty\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-tty\fP option to \fI\%docker run\fP .
.UNINDENT
.UNINDENT
.sp
dockerLabels \-> (map)
.INDENT 0.0
.INDENT 3.5
A key/value map of labels to add to the container. This parameter maps to \fBLabels\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-label\fP option to \fI\%docker run\fP . This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \fBsudo docker version \-\-format \(aq{{.Server.APIVersion}}\(aq\fP
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
ulimits \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of \fBulimits\fP to set in the container. If a ulimit value is specified in a task definition, it will override the default values set by Docker. This parameter maps to \fBUlimits\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-ulimit\fP option to \fI\%docker run\fP . Valid naming values are displayed in the  Ulimit data type.
.sp
Amazon ECS tasks hosted on Fargate use the default resource limit values set by the operating system with the exception of the \fBnofile\fP resource limit parameter which Fargate overrides. The \fBnofile\fP resource limit sets a restriction on the number of open files that a container can use. The default \fBnofile\fP soft limit is \fB1024\fP and hard limit is \fB4096\fP .
.sp
This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \fBsudo docker version \-\-format \(aq{{.Server.APIVersion}}\(aq\fP
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The \fBulimit\fP settings to pass to the container.
.sp
Amazon ECS tasks hosted on Fargate use the default resource limit values set by the operating system with the exception of the \fBnofile\fP resource limit parameter which Fargate overrides. The \fBnofile\fP resource limit sets a restriction on the number of open files that a container can use. The default \fBnofile\fP soft limit is \fB1024\fP and hard limit is \fB4096\fP .
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The \fBtype\fP of the \fBulimit\fP .
.UNINDENT
.UNINDENT
.sp
softLimit \-> (integer)
.INDENT 0.0
.INDENT 3.5
The soft limit for the ulimit type.
.UNINDENT
.UNINDENT
.sp
hardLimit \-> (integer)
.INDENT 0.0
.INDENT 3.5
The hard limit for the ulimit type.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
logConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
The log configuration specification for the container.
.sp
This parameter maps to \fBLogConfig\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-log\-driver\fP option to \fI\%docker run\fP . By default, containers use the same logging driver that the Docker daemon uses. However the container may use a different logging driver than the Docker daemon by specifying a log driver with this parameter in the container definition. To use a different logging driver for a container, the log system must be configured properly on the container instance (or on a different log server for remote logging options). For more information on the options for different supported log drivers, see \fI\%Configure logging drivers\fP in the Docker documentation.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon (shown in the  LogConfiguration data type). Additional log drivers may be available in future releases of the Amazon ECS container agent.
.UNINDENT
.UNINDENT
.sp
This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \fBsudo docker version \-\-format \(aq{{.Server.APIVersion}}\(aq\fP
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The Amazon ECS container agent running on a container instance must register the logging drivers available on that instance with the \fBECS_AVAILABLE_LOGGING_DRIVERS\fP environment variable before containers placed on that instance can use these log configuration options. For more information, see \fI\%Amazon ECS Container Agent Configuration\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.sp
logDriver \-> (string)
.INDENT 0.0
.INDENT 3.5
The log driver to use for the container.
.sp
For tasks on AWS Fargate, the supported log drivers are \fBawslogs\fP , \fBsplunk\fP , and \fBawsfirelens\fP .
.sp
For tasks hosted on Amazon EC2 instances, the supported log drivers are \fBawslogs\fP , \fBfluentd\fP , \fBgelf\fP , \fBjson\-file\fP , \fBjournald\fP , \fBlogentries\fP ,\(ga\(gasyslog\(ga\(ga , \fBsplunk\fP , and \fBawsfirelens\fP .
.sp
For more information about using the \fBawslogs\fP log driver, see \fI\%Using the awslogs log driver\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
For more information about using the \fBawsfirelens\fP log driver, see \fI\%Custom log routing\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If you have a custom driver that is not listed, you can fork the Amazon ECS container agent project that is \fI\%available on GitHub\fP and customize it to work with that driver. We encourage you to submit pull requests for changes that you would like to have included. However, we do not currently provide support for running modified copies of this software.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
options \-> (map)
.INDENT 0.0
.INDENT 3.5
The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: \fBsudo docker version \-\-format \(aq{{.Server.APIVersion}}\(aq\fP
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
secretOptions \-> (list)
.INDENT 0.0
.INDENT 3.5
The secrets to pass to the log configuration. For more information, see \fI\%Specifying Sensitive Data\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
An object representing the secret to expose to your container. Secrets can be exposed to a container in the following ways:
.INDENT 0.0
.IP \(bu 2
To inject sensitive data into your containers as environment variables, use the \fBsecrets\fP container definition parameter.
.IP \(bu 2
To reference sensitive information in the log configuration of a container, use the \fBsecretOptions\fP container definition parameter.
.UNINDENT
.sp
For more information, see \fI\%Specifying Sensitive Data\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the secret.
.UNINDENT
.UNINDENT
.sp
valueFrom \-> (string)
.INDENT 0.0
.INDENT 3.5
The secret to expose to the container. The supported values are either the full ARN of the AWS Secrets Manager secret or the full ARN of the parameter in the AWS Systems Manager Parameter Store.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If the AWS Systems Manager Parameter Store parameter exists in the same Region as the task you are launching, then you can use either the full ARN or name of the parameter. If the parameter exists in a different Region, then the full ARN must be specified.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
healthCheck \-> (structure)
.INDENT 0.0
.INDENT 3.5
The container health check command and associated configuration parameters for the container. This parameter maps to \fBHealthCheck\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fBHEALTHCHECK\fP parameter of \fI\%docker run\fP .
.sp
command \-> (list)
.INDENT 0.0
.INDENT 3.5
A string array representing the command that the container runs to determine if it is healthy. The string array must start with \fBCMD\fP to execute the command arguments directly, or \fBCMD\-SHELL\fP to run the command with the container\(aqs default shell. For example:
.INDENT 0.0
.INDENT 3.5
\fB[ "CMD\-SHELL", "curl \-f http://localhost/ || exit 1" ]\fP
.UNINDENT
.UNINDENT
.sp
An exit code of 0 indicates success, and non\-zero exit code indicates failure. For more information, see \fBHealthCheck\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP .
.sp
(string)
.UNINDENT
.UNINDENT
.sp
interval \-> (integer)
.INDENT 0.0
.INDENT 3.5
The time period in seconds between each health check execution. You may specify between 5 and 300 seconds. The default value is 30 seconds.
.UNINDENT
.UNINDENT
.sp
timeout \-> (integer)
.INDENT 0.0
.INDENT 3.5
The time period in seconds to wait for a health check to succeed before it is considered a failure. You may specify between 2 and 60 seconds. The default value is 5.
.UNINDENT
.UNINDENT
.sp
retries \-> (integer)
.INDENT 0.0
.INDENT 3.5
The number of times to retry a failed health check before the container is considered unhealthy. You may specify between 1 and 10 retries. The default value is 3.
.UNINDENT
.UNINDENT
.sp
startPeriod \-> (integer)
.INDENT 0.0
.INDENT 3.5
The optional grace period within which to provide containers time to bootstrap before failed health checks count towards the maximum number of retries. You may specify between 0 and 300 seconds. The \fBstartPeriod\fP is disabled by default.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If a health check succeeds within the \fBstartPeriod\fP , then the container is considered healthy and any subsequent failures count toward the maximum number of retries.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
systemControls \-> (list)
.INDENT 0.0
.INDENT 3.5
A list of namespaced kernel parameters to set in the container. This parameter maps to \fBSysctls\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-sysctl\fP option to \fI\%docker run\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
It is not recommended that you specify network\-related \fBsystemControls\fP parameters for multiple containers in a single task that also uses either the \fBawsvpc\fP or \fBhost\fP network modes. For tasks that use the \fBawsvpc\fP network mode, the container that is started last determines which \fBsystemControls\fP parameters take effect. For tasks that use the \fBhost\fP network mode, it changes the container instance\(aqs namespaced kernel parameters as well as the containers.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A list of namespaced kernel parameters to set in the container. This parameter maps to \fBSysctls\fP in the \fI\%Create a container\fP section of the \fI\%Docker Remote API\fP and the \fB\-\-sysctl\fP option to \fI\%docker run\fP .
.sp
It is not recommended that you specify network\-related \fBsystemControls\fP parameters for multiple containers in a single task that also uses either the \fBawsvpc\fP or \fBhost\fP network mode for the following reasons:
.INDENT 0.0
.IP \(bu 2
For tasks that use the \fBawsvpc\fP network mode, if you set \fBsystemControls\fP for any container, it applies to all containers in the task. If you set different \fBsystemControls\fP for multiple containers in a single task, the container that is started last determines which \fBsystemControls\fP take effect.
.IP \(bu 2
For tasks that use the \fBhost\fP network mode, the \fBsystemControls\fP parameter applies to the container instance\(aqs kernel parameter as well as that of all containers of any tasks running on that container instance.
.UNINDENT
.sp
namespace \-> (string)
.INDENT 0.0
.INDENT 3.5
The namespaced kernel parameter for which to set a \fBvalue\fP .
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value for the namespaced kernel parameter specified in \fBnamespace\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
resourceRequirements \-> (list)
.INDENT 0.0
.INDENT 3.5
The type and amount of a resource to assign to a container. The only supported resource is a GPU.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The type and amount of a resource to assign to a container. The supported resource types are GPUs and Elastic Inference accelerators. For more information, see \fI\%Working with GPUs on Amazon ECS\fP or \fI\%Working with Amazon Elastic Inference on Amazon ECS\fP in the \fIAmazon Elastic Container Service Developer Guide\fP
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value for the specified resource type.
.sp
If the \fBGPU\fP type is used, the value is the number of physical \fBGPUs\fP the Amazon ECS container agent will reserve for the container. The number of GPUs reserved for all containers in a task should not exceed the number of available GPUs on the container instance the task is launched on.
.sp
If the \fBInferenceAccelerator\fP type is used, the \fBvalue\fP should match the \fBdeviceName\fP for an  InferenceAccelerator specified in a task definition.
.UNINDENT
.UNINDENT
.sp
type \-> (string)
.INDENT 0.0
.INDENT 3.5
The type of resource to assign to a container. The supported values are \fBGPU\fP or \fBInferenceAccelerator\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
firelensConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
The FireLens configuration for the container. This is used to specify and configure a log router for container logs. For more information, see \fI\%Custom Log Routing\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
type \-> (string)
.INDENT 0.0
.INDENT 3.5
The log router to use. The valid values are \fBfluentd\fP or \fBfluentbit\fP .
.UNINDENT
.UNINDENT
.sp
options \-> (map)
.INDENT 0.0
.INDENT 3.5
The options to use when configuring the log router. This field is optional and can be used to specify a custom configuration file or to add additional metadata, such as the task, task definition, cluster, and container instance details to the log event. If specified, the syntax to use is \fB"options":{"enable\-ecs\-log\-metadata":"true|false","config\-file\-type:"s3|file","config\-file\-value":"arn:aws:s3:::mybucket/fluent.conf|filepath"}\fP . For more information, see \fI\%Creating a Task Definition that Uses a FireLens Configuration\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Tasks hosted on AWS Fargate only support the \fBfile\fP configuration file type.
.UNINDENT
.UNINDENT
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
family \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of a family that this task definition is registered to. Up to 255 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.
.sp
A family groups multiple versions of a task definition. Amazon ECS gives the first task definition that you registered to a family a revision number of 1. Amazon ECS gives sequential revision numbers to each task definition that you add.
.UNINDENT
.UNINDENT
.sp
taskRoleArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The short name or full Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that grants containers in the task permission to call AWS APIs on your behalf. For more information, see \fI\%Amazon ECS Task Role\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
IAM roles for tasks on Windows require that the \fB\-EnableTaskIAMRole\fP option is set when you launch the Amazon ECS\-optimized Windows AMI. Your containers must also run some configuration code in order to take advantage of the feature. For more information, see \fI\%Windows IAM roles for tasks\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.sp
executionRoleArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) of the task execution role that grants the Amazon ECS container agent permission to make AWS API calls on your behalf. The task execution IAM role is required depending on the requirements of your task. For more information, see \fI\%Amazon ECS task execution IAM role\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.sp
networkMode \-> (string)
.INDENT 0.0
.INDENT 3.5
The Docker networking mode to use for the containers in the task. The valid values are \fBnone\fP , \fBbridge\fP , \fBawsvpc\fP , and \fBhost\fP . If no network mode is specified, the default is \fBbridge\fP .
.sp
For Amazon ECS tasks on Fargate, the \fBawsvpc\fP network mode is required. For Amazon ECS tasks on Amazon EC2 instances, any network mode can be used. If the network mode is set to \fBnone\fP , you cannot specify port mappings in your container definitions, and the tasks containers do not have external connectivity. The \fBhost\fP and \fBawsvpc\fP network modes offer the highest networking performance for containers because they use the EC2 network stack instead of the virtualized network stack provided by the \fBbridge\fP mode.
.sp
With the \fBhost\fP and \fBawsvpc\fP network modes, exposed container ports are mapped directly to the corresponding host port (for the \fBhost\fP network mode) or the attached elastic network interface port (for the \fBawsvpc\fP network mode), so you cannot take advantage of dynamic host port mappings.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
When using the \fBhost\fP network mode, you should not run containers using the root user (UID 0). It is considered best practice to use a non\-root user.
.UNINDENT
.UNINDENT
.sp
If the network mode is \fBawsvpc\fP , the task is allocated an elastic network interface, and you must specify a  NetworkConfiguration value when you create a service or run a task with the task definition. For more information, see \fI\%Task Networking\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Currently, only Amazon ECS\-optimized AMIs, other Amazon Linux variants with the \fBecs\-init\fP package, or AWS Fargate infrastructure support the \fBawsvpc\fP network mode.
.UNINDENT
.UNINDENT
.sp
If the network mode is \fBhost\fP , you cannot run multiple instantiations of the same task on a single container instance when port mappings are used.
.sp
Docker for Windows uses different network modes than Docker for Linux. When you register a task definition with Windows containers, you must not specify a network mode. If you use the console to register a task definition with Windows containers, you must choose the \fB<default>\fP network mode object.
.sp
For more information, see \fI\%Network settings\fP in the \fIDocker run reference\fP .
.UNINDENT
.UNINDENT
.sp
revision \-> (integer)
.INDENT 0.0
.INDENT 3.5
The revision of the task in a particular family. The revision is a version number of a task definition in a family. When you register a task definition for the first time, the revision is \fB1\fP . Each time that you register a new revision of a task definition in the same family, the revision value always increases by one, even if you have deregistered previous revisions in this family.
.UNINDENT
.UNINDENT
.sp
volumes \-> (list)
.INDENT 0.0
.INDENT 3.5
The list of data volume definitions for the task. For more information, see \fI\%Using data volumes in tasks\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The \fBhost\fP and \fBsourcePath\fP parameters are not supported for tasks run on AWS Fargate.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A data volume used in a task definition. For tasks that use the Amazon Elastic File System (Amazon EFS), specify an \fBefsVolumeConfiguration\fP . For Windows tasks that use Amazon FSx for Windows File Server file system, specify a \fBfsxWindowsFileServerVolumeConfiguration\fP . For tasks that use a Docker volume, specify a \fBDockerVolumeConfiguration\fP . For tasks that use a bind mount host volume, specify a \fBhost\fP and optional \fBsourcePath\fP . For more information, see \fI\%Using Data Volumes in Tasks\fP .
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. This name is referenced in the \fBsourceVolume\fP parameter of container definition \fBmountPoints\fP .
.UNINDENT
.UNINDENT
.sp
host \-> (structure)
.INDENT 0.0
.INDENT 3.5
This parameter is specified when you are using bind mount host volumes. The contents of the \fBhost\fP parameter determine whether your bind mount host volume persists on the host container instance and where it is stored. If the \fBhost\fP parameter is empty, then the Docker daemon assigns a host path for your data volume. However, the data is not guaranteed to persist after the containers associated with it stop running.
.sp
Windows containers can mount whole directories on the same drive as \fB$env:ProgramData\fP . Windows containers cannot mount directories on a different drive, and mount point cannot be across drives. For example, you can mount \fBC:\emy\epath:C:\emy\epath\fP and \fBD:\e:D:\e\fP , but not \fBD:\emy\epath:C:\emy\epath\fP or \fBD:\e:C:\emy\epath\fP .
.sp
sourcePath \-> (string)
.INDENT 0.0
.INDENT 3.5
When the \fBhost\fP parameter is used, specify a \fBsourcePath\fP to declare the path on the host container instance that is presented to the container. If this parameter is empty, then the Docker daemon has assigned a host path for you. If the \fBhost\fP parameter contains a \fBsourcePath\fP file location, then the data volume persists at the specified location on the host container instance until you delete it manually. If the \fBsourcePath\fP value does not exist on the host container instance, the Docker daemon creates it. If the location does exist, the contents of the source path folder are exported.
.sp
If you are using the Fargate launch type, the \fBsourcePath\fP parameter is not supported.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
dockerVolumeConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
This parameter is specified when you are using Docker volumes.
.sp
Windows containers only support the use of the \fBlocal\fP driver. To use bind mounts, specify the \fBhost\fP parameter instead.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Docker volumes are not supported by tasks run on AWS Fargate.
.UNINDENT
.UNINDENT
.sp
scope \-> (string)
.INDENT 0.0
.INDENT 3.5
The scope for the Docker volume that determines its lifecycle. Docker volumes that are scoped to a \fBtask\fP are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are scoped as \fBshared\fP persist after the task stops.
.UNINDENT
.UNINDENT
.sp
autoprovision \-> (boolean)
.INDENT 0.0
.INDENT 3.5
If this value is \fBtrue\fP , the Docker volume is created if it does not already exist.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This field is only used if the \fBscope\fP is \fBshared\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
driver \-> (string)
.INDENT 0.0
.INDENT 3.5
The Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement. If the driver was installed using the Docker plugin CLI, use \fBdocker plugin ls\fP to retrieve the driver name from your container instance. If the driver was installed using another method, use Docker plugin discovery to retrieve the driver name. For more information, see \fI\%Docker plugin discovery\fP . This parameter maps to \fBDriver\fP in the \fI\%Create a volume\fP section of the \fI\%Docker Remote API\fP and the \fBxxdriver\fP option to \fI\%docker volume create\fP .
.UNINDENT
.UNINDENT
.sp
driverOpts \-> (map)
.INDENT 0.0
.INDENT 3.5
A map of Docker driver\-specific options passed through. This parameter maps to \fBDriverOpts\fP in the \fI\%Create a volume\fP section of the \fI\%Docker Remote API\fP and the \fBxxopt\fP option to \fI\%docker volume create\fP .
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.sp
labels \-> (map)
.INDENT 0.0
.INDENT 3.5
Custom metadata to add to your Docker volume. This parameter maps to \fBLabels\fP in the \fI\%Create a volume\fP section of the \fI\%Docker Remote API\fP and the \fBxxlabel\fP option to \fI\%docker volume create\fP .
.sp
key \-> (string)
.sp
value \-> (string)
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
efsVolumeConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
This parameter is specified when you are using an Amazon Elastic File System file system for task storage.
.sp
fileSystemId \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon EFS file system ID to use.
.UNINDENT
.UNINDENT
.sp
rootDirectory \-> (string)
.INDENT 0.0
.INDENT 3.5
The directory within the Amazon EFS file system to mount as the root directory inside the host. If this parameter is omitted, the root of the Amazon EFS volume will be used. Specifying \fB/\fP will have the same effect as omitting this parameter.
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
If an EFS access point is specified in the \fBauthorizationConfig\fP , the root directory parameter must either be omitted or set to \fB/\fP which will enforce the path set on the EFS access point.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
transitEncryption \-> (string)
.INDENT 0.0
.INDENT 3.5
Whether or not to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. Transit encryption must be enabled if Amazon EFS IAM authorization is used. If this parameter is omitted, the default value of \fBDISABLED\fP is used. For more information, see \fI\%Encrypting Data in Transit\fP in the \fIAmazon Elastic File System User Guide\fP .
.UNINDENT
.UNINDENT
.sp
transitEncryptionPort \-> (integer)
.INDENT 0.0
.INDENT 3.5
The port to use when sending encrypted data between the Amazon ECS host and the Amazon EFS server. If you do not specify a transit encryption port, it will use the port selection strategy that the Amazon EFS mount helper uses. For more information, see \fI\%EFS Mount Helper\fP in the \fIAmazon Elastic File System User Guide\fP .
.UNINDENT
.UNINDENT
.sp
authorizationConfig \-> (structure)
.INDENT 0.0
.INDENT 3.5
The authorization configuration details for the Amazon EFS file system.
.sp
accessPointId \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon EFS access point ID to use. If an access point is specified, the root directory value specified in the \fBEFSVolumeConfiguration\fP must either be omitted or set to \fB/\fP which will enforce the path set on the EFS access point. If an access point is used, transit encryption must be enabled in the \fBEFSVolumeConfiguration\fP . For more information, see \fI\%Working with Amazon EFS Access Points\fP in the \fIAmazon Elastic File System User Guide\fP .
.UNINDENT
.UNINDENT
.sp
iam \-> (string)
.INDENT 0.0
.INDENT 3.5
Whether or not to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system. If enabled, transit encryption must be enabled in the \fBEFSVolumeConfiguration\fP . If this parameter is omitted, the default value of \fBDISABLED\fP is used. For more information, see \fI\%Using Amazon EFS Access Points\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
fsxWindowsFileServerVolumeConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
This parameter is specified when you are using Amazon FSx for Windows File Server file system for task storage.
.sp
fileSystemId \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon FSx for Windows File Server file system ID to use.
.UNINDENT
.UNINDENT
.sp
rootDirectory \-> (string)
.INDENT 0.0
.INDENT 3.5
The directory within the Amazon FSx for Windows File Server file system to mount as the root directory inside the host.
.UNINDENT
.UNINDENT
.sp
authorizationConfig \-> (structure)
.INDENT 0.0
.INDENT 3.5
The authorization configuration details for the Amazon FSx for Windows File Server file system.
.sp
credentialsParameter \-> (string)
.INDENT 0.0
.INDENT 3.5
The authorization credential option to use. The authorization credential options can be provided using either the Amazon Resource Name (ARN) of an AWS Secrets Manager secret or AWS Systems Manager Parameter Store parameter. The ARNs refer to the stored credentials.
.UNINDENT
.UNINDENT
.sp
domain \-> (string)
.INDENT 0.0
.INDENT 3.5
A fully qualified domain name hosted by an \fI\%AWS Directory Service\fP Managed Microsoft AD (Active Directory) or self\-hosted AD on Amazon EC2.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
status \-> (string)
.INDENT 0.0
.INDENT 3.5
The status of the task definition.
.UNINDENT
.UNINDENT
.sp
requiresAttributes \-> (list)
.INDENT 0.0
.INDENT 3.5
The container instance attributes required by your task. When an Amazon EC2 instance is registered to your cluster, the Amazon ECS container agent assigns some standard attributes to the instance. You can apply custom attributes, specified as key\-value pairs using the Amazon ECS console or the  PutAttributes API. These attributes are used when considering task placement for tasks hosted on Amazon EC2 instances. For more information, see \fI\%Attributes\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for tasks run on AWS Fargate.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
An attribute is a name\-value pair associated with an Amazon ECS object. Attributes enable you to extend the Amazon ECS data model by adding custom metadata to your resources. For more information, see \fI\%Attributes\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the attribute. The \fBname\fP must contain between 1 and 128 characters and name may contain letters (uppercase and lowercase), numbers, hyphens, underscores, forward slashes, back slashes, or periods.
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value of the attribute. The \fBvalue\fP must contain between 1 and 128 characters and may contain letters (uppercase and lowercase), numbers, hyphens, underscores, periods, at signs (@), forward slashes, back slashes, colons, or spaces. The value cannot contain any leading or trailing whitespace.
.UNINDENT
.UNINDENT
.sp
targetType \-> (string)
.INDENT 0.0
.INDENT 3.5
The type of the target with which to attach the attribute. This parameter is required if you use the short form ID for a resource instead of the full ARN.
.UNINDENT
.UNINDENT
.sp
targetId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the target. You can specify the short form ID for a resource or the full Amazon Resource Name (ARN).
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
placementConstraints \-> (list)
.INDENT 0.0
.INDENT 3.5
An array of placement constraint objects to use for tasks.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for tasks run on AWS Fargate.
.UNINDENT
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
An object representing a constraint on task placement in the task definition. For more information, see \fI\%Task placement constraints\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Task placement constraints are not supported for tasks run on AWS Fargate.
.UNINDENT
.UNINDENT
.sp
type \-> (string)
.INDENT 0.0
.INDENT 3.5
The type of constraint. The \fBMemberOf\fP constraint restricts selection to be from a group of valid candidates.
.UNINDENT
.UNINDENT
.sp
expression \-> (string)
.INDENT 0.0
.INDENT 3.5
A cluster query language expression to apply to the constraint. For more information, see \fI\%Cluster query language\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
compatibilities \-> (list)
.INDENT 0.0
.INDENT 3.5
The task launch types the task definition validated against during task definition registration. For more information, see \fI\%Amazon ECS launch types\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
(string)
.UNINDENT
.UNINDENT
.sp
requiresCompatibilities \-> (list)
.INDENT 0.0
.INDENT 3.5
The task launch types the task definition was validated against. To determine which task launch types the task definition is validated for, see the  TaskDefinition$compatibilities parameter.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
cpu \-> (string)
.INDENT 0.0
.INDENT 3.5
The number of \fBcpu\fP units used by the task. If you are using the EC2 launch type, this field is optional and any value can be used. If you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of valid values for the \fBmemory\fP parameter:
.INDENT 0.0
.IP \(bu 2
256 (.25 vCPU) \- Available \fBmemory\fP values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)
.IP \(bu 2
512 (.5 vCPU) \- Available \fBmemory\fP values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)
.IP \(bu 2
1024 (1 vCPU) \- Available \fBmemory\fP values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)
.IP \(bu 2
2048 (2 vCPU) \- Available \fBmemory\fP values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)
.IP \(bu 2
4096 (4 vCPU) \- Available \fBmemory\fP values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)
.UNINDENT
.UNINDENT
.UNINDENT
.sp
memory \-> (string)
.INDENT 0.0
.INDENT 3.5
The amount (in MiB) of memory used by the task.
.sp
If your tasks will be run on Amazon EC2 instances, you must specify either a task\-level memory value or a container\-level memory value. This field is optional and any value can be used. If a task\-level memory value is specified then the container\-level memory value is optional. For more information regarding container\-level memory and memory reservation, see \fI\%ContainerDefinition\fP .
.sp
If your tasks will be run on AWS Fargate, this field is required and you must use one of the following values, which determines your range of valid values for the \fBcpu\fP parameter:
.INDENT 0.0
.IP \(bu 2
512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) \- Available \fBcpu\fP values: 256 (.25 vCPU)
.IP \(bu 2
1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) \- Available \fBcpu\fP values: 512 (.5 vCPU)
.IP \(bu 2
2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) \- Available \fBcpu\fP values: 1024 (1 vCPU)
.IP \(bu 2
Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) \- Available \fBcpu\fP values: 2048 (2 vCPU)
.IP \(bu 2
Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) \- Available \fBcpu\fP values: 4096 (4 vCPU)
.UNINDENT
.UNINDENT
.UNINDENT
.sp
inferenceAccelerators \-> (list)
.INDENT 0.0
.INDENT 3.5
The Elastic Inference accelerator associated with the task.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Details on a Elastic Inference accelerator. For more information, see \fI\%Working with Amazon Elastic Inference on Amazon ECS\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
deviceName \-> (string)
.INDENT 0.0
.INDENT 3.5
The Elastic Inference accelerator device name. The \fBdeviceName\fP must also be referenced in a container definition as a  ResourceRequirement .
.UNINDENT
.UNINDENT
.sp
deviceType \-> (string)
.INDENT 0.0
.INDENT 3.5
The Elastic Inference accelerator type to use.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
pidMode \-> (string)
.INDENT 0.0
.INDENT 3.5
The process namespace to use for the containers in the task. The valid values are \fBhost\fP or \fBtask\fP . If \fBhost\fP is specified, then all containers within the tasks that specified the \fBhost\fP PID mode on the same container instance share the same process namespace with the host Amazon EC2 instance. If \fBtask\fP is specified, all containers within the specified task share the same process namespace. If no value is specified, the default is a private namespace. For more information, see \fI\%PID settings\fP in the \fIDocker run reference\fP .
.sp
If the \fBhost\fP PID mode is used, be aware that there is a heightened risk of undesired process namespace expose. For more information, see \fI\%Docker security\fP .
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers or tasks run on AWS Fargate.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
ipcMode \-> (string)
.INDENT 0.0
.INDENT 3.5
The IPC resource namespace to use for the containers in the task. The valid values are \fBhost\fP , \fBtask\fP , or \fBnone\fP . If \fBhost\fP is specified, then all containers within the tasks that specified the \fBhost\fP IPC mode on the same container instance share the same IPC resources with the host Amazon EC2 instance. If \fBtask\fP is specified, all containers within the specified task share the same IPC resources. If \fBnone\fP is specified, then IPC resources within the containers of a task are private and not shared with other containers in a task or on the container instance. If no value is specified, then the IPC resource namespace sharing depends on the Docker daemon setting on the container instance. For more information, see \fI\%IPC settings\fP in the \fIDocker run reference\fP .
.sp
If the \fBhost\fP IPC mode is used, be aware that there is a heightened risk of undesired IPC namespace expose. For more information, see \fI\%Docker security\fP .
.sp
If you are setting namespaced kernel parameters using \fBsystemControls\fP for the containers in the task, the following will apply to your IPC resource namespace. For more information, see \fI\%System Controls\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.INDENT 0.0
.IP \(bu 2
For tasks that use the \fBhost\fP IPC mode, IPC namespace related \fBsystemControls\fP are not supported.
.IP \(bu 2
For tasks that use the \fBtask\fP IPC mode, IPC namespace related \fBsystemControls\fP will apply to all containers within a task.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This parameter is not supported for Windows containers or tasks run on AWS Fargate.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
proxyConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
The configuration details for the App Mesh proxy.
.sp
Your Amazon ECS container instances require at least version 1.26.0 of the container agent and at least version 1.26.0\-1 of the \fBecs\-init\fP package to enable a proxy configuration. If your container instances are launched from the Amazon ECS\-optimized AMI version \fB20190301\fP or later, then they contain the required versions of the container agent and \fBecs\-init\fP . For more information, see \fI\%Amazon ECS\-optimized Linux AMI\fP in the \fIAmazon Elastic Container Service Developer Guide\fP .
.sp
type \-> (string)
.INDENT 0.0
.INDENT 3.5
The proxy type. The only supported value is \fBAPPMESH\fP .
.UNINDENT
.UNINDENT
.sp
containerName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the container that will serve as the App Mesh proxy.
.UNINDENT
.UNINDENT
.sp
properties \-> (list)
.INDENT 0.0
.INDENT 3.5
The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key\-value pairs.
.INDENT 0.0
.IP \(bu 2
\fBIgnoredUID\fP \- (Required) The user ID (UID) of the proxy container as defined by the \fBuser\fP parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If \fBIgnoredGID\fP is specified, this field can be empty.
.IP \(bu 2
\fBIgnoredGID\fP \- (Required) The group ID (GID) of the proxy container as defined by the \fBuser\fP parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If \fBIgnoredUID\fP is specified, this field can be empty.
.IP \(bu 2
\fBAppPorts\fP \- (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the \fBProxyIngressPort\fP and \fBProxyEgressPort\fP .
.IP \(bu 2
\fBProxyIngressPort\fP \- (Required) Specifies the port that incoming traffic to the \fBAppPorts\fP is directed to.
.IP \(bu 2
\fBProxyEgressPort\fP \- (Required) Specifies the port that outgoing traffic from the \fBAppPorts\fP is directed to.
.IP \(bu 2
\fBEgressIgnoredPorts\fP \- (Required) The egress traffic going to the specified ports is ignored and not redirected to the \fBProxyEgressPort\fP . It can be an empty list.
.IP \(bu 2
\fBEgressIgnoredIPs\fP \- (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the \fBProxyEgressPort\fP . It can be an empty list.
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A key\-value pair object.
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the key\-value pair. For environment variables, this is the name of the environment variable.
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value of the key\-value pair. For environment variables, this is the value of the environment variable.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
registeredAt \-> (timestamp)
.INDENT 0.0
.INDENT 3.5
The Unix timestamp for when the task definition was registered.
.UNINDENT
.UNINDENT
.sp
deregisteredAt \-> (timestamp)
.INDENT 0.0
.INDENT 3.5
The Unix timestamp for when the task definition was deregistered.
.UNINDENT
.UNINDENT
.sp
registeredBy \-> (string)
.INDENT 0.0
.INDENT 3.5
The principal that registered the task definition.
.UNINDENT
.UNINDENT
.sp
ephemeralStorage \-> (structure)
.INDENT 0.0
.INDENT 3.5
The ephemeral storage settings to use for tasks run with the task definition.
.sp
sizeInGiB \-> (integer)
.INDENT 0.0
.INDENT 3.5
The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is \fB21\fP GiB and the maximum supported value is \fB200\fP GiB.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
tags \-> (list)
.INDENT 0.0
.INDENT 3.5
The metadata that is applied to the task definition to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
.sp
The following basic restrictions apply to tags:
.INDENT 0.0
.IP \(bu 2
Maximum number of tags per resource \- 50
.IP \(bu 2
For each resource, each tag key must be unique, and each tag key can have only one value.
.IP \(bu 2
Maximum key length \- 128 Unicode characters in UTF\-8
.IP \(bu 2
Maximum value length \- 256 Unicode characters in UTF\-8
.IP \(bu 2
If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, 