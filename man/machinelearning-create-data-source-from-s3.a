.\" Man page generated from reStructuredText.
.
.TH "MACHINELEARNING-CREATE-DATA-SOURCE-FROM-S3" "a" "" ""
.SH NAME
machinelearning-create-data-source-from-s3 \- Creates a DataSource object
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Creates a \fBDataSource\fP object. A \fBDataSource\fP references data that can be used to perform \fBCreateMLModel\fP , \fBCreateEvaluation\fP , or \fBCreateBatchPrediction\fP operations.
.INDENT 0.0
.INDENT 3.5
\fBCreateDataSourceFromS3\fP is an asynchronous operation. In response to \fBCreateDataSourceFromS3\fP , Amazon Machine Learning (Amazon ML) immediately returns and sets the \fBDataSource\fP status to \fBPENDING\fP . After the \fBDataSource\fP has been created and is ready for use, Amazon ML sets the \fBStatus\fP parameter to \fBCOMPLETED\fP . \fBDataSource\fP in the \fBCOMPLETED\fP or \fBPENDING\fP state can be used to perform only \fBCreateMLModel\fP , \fBCreateEvaluation\fP or \fBCreateBatchPrediction\fP operations.
.UNINDENT
.UNINDENT
.sp
If Amazon ML can\(aqt accept the input source, it sets the \fBStatus\fP parameter to \fBFAILED\fP and includes an error message in the \fBMessage\fP attribute of the \fBGetDataSource\fP operation response.
.sp
The observation data used in a \fBDataSource\fP should be ready to use; that is, it should have a consistent structure, and missing data values should be kept to a minimum. The observation data must reside in one or more .csv files in an Amazon Simple Storage Service (Amazon S3) location, along with a schema that describes the data items by name and type. The same schema must be used for all of the data files referenced by the \fBDataSource\fP .
.sp
After the \fBDataSource\fP has been created, it\(aqs ready to use in evaluations and batch predictions. If you plan to use the \fBDataSource\fP to train an \fBMLModel\fP , the \fBDataSource\fP also needs a recipe. A recipe describes how each input variable will be used in training an \fBMLModel\fP . Will the variable be included or excluded from training? Will the variable be manipulated; for example, will it be combined with another variable or will it be split apart into word combinations? The recipe provides answers to these questions.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  create\-data\-source\-from\-s3
\-\-data\-source\-id <value>
[\-\-data\-source\-name <value>]
\-\-data\-spec <value>
[\-\-compute\-statistics | \-\-no\-compute\-statistics]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-data\-source\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
A user\-supplied identifier that uniquely identifies the \fBDataSource\fP .
.UNINDENT
.UNINDENT
.sp
\fB\-\-data\-source\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
A user\-supplied name or description of the \fBDataSource\fP .
.UNINDENT
.UNINDENT
.sp
\fB\-\-data\-spec\fP (structure)
.INDENT 0.0
.INDENT 3.5
The data specification of a \fBDataSource\fP :
.INDENT 0.0
.IP \(bu 2
DataLocationS3 \- The Amazon S3 location of the observation data.
.IP \(bu 2
DataSchemaLocationS3 \- The Amazon S3 location of the \fBDataSchema\fP .
.IP \(bu 2
DataSchema \- A JSON string representing the schema. This is not required if \fBDataSchemaUri\fP is specified.
.IP \(bu 2
DataRearrangement \- A JSON string that represents the splitting and rearrangement requirements for the \fBDatasource\fP .  Sample \- \fB"{\e"splitting\e":{\e"percentBegin\e":10,\e"percentEnd\e":60}}"\fP
.UNINDENT
.sp
DataLocationS3 \-> (string)
.INDENT 0.0
.INDENT 3.5
The location of the data file(s) used by a \fBDataSource\fP . The URI specifies a data file or an Amazon Simple Storage Service (Amazon S3) directory or bucket containing data files.
.UNINDENT
.UNINDENT
.sp
DataRearrangement \-> (string)
.INDENT 0.0
.INDENT 3.5
A JSON string that represents the splitting and rearrangement processing to be applied to a \fBDataSource\fP . If the \fBDataRearrangement\fP parameter is not provided, all of the input data is used to create the \fBDatasource\fP .
.sp
There are multiple parameters that control what data is used to create a datasource:
.INDENT 0.0
.IP \(bu 2

.nf
**
.fi
\fBpercentBegin\fP **   Use \fBpercentBegin\fP to indicate the beginning of the range of the data used to create the Datasource. If you do not include \fBpercentBegin\fP and \fBpercentEnd\fP , Amazon ML includes all of the data when creating the datasource.
.IP "System Message: WARNING/2 (<string>:, line 118)"
Inline strong start\-string without end\-string.
.IP \(bu 2

.nf
**
.fi
\fBpercentEnd\fP **   Use \fBpercentEnd\fP to indicate the end of the range of the data used to create the Datasource. If you do not include \fBpercentBegin\fP and \fBpercentEnd\fP , Amazon ML includes all of the data when creating the datasource.
.IP "System Message: WARNING/2 (<string>:, line 120)"
Inline strong start\-string without end\-string.
.IP \(bu 2

.nf
**
.fi
\fBcomplement\fP **   The \fBcomplement\fP parameter instructs Amazon ML to use the data that is not included in the range of \fBpercentBegin\fP to \fBpercentEnd\fP to create a datasource. The \fBcomplement\fP parameter is useful if you need to create complementary datasources for training and evaluation. To create a complementary datasource, use the same values for \fBpercentBegin\fP and \fBpercentEnd\fP , along with the \fBcomplement\fP parameter. For example, the following two datasources do not share any data, and can be used to train and evaluate a model. The first datasource has 25 percent of the data, and the second one has 75 percent of the data. Datasource for evaluation: \fB{"splitting":{"percentBegin":0, "percentEnd":25}}\fP   Datasource for training: \fB{"splitting":{"percentBegin":0, "percentEnd":25, "complement":"true"}}\fP
.IP "System Message: WARNING/2 (<string>:, line 122)"
Inline strong start\-string without end\-string.
.IP \(bu 2

.nf
**
.fi
\fBstrategy\fP **   To change how Amazon ML splits the data for a datasource, use the \fBstrategy\fP parameter. The default value for the \fBstrategy\fP parameter is \fBsequential\fP , meaning that Amazon ML takes all of the data records between the \fBpercentBegin\fP and \fBpercentEnd\fP parameters for the datasource, in the order that the records appear in the input data. The following two \fBDataRearrangement\fP lines are examples of sequentially ordered training and evaluation datasources: Datasource for evaluation: \fB{"splitting":{"percentBegin":70, "percentEnd":100, "strategy":"sequential"}}\fP   Datasource for training: \fB{"splitting":{"percentBegin":70, "percentEnd":100, "strategy":"sequential", "complement":"true"}}\fP   To randomly split the input data into the proportions indicated by the percentBegin and percentEnd parameters, set the \fBstrategy\fP parameter to \fBrandom\fP and provide a string that is used as the seed value for the random data splitting (for example, you can use the S3 path to your data as the random seed string). If you choose the random split strategy, Amazon ML assigns each row of data a pseudo\-random number between 0 and 100, and then selects the rows that have an assigned number between \fBpercentBegin\fP and \fBpercentEnd\fP . Pseudo\-random numbers are assigned using both the input seed string value and the byte offset as a seed, so changing the data results in a different split. Any existing ordering is preserved. The random splitting strategy ensures that variables in the training and evaluation data are distributed similarly. It is useful in the cases where the input data may have an implicit sort order, which would otherwise result in training and evaluation datasources containing non\-similar data records. The following two \fBDataRearrangement\fP lines are examples of non\-sequentially ordered training and evaluation datasources: Datasource for evaluation: \fB{"splitting":{"percentBegin":70, "percentEnd":100, "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv"}}\fP   Datasource for training: \fB{"splitting":{"percentBegin":70, "percentEnd":100, "strategy":"random", "randomSeed"="s3://my_s3_path/bucket/file.csv", "complement":"true"}}\fP
.IP "System Message: WARNING/2 (<string>:, line 124)"
Inline strong start\-string without end\-string.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
DataSchema \-> (string)
.INDENT 0.0
.INDENT 3.5
A JSON string that represents the schema for an Amazon S3 \fBDataSource\fP . The \fBDataSchema\fP defines the structure of the observation data in the data file(s) referenced in the \fBDataSource\fP .
.sp
You must provide either the \fBDataSchema\fP or the \fBDataSchemaLocationS3\fP .
.sp
Define your \fBDataSchema\fP as a series of key\-value pairs. \fBattributes\fP and \fBexcludedVariableNames\fP have an array of key\-value pairs for their value. Use the following format to define your \fBDataSchema\fP .
.sp
{ "version": "1.0",
.sp
"recordAnnotationFieldName": "F1",
.sp
"recordWeightFieldName": "F2",
.sp
"targetFieldName": "F3",
.sp
"dataFormat": "CSV",
.sp
"dataFileContainsHeader": true,
.sp
"attributes": [
.sp
{ "fieldName": "F1", "fieldType": "TEXT" }, { "fieldName": "F2", "fieldType": "NUMERIC" }, { "fieldName": "F3", "fieldType": "CATEGORICAL" }, { "fieldName": "F4", "fieldType": "NUMERIC" }, { "fieldName": "F5", "fieldType": "CATEGORICAL" }, { "fieldName": "F6", "fieldType": "TEXT" }, { "fieldName": "F7", "fieldType": "WEIGHTED_INT_SEQUENCE" }, { "fieldName": "F8", "fieldType": "WEIGHTED_STRING_SEQUENCE" } ],
.sp
"excludedVariableNames": [ "F6" ] }
.UNINDENT
.UNINDENT
.sp
DataSchemaLocationS3 \-> (string)
.INDENT 0.0
.INDENT 3.5
Describes the schema location in Amazon S3. You must provide either the \fBDataSchema\fP or the \fBDataSchemaLocationS3\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DataLocationS3=string,DataRearrangement=string,DataSchema=string,DataSchemaLocationS3=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "DataLocationS3": "string",
  "DataRearrangement": "string",
  "DataSchema": "string",
  "DataSchemaLocationS3": "string"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-compute\-statistics\fP | \fB\-\-no\-compute\-statistics\fP (boolean)
.INDENT 0.0
.INDENT 3.5
The compute statistics for a \fBDataSource\fP . The statistics are generated from the observation data referenced by a \fBDataSource\fP . Amazon ML uses the statistics internally during \fBMLModel\fP training. This parameter must be set to \fBtrue\fP if the DataSourceneeds to be used for \fBMLModel\fP training.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
DataSourceId \-> (string)
.INDENT 0.0
.INDENT 3.5
A user\-supplied ID that uniquely identifies the \fBDataSource\fP . This value should be identical to the value of the \fBDataSourceID\fP in the request.
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
