.\" Man page generated from reStructuredText.
.
.TH "HONEYCODE-BATCH-UPSERT-TABLE-ROWS" "a" "" ""
.SH NAME
honeycode-batch-upsert-table-rows \- The BatchUpsertTableRows API allows you to upsert one or more rows in a table
.SH DESCRIPTION
.sp
The BatchUpsertTableRows API allows you to upsert one or more rows in a table. The upsert operation takes a filter expression as input and evaluates it to find matching rows on the destination table. If matching rows are found, it will update the cells in the matching rows to new values specified in the request. If no matching rows are found, a new row is added at the end of the table and the cells in that row are set to the new values specified in the request.
.sp
You can specify the values to set in some or all of the columns in the table for the matching or newly appended rows. If a column is not explicitly specified for a particular row, then that column will not be updated for that row. To clear out the data in a specific cell, you need to set the value as an empty string ("").
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  batch\-upsert\-table\-rows
\-\-workbook\-id <value>
\-\-table\-id <value>
\-\-rows\-to\-upsert <value>
[\-\-client\-request\-token <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-workbook\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The ID of the workbook where the rows are being upserted.
.sp
If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
.UNINDENT
.UNINDENT
.sp
\fB\-\-table\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The ID of the table where the rows are being upserted.
.sp
If a table with the specified id could not be found, this API throws ResourceNotFoundException.
.UNINDENT
.UNINDENT
.sp
\fB\-\-rows\-to\-upsert\fP (list)
.INDENT 0.0
.INDENT 3.5
The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list.
.sp
Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Data needed to upsert rows in a table as part of a single item in the BatchUpsertTableRows request.
.sp
batchItemId \-> (string)
.INDENT 0.0
.INDENT 3.5
An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.
.UNINDENT
.UNINDENT
.sp
filter \-> (structure)
.INDENT 0.0
.INDENT 3.5
The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated.
.sp
Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn\(aqt evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.
.sp
formula \-> (string)
.INDENT 0.0
.INDENT 3.5
A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.
.UNINDENT
.UNINDENT
.sp
contextRowId \-> (string)
.INDENT 0.0
.INDENT 3.5
The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
cellsToUpdate \-> (map)
.INDENT 0.0
.INDENT 3.5
A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.
.sp
key \-> (string)
.sp
value \-> (structure)
.INDENT 0.0
.INDENT 3.5
CellInput object contains the data needed to create or update cells in a table.
.sp
fact \-> (string)
.INDENT 0.0
.INDENT 3.5
Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
batchItemId=string,filter={formula=string,contextRowId=string},cellsToUpdate={KeyName1={fact=string},KeyName2={fact=string}} ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "batchItemId": "string",
    "filter": {
      "formula": "string",
      "contextRowId": "string"
    },
    "cellsToUpdate": {"string": {
          "fact": "string"
        }
      ...}
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-client\-request\-token\fP (string)
.INDENT 0.0
.INDENT 3.5
The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again.
.sp
Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
rows \-> (map)
.INDENT 0.0
.INDENT 3.5
A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.
.sp
key \-> (string)
.sp
value \-> (structure)
.INDENT 0.0
.INDENT 3.5
An object that represents the result of a single upsert row request.
.sp
rowIds \-> (list)
.INDENT 0.0
.INDENT 3.5
The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
upsertAction \-> (string)
.INDENT 0.0
.INDENT 3.5
The result of the upsert action.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
workbookCursor \-> (long)
.INDENT 0.0
.INDENT 3.5
The updated workbook cursor after updating or appending rows in the table.
.UNINDENT
.UNINDENT
.sp
failedBatchItems \-> (list)
.INDENT 0.0
.INDENT 3.5
The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A single item in a batch that failed to perform the intended action because of an error preventing it from succeeding.
.sp
id \-> (string)
.INDENT 0.0
.INDENT 3.5
The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.
.UNINDENT
.UNINDENT
.sp
errorMessage \-> (string)
.INDENT 0.0
.INDENT 3.5
The error message that indicates why the batch item failed.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
