.\" Man page generated from reStructuredText.
.
.TH "IOT-GET-PERCENTILES" "a" "" ""
.SH NAME
iot-get-percentiles \- Groups the aggregated values that match the query into percentile groupings
.SH DESCRIPTION
.sp
Groups the aggregated values that match the query into percentile groupings. The default percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own when you call \fBGetPercentiles\fP . This function returns a value for each percentile group specified (or the default percentile groupings). The percentile group "1" contains the aggregated field value that occurs in approximately one percent of the values that match the query. The percentile group "5" contains the aggregated field value that occurs in approximately five percent of the values that match the query, and so on. The result is an approximation, the more values that match the query, the more accurate the percentile values.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  get\-percentiles
[\-\-index\-name <value>]
\-\-query\-string <value>
[\-\-aggregation\-field <value>]
[\-\-query\-version <value>]
[\-\-percents <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-index\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
The name of the index to search.
.UNINDENT
.UNINDENT
.sp
\fB\-\-query\-string\fP (string)
.INDENT 0.0
.INDENT 3.5
The query string.
.UNINDENT
.UNINDENT
.sp
\fB\-\-aggregation\-field\fP (string)
.INDENT 0.0
.INDENT 3.5
The field to aggregate.
.UNINDENT
.UNINDENT
.sp
\fB\-\-query\-version\fP (string)
.INDENT 0.0
.INDENT 3.5
The query version.
.UNINDENT
.UNINDENT
.sp
\fB\-\-percents\fP (list)
.INDENT 0.0
.INDENT 3.5
The percentile groups returned.
.sp
(double)
.UNINDENT
.UNINDENT
.sp
Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
double double ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo group the aggregated values that match the query into percentile groupings\fP
.sp
You can use the following setup script to create 10 things representing 10 temperature sensors. Each new thing has 1 attribute.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Bash script. If in other shells, type \(gabash\(ga before running
Temperatures=(70 71 72 73 74 75 47 97 98 99)
for ((i=0; i<10 ; i++))
do
    thing=$(aws iot create\-thing \-\-thing\-name "TempSensor$i" \-\-attribute\-payload attributes="{temperature=${Temperatures[i]}}")
    aws iot describe\-thing \-\-thing\-name "TempSensor$i"
done
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Example output of the setup script:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "version": 1,
    "thingName": "TempSensor0",
    "defaultClientId": "TempSensor0",
    "attributes": {
        "temperature": "70"
    },
    "thingArn": "arn:aws:iot:us\-east\-1:123456789012:thing/TempSensor0",
    "thingId": "example1\-90ab\-cdef\-fedc\-ba987example"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The following \fBget\-percentiles\fP example queries the 10 sensors created by the setup script and returns a value for each percentile group specified. The percentile group "10" contains the aggregated field value that occurs in approximately 10 percent of the values that match the query. In the following output, {"percent": 10.0, "value": 67.7} means approximately 10.0% of the temperature values are below 67.7.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws iot get\-percentiles \e
    \-\-aggregation\-field "attributes.temperature" \e
    \-\-query\-string "thingName:TempSensor*" \e
    \-\-percents 10 25 50 75 90
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "percentiles": [
        {
            "percent": 10.0,
            "value": 67.7
        },
        {
            "percent": 25.0,
            "value": 71.25
        },
        {
            "percent": 50.0,
            "value": 73.5
        },
        {
            "percent": 75.0,
            "value": 91.5
        },
        {
            "percent": 90.0,
            "value": 98.1
        }
    ]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Querying for Aggregate Data\fP in the \fIAWS IoT Developer Guide\fP\&.
.SH OUTPUT
.sp
percentiles \-> (list)
.INDENT 0.0
.INDENT 3.5
The percentile values of the aggregated fields.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Describes the percentile and percentile value.
.sp
percent \-> (double)
.INDENT 0.0
.INDENT 3.5
The percentile.
.UNINDENT
.UNINDENT
.sp
value \-> (double)
.INDENT 0.0
.INDENT 3.5
The value of the percentile.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
