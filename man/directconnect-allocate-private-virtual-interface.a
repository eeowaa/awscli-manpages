.\" Man page generated from reStructuredText.
.
.TH "DIRECTCONNECT-ALLOCATE-PRIVATE-VIRTUAL-INTERFACE" "a" "" ""
.SH NAME
directconnect-allocate-private-virtual-interface \- Provisions a private virtual interface to be owned by the specified AWS account
.SH DESCRIPTION
.sp
Provisions a private virtual interface to be owned by the specified AWS account.
.sp
Virtual interfaces created using this action must be confirmed by the owner using  ConfirmPrivateVirtualInterface . Until then, the virtual interface is in the \fBConfirming\fP state and is not available to handle traffic.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  allocate\-private\-virtual\-interface
\-\-connection\-id <value>
\-\-owner\-account <value>
\-\-new\-private\-virtual\-interface\-allocation <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-connection\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The ID of the connection on which the private virtual interface is provisioned.
.UNINDENT
.UNINDENT
.sp
\fB\-\-owner\-account\fP (string)
.INDENT 0.0
.INDENT 3.5
The ID of the AWS account that owns the virtual private interface.
.UNINDENT
.UNINDENT
.sp
\fB\-\-new\-private\-virtual\-interface\-allocation\fP (structure)
.INDENT 0.0
.INDENT 3.5
Information about the private virtual interface.
.sp
virtualInterfaceName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a\-z, 0\-9 and a hyphen (\-).
.UNINDENT
.UNINDENT
.sp
vlan \-> (integer)
.INDENT 0.0
.INDENT 3.5
The ID of the VLAN.
.UNINDENT
.UNINDENT
.sp
asn \-> (integer)
.INDENT 0.0
.INDENT 3.5
The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
.sp
The valid values are 1\-2147483647.
.UNINDENT
.UNINDENT
.sp
mtu \-> (integer)
.INDENT 0.0
.INDENT 3.5
The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.
.UNINDENT
.UNINDENT
.sp
authKey \-> (string)
.INDENT 0.0
.INDENT 3.5
The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.
.UNINDENT
.UNINDENT
.sp
amazonAddress \-> (string)
.INDENT 0.0
.INDENT 3.5
The IP address assigned to the Amazon interface.
.UNINDENT
.UNINDENT
.sp
addressFamily \-> (string)
.INDENT 0.0
.INDENT 3.5
The address family for the BGP peer.
.UNINDENT
.UNINDENT
.sp
customerAddress \-> (string)
.INDENT 0.0
.INDENT 3.5
The IP address assigned to the customer interface.
.UNINDENT
.UNINDENT
.sp
tags \-> (list)
.INDENT 0.0
.INDENT 3.5
The tags associated with the private virtual interface.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Information about a tag.
.sp
key \-> (string)
.INDENT 0.0
.INDENT 3.5
The key.
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
virtualInterfaceName=string,vlan=integer,asn=integer,mtu=integer,authKey=string,amazonAddress=string,addressFamily=string,customerAddress=string,tags=[{key=string,value=string},{key=string,value=string}]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "virtualInterfaceName": "string",
  "vlan": integer,
  "asn": integer,
  "mtu": integer,
  "authKey": "string",
  "amazonAddress": "string",
  "addressFamily": "ipv4"|"ipv6",
  "customerAddress": "string",
  "tags": [
    {
      "key": "string",
      "value": "string"
    }
    ...
  ]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBTo provision a private virtual interface\fP
.sp
The following \fBallocate\-private\-virtual\-interface\fP command provisions a private virtual interface to be owned by a different customer:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws directconnect allocate\-private\-virtual\-interface \-\-connection\-id dxcon\-ffjrkx17 \-\-owner\-account 123456789012 \-\-new\-private\-virtual\-interface\-allocation virtualInterfaceName=PrivateVirtualInterface,vlan=1000,asn=65000,authKey=asdf34example,amazonAddress=192.168.1.1/30,customerAddress=192.168.1.2/30
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "virtualInterfaceState": "confirming",
    "asn": 65000,
    "vlan": 1000,
    "customerAddress": "192.168.1.2/30",
    "ownerAccount": "123456789012",
    "connectionId": "dxcon\-ffjrkx17",
    "virtualInterfaceId": "dxvif\-fgy8orxu",
    "authKey": "asdf34example",
    "routeFilterPrefixes": [],
    "location": "TIVIT",
    "customerRouterConfig": "<?xml version=\e"1.0\e" encoding=\e"UTF\-8\e"?>\en  <logical_connection id=\e"dxvif\-fgy8orxu\e">\en  <vlan>1000</vlan>\en  <customer_address>192.168.1.2/30</customer_address>\en  <amazon_address>192.168.1.1/30</amazon_address>\en  <bgp_asn>65000</bgp_asn>\en  <bgp_auth_key>asdf34example</bgp_auth_key>\en  <amazon_bgp_asn>7224</amazon_bgp_asn>\en  <connection_type>private</connection_type>\en</logical_connection>\en",
    "amazonAddress": "192.168.1.1/30",
    "virtualInterfaceType": "private",
    "virtualInterfaceName": "PrivateVirtualInterface"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OUTPUT
.sp
ownerAccount \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the AWS account that owns the virtual interface.
.UNINDENT
.UNINDENT
.sp
virtualInterfaceId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the virtual interface.
.UNINDENT
.UNINDENT
.sp
location \-> (string)
.INDENT 0.0
.INDENT 3.5
The location of the connection.
.UNINDENT
.UNINDENT
.sp
connectionId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the connection.
.UNINDENT
.UNINDENT
.sp
virtualInterfaceType \-> (string)
.INDENT 0.0
.INDENT 3.5
The type of virtual interface. The possible values are \fBprivate\fP and \fBpublic\fP .
.UNINDENT
.UNINDENT
.sp
virtualInterfaceName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the virtual interface assigned by the customer network. The name has a maximum of 100 characters. The following are valid characters: a\-z, 0\-9 and a hyphen (\-).
.UNINDENT
.UNINDENT
.sp
vlan \-> (integer)
.INDENT 0.0
.INDENT 3.5
The ID of the VLAN.
.UNINDENT
.UNINDENT
.sp
asn \-> (integer)
.INDENT 0.0
.INDENT 3.5
The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
.sp
The valid values are 1\-2147483647.
.UNINDENT
.UNINDENT
.sp
amazonSideAsn \-> (long)
.INDENT 0.0
.INDENT 3.5
The autonomous system number (ASN) for the Amazon side of the connection.
.UNINDENT
.UNINDENT
.sp
authKey \-> (string)
.INDENT 0.0
.INDENT 3.5
The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.
.UNINDENT
.UNINDENT
.sp
amazonAddress \-> (string)
.INDENT 0.0
.INDENT 3.5
The IP address assigned to the Amazon interface.
.UNINDENT
.UNINDENT
.sp
customerAddress \-> (string)
.INDENT 0.0
.INDENT 3.5
The IP address assigned to the customer interface.
.UNINDENT
.UNINDENT
.sp
addressFamily \-> (string)
.INDENT 0.0
.INDENT 3.5
The address family for the BGP peer.
.UNINDENT
.UNINDENT
.sp
virtualInterfaceState \-> (string)
.INDENT 0.0
.INDENT 3.5
The state of the virtual interface. The following are the possible values:
.INDENT 0.0
.IP \(bu 2
\fBconfirming\fP : The creation of the virtual interface is pending confirmation from the virtual interface owner. If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.
.IP \(bu 2
\fBverifying\fP : This state only applies to public virtual interfaces. Each public virtual interface needs validation before the virtual interface can be created.
.IP \(bu 2
\fBpending\fP : A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.
.IP \(bu 2
\fBavailable\fP : A virtual interface that is able to forward traffic.
.IP \(bu 2
\fBdown\fP : A virtual interface that is BGP down.
.IP \(bu 2
\fBdeleting\fP : A virtual interface is in this state immediately after calling  DeleteVirtualInterface until it can no longer forward traffic.
.IP \(bu 2
\fBdeleted\fP : A virtual interface that cannot forward traffic.
.IP \(bu 2
\fBrejected\fP : The virtual interface owner has declined creation of the virtual interface. If a virtual interface in the \fBConfirming\fP state is deleted by the virtual interface owner, the virtual interface enters the \fBRejected\fP state.
.IP \(bu 2
\fBunknown\fP : The state of the virtual interface is not available.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
customerRouterConfig \-> (string)
.INDENT 0.0
.INDENT 3.5
The customer router configuration.
.UNINDENT
.UNINDENT
.sp
mtu \-> (integer)
.INDENT 0.0
.INDENT 3.5
The maximum transmission unit (MTU), in bytes. The supported values are 1500 and 9001. The default value is 1500.
.UNINDENT
.UNINDENT
.sp
jumboFrameCapable \-> (boolean)
.INDENT 0.0
.INDENT 3.5
Indicates whether jumbo frames (9001 MTU) are supported.
.UNINDENT
.UNINDENT
.sp
virtualGatewayId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the virtual private gateway. Applies only to private virtual interfaces.
.UNINDENT
.UNINDENT
.sp
directConnectGatewayId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the Direct Connect gateway.
.UNINDENT
.UNINDENT
.sp
routeFilterPrefixes \-> (list)
.INDENT 0.0
.INDENT 3.5
The routes to be advertised to the AWS network in this Region. Applies to public virtual interfaces.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Information about a route filter prefix that a customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.
.sp
cidr \-> (string)
.INDENT 0.0
.INDENT 3.5
The CIDR block for the advertised route. Separate multiple routes using commas. An IPv6 CIDR must use /64 or shorter.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
bgpPeers \-> (list)
.INDENT 0.0
.INDENT 3.5
The BGP peers configured on this virtual interface.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Information about a BGP peer.
.sp
bgpPeerId \-> (string)
.INDENT 0.0
.INDENT 3.5
The ID of the BGP peer.
.UNINDENT
.UNINDENT
.sp
asn \-> (integer)
.INDENT 0.0
.INDENT 3.5
The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
.UNINDENT
.UNINDENT
.sp
authKey \-> (string)
.INDENT 0.0
.INDENT 3.5
The authentication key for BGP configuration. This string has a minimum length of 6 characters and and a maximun lenth of 80 characters.
.UNINDENT
.UNINDENT
.sp
addressFamily \-> (string)
.INDENT 0.0
.INDENT 3.5
The address family for the BGP peer.
.UNINDENT
.UNINDENT
.sp
amazonAddress \-> (string)
.INDENT 0.0
.INDENT 3.5
The IP address assigned to the Amazon interface.
.UNINDENT
.UNINDENT
.sp
customerAddress \-> (string)
.INDENT 0.0
.INDENT 3.5
The IP address assigned to the customer interface.
.UNINDENT
.UNINDENT
.sp
bgpPeerState \-> (string)
.INDENT 0.0
.INDENT 3.5
The state of the BGP peer. The following are the possible values:
.INDENT 0.0
.IP \(bu 2
\fBverifying\fP : The BGP peering addresses or ASN require validation before the BGP peer can be created. This state applies only to public virtual interfaces.
.IP \(bu 2
\fBpending\fP : The BGP peer is created, and remains in this state until it is ready to be established.
.IP \(bu 2
\fBavailable\fP : The BGP peer is ready to be established.
.IP \(bu 2
\fBdeleting\fP : The BGP peer is being deleted.
.IP \(bu 2
\fBdeleted\fP : The BGP peer is deleted and cannot be established.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
bgpStatus \-> (string)
.INDENT 0.0
.INDENT 3.5
The status of the BGP peer. The following are the possible values:
.INDENT 0.0
.IP \(bu 2
\fBup\fP : The BGP peer is established. This state does not indicate the state of the routing function. Ensure that you are receiving routes over the BGP session.
.IP \(bu 2
\fBdown\fP : The BGP peer is down.
.IP \(bu 2
\fBunknown\fP : The BGP peer status is not available.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
awsDeviceV2 \-> (string)
.INDENT 0.0
.INDENT 3.5
The Direct Connect endpoint on which the BGP peer terminates.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
region \-> (string)
.INDENT 0.0
.INDENT 3.5
The AWS Region where the virtual interface is located.
.UNINDENT
.UNINDENT
.sp
awsDeviceV2 \-> (string)
.INDENT 0.0
.INDENT 3.5
The Direct Connect endpoint on which the virtual interface terminates.
.UNINDENT
.UNINDENT
.sp
tags \-> (list)
.INDENT 0.0
.INDENT 3.5
The tags associated with the virtual interface.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
Information about a tag.
.sp
key \-> (string)
.INDENT 0.0
.INDENT 3.5
The key.
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
