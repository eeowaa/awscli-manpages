.\" Man page generated from reStructuredText.
.
.TH "SDB-PUT-ATTRIBUTES" "a" "" ""
.SH NAME
sdb-put-attributes \- The PutAttributes operation creates or replaces attributes in an item
.SH DESCRIPTION
.sp
The PutAttributes operation creates or replaces attributes in an item. The client may specify new attributes using a combination of the \fBAttribute.X.Name\fP and \fBAttribute.X.Value\fP parameters. The client specifies the first attribute by the parameters \fBAttribute.0.Name\fP and \fBAttribute.0.Value\fP , the second attribute by the parameters \fBAttribute.1.Name\fP and \fBAttribute.1.Value\fP , and so on.
.sp
Attributes are uniquely identified in an item by their name/value combination. For example, a single item can have the attributes \fB{ "first_name", "first_value" }\fP and \fB{ "first_name", second_value" }\fP . However, it cannot have two attribute instances where both the \fBAttribute.X.Name\fP and \fBAttribute.X.Value\fP are the same.
.sp
Optionally, the requestor can supply the \fBReplace\fP parameter for each individual attribute. Setting this value to \fBtrue\fP causes the new attribute value to replace the existing attribute value(s). For example, if an item has the attributes \fB{ \(aqa\(aq, \(aq1\(aq }\fP , \fB{ \(aqb\(aq, \(aq2\(aq}\fP and \fB{ \(aqb\(aq, \(aq3\(aq }\fP and the requestor calls \fBPutAttributes\fP using the attributes \fB{ \(aqb\(aq, \(aq4\(aq }\fP with the \fBReplace\fP parameter set to true, the final attributes of the item are changed to \fB{ \(aqa\(aq, \(aq1\(aq }\fP and \fB{ \(aqb\(aq, \(aq4\(aq }\fP , which replaces the previous values of the \(aqb\(aq attribute with the new value.
.sp
You cannot specify an empty string as an attribute name.
.sp
Because Amazon SimpleDB makes multiple copies of client data and uses an eventual consistency update model, an immediate  GetAttributes or  Select operation (read) immediately after a  PutAttributes or  DeleteAttributes operation (write) might not return the updated data.
.sp
The following limitations are enforced for this operation:
.INDENT 0.0
.IP \(bu 2
256 total attribute name\-value pairs per item
.IP \(bu 2
One billion attributes per domain
.IP \(bu 2
10 GB of total user data storage per domain
.UNINDENT
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  put\-attributes
\-\-domain\-name <value>
\-\-item\-name <value>
\-\-attributes <value>
[\-\-expected <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-domain\-name\fP (string)
The name of the domain in which to perform the operation.
.sp
\fB\-\-item\-name\fP (string)
The name of the item.
.sp
\fB\-\-attributes\fP (list)
The list of attributes.(structure)
.INDENT 0.0
.INDENT 3.5
Name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the replaceable attribute.
.UNINDENT
.UNINDENT
.sp
Value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value of the replaceable attribute.
.UNINDENT
.UNINDENT
.sp
Replace \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A flag specifying whether or not to replace the attribute/value pair or to add a new attribute/value pair. The default setting is \fBfalse\fP .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Name=string,Value=string,Replace=boolean ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "Name": "string",
    "Value": "string",
    "Replace": true|false
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-expected\fP (structure)
The update condition which, if specified, determines whether the specified attributes will be updated or not. The update condition must be satisfied in order for this request to be processed and the attributes to be updated.Name \-> (string)
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
The name of the attribute involved in the condition.
.UNINDENT
.UNINDENT
.sp
Value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value of an attribute. This value can only be specified when the \fBExists\fP parameter is equal to \fBtrue\fP .
.UNINDENT
.UNINDENT
.sp
Exists \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A value specifying whether or not the specified attribute must exist with the specified value in order for the update condition to be satisfied. Specify \fBtrue\fP if the attribute must exist for the update condition to be satisfied. Specify \fBfalse\fP if the attribute should not exist in order for the update condition to be satisfied.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Name=string,Value=string,Exists=boolean
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "Name": "string",
  "Value": "string",
  "Exists": true|false
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
None
.\" Generated by docutils manpage writer.
.
