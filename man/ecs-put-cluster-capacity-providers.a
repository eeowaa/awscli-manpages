.\" Man page generated from reStructuredText.
.
.TH "ECS-PUT-CLUSTER-CAPACITY-PROVIDERS" "a" "" ""
.SH NAME
ecs-put-cluster-capacity-providers \- Modifies the available capacity providers and the default capacity provider strategy for a cluster
.SH DESCRIPTION
.sp
Modifies the available capacity providers and the default capacity provider strategy for a cluster.
.sp
You must specify both the available capacity providers and a default capacity provider strategy for the cluster. If the specified cluster has existing capacity providers associated with it, you must specify all existing capacity providers in addition to any new ones you want to add. Any existing capacity providers associated with a cluster that are omitted from a  PutClusterCapacityProviders API call will be disassociated with the cluster. You can only disassociate an existing capacity provider from a cluster if it\(aqs not being used by any existing tasks.
.sp
When creating a service or running a task on a cluster, if no capacity provider or launch type is specified, then the cluster\(aqs default capacity provider strategy is used. It is recommended to define a default capacity provider strategy for your cluster, however you may specify an empty array (\fB[]\fP ) to bypass defining a default strategy.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  put\-cluster\-capacity\-providers
\-\-cluster <value>
\-\-capacity\-providers <value>
\-\-default\-capacity\-provider\-strategy <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-cluster\fP (string)
.INDENT 0.0
.INDENT 3.5
The short name or full Amazon Resource Name (ARN) of the cluster to modify the capacity provider settings for. If you do not specify a cluster, the default cluster is assumed.
.UNINDENT
.UNINDENT
.sp
\fB\-\-capacity\-providers\fP (list)
.INDENT 0.0
.INDENT 3.5
The name of one or more capacity providers to associate with the cluster.
.sp
If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New capacity providers can be created with the  CreateCapacityProvider API operation.
.sp
To use a AWS Fargate capacity provider, specify either the \fBFARGATE\fP or \fBFARGATE_SPOT\fP capacity providers. The AWS Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
"string" "string" ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-default\-capacity\-provider\-strategy\fP (list)
.INDENT 0.0
.INDENT 3.5
The capacity provider strategy to use by default for the cluster.
.sp
When creating a service or running a task on a cluster, if no capacity provider or launch type is specified then the default capacity provider strategy for the cluster is used.
.sp
A capacity provider strategy consists of one or more capacity providers along with the \fBbase\fP and \fBweight\fP to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The  PutClusterCapacityProviders API is used to associate a capacity provider with a cluster. Only capacity providers with an \fBACTIVE\fP or \fBUPDATING\fP status can be used.
.sp
If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New capacity providers can be created with the  CreateCapacityProvider API operation.
.sp
To use a AWS Fargate capacity provider, specify either the \fBFARGATE\fP or \fBFARGATE_SPOT\fP capacity providers. The AWS Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The details of a capacity provider strategy. A capacity provider strategy can be set when using the  RunTask or  CreateCluster APIs or as the default capacity provider strategy for a cluster with the  CreateCluster API.
.sp
Only capacity providers that are already associated with a cluster and have an \fBACTIVE\fP or \fBUPDATING\fP status can be used in a capacity provider strategy. The  PutClusterCapacityProviders API is used to associate a capacity provider with a cluster.
.sp
If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New Auto Scaling group capacity providers can be created with the  CreateCapacityProvider API operation.
.sp
To use a AWS Fargate capacity provider, specify either the \fBFARGATE\fP or \fBFARGATE_SPOT\fP capacity providers. The AWS Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used in a capacity provider strategy.
.sp
capacityProvider \-> (string)
.INDENT 0.0
.INDENT 3.5
The short name of the capacity provider.
.UNINDENT
.UNINDENT
.sp
weight \-> (integer)
.INDENT 0.0
.INDENT 3.5
The \fIweight\fP value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The \fBweight\fP value is taken into consideration after the \fBbase\fP value, if defined, is satisfied.
.sp
If no \fBweight\fP value is specified, the default value of \fB0\fP is used. When multiple capacity providers are specified within a capacity provider strategy, at least one of the capacity providers must have a weight value greater than zero and any capacity providers with a weight of \fB0\fP will not be used to place tasks. If you specify multiple capacity providers in a strategy that all have a weight of \fB0\fP , any \fBRunTask\fP or \fBCreateService\fP actions using the capacity provider strategy will fail.
.sp
An example scenario for using weights is defining a strategy that contains two capacity providers and both have a weight of \fB1\fP , then when the \fBbase\fP is satisfied, the tasks will be split evenly across the two capacity providers. Using that same logic, if you specify a weight of \fB1\fP for \fIcapacityProviderA\fP and a weight of \fB4\fP for \fIcapacityProviderB\fP , then for every one task that is run using \fIcapacityProviderA\fP , four tasks would use \fIcapacityProviderB\fP .
.UNINDENT
.UNINDENT
.sp
base \-> (integer)
.INDENT 0.0
.INDENT 3.5
The \fIbase\fP value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a \fIbase\fP defined. If no value is specified, the default value of \fB0\fP is used.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
capacityProvider=string,weight=integer,base=integer ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "capacityProvider": "string",
    "weight": integer,
    "base": integer
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBExample 1: To add an existing capacity provider to a cluster\fP
.sp
The following \fBput\-cluster\-capacity\-providers\fP example adds an existing capacity provider to a cluster. The \fBcreate\-capacity\-provider\fP command is used to create a capacity provider. The \fBdescribe\-clusters\fP command is used to describe the current capacity providers and the default capacity provider strategy associated with a cluster. When adding a new capacity provider to a cluster, you must specify all existing capacity providers in addition to the new capacity provider you want to associate with the cluster. You must also specify the default capacity provider strategy to associate with the cluster. In this example, the \fBMyCluster\fP cluster has the \fBMyCapacityProvider1\fP capacity provider associated with it and you want to add the \fBMyCapacityProvider2\fP capacity provider and include it in the default capacity provider strategy so tasks are spread evenly across both capacity providers.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws ecs put\-cluster\-capacity\-providers \e
    \-\-cluster MyCluster \e
    \-\-capacity\-providers MyCapacityProvider1 MyCapacityProvider2 \e
    \-\-default\-capacity\-provider\-strategy capacityProvider=MyCapacityProvider1,weight=1 capacityProvider=MyCapacityProvider2,weight=1
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "cluster": {
        "clusterArn": "arn:aws:ecs:us\-west\-2:123456789012:cluster/MyCluster",
        "clusterName": "MyCluster",
        "status": "ACTIVE",
        "registeredContainerInstancesCount": 0,
        "runningTasksCount": 0,
        "pendingTasksCount": 0,
        "activeServicesCount": 0,
        "statistics": [],
        "tags": [],
        "settings": [
            {
                "name": "containerInsights",
                "value": "enabled"
            }
        ],
        "capacityProviders": [
            "MyCapacityProvider1",
            "MyCapacityProvider2"
        ],
        "defaultCapacityProviderStrategy": [
            {
                "capacityProvider": "MyCapacityProvider1",
                "weight": 1,
                "base": 0
            },
            {
                "capacityProvider": "MyCapacityProvider2",
                "weight": 1,
                "base": 0
            }
        ],
        "attachments": [
           {
                "id": "0fb0c8f4\-6edd\-4de1\-9b09\-17e470ee1918",
                "type": "asp",
                "status": "ACTIVE",
                "details": [
                    {
                        "name": "capacityProviderName",
                        "value": "MyCapacityProvider1"
                    },
                    {
                        "name": "scalingPlanName",
                        "value": "ECSManagedAutoScalingPlan\-a1b2c3d4\-5678\-90ab\-cdef\-EXAMPLE11111"
                    }
                ]
            },
            {
                "id": "ae592060\-2382\-4663\-9476\-b015c685593c",
                "type": "asp",
                "status": "ACTIVE",
                "details": [
                    {
                        "name": "capacityProviderName",
                        "value": "MyCapacityProvider2"
                    },
                    {
                        "name": "scalingPlanName",
                        "value": "ECSManagedAutoScalingPlan\-a1b2c3d4\-5678\-90ab\-cdef\-EXAMPLE22222"
                    }
                ]
            }
        ],
        "attachmentsStatus": "UPDATE_IN_PROGRESS"
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Cluster capacity providers\fP in the \fIAmazon ECS Developer Guide\fP\&.
.sp
\fBExample 2: To remove a capacity provider from a cluster\fP
.sp
The following \fBput\-cluster\-capacity\-providers\fP example removes a capacity provider from a cluster. The \fBdescribe\-clusters\fP command is used to describe the current capacity providers associated with a cluster. When removing a capacity provider from a cluster, you must specify the capacity providers you want to remain associated with the cluster as well as the default capacity provider strategy to associate with the cluster. In this example, the cluster has the \fBMyCapacityProvider1\fP and \fBMyCapacityProvider2\fP capacity providers associated with it and you want to remove the \fBMyCapacityProvider2\fP capacity provider, so you specify only \fBMyCapacityProvider1\fP in the command along with the updated default capacity provider strategy.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws ecs put\-cluster\-capacity\-providers \e
    \-\-cluster MyCluster \e
    \-\-capacity\-providers MyCapacityProvider1 \e
    \-\-default\-capacity\-provider\-strategy capacityProvider=MyCapacityProvider1,weight=1,base=0
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "cluster": {
        "clusterArn": "arn:aws:ecs:us\-west\-2:123456789012:cluster/MyCluster",
        "clusterName": "MyCluster",
        "status": "ACTIVE",
        "registeredContainerInstancesCount": 0,
        "runningTasksCount": 0,
        "pendingTasksCount": 0,
        "activeServicesCount": 0,
        "statistics": [],
        "tags": [],
        "settings": [
            {
                "name": "containerInsights",
                "value": "enabled"
            }
        ],
        "capacityProviders": [
            "MyCapacityProvider1"
        ],
        "defaultCapacityProviderStrategy": [
            "capacityProvider": "MyCapacityProvider1",
            "weight": 1,
            "base": 0
        ],
        "attachments": [
           {
                "id": "0fb0c8f4\-6edd\-4de1\-9b09\-17e470ee1918",
                "type": "asp",
                "status": "ACTIVE",
                "details": [
                    {
                        "name": "capacityProviderName",
                        "value": "MyCapacityProvider1"
                    },
                    {
                        "name": "scalingPlanName",
                        "value": "ECSManagedAutoScalingPlan\-a1b2c3d4\-5678\-90ab\-cdef\-EXAMPLE11111"
                    }
                ]
            },
            {
                "id": "ae592060\-2382\-4663\-9476\-b015c685593c",
                "type": "asp",
                "status": "DELETING",
                "details": [
                    {
                        "name": "capacityProviderName",
                        "value": "MyCapacityProvider2"
                    },
                    {
                        "name": "scalingPlanName",
                        "value": "ECSManagedAutoScalingPlan\-a1b2c3d4\-5678\-90ab\-cdef\-EXAMPLE22222"
                    }
                ]
            }
        ],
        "attachmentsStatus": "UPDATE_IN_PROGRESS"
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Cluster capacity providers\fP in the \fIAmazon ECS Developer Guide\fP\&.
.sp
\fBExample 3: To remove all capacity providers from a cluster\fP
.sp
The following \fBput\-cluster\-capacity\-providers\fP example removes all existing capacity providers from the cluster.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws ecs put\-cluster\-capacity\-providers \e
    \-\-cluster MyCluster \e
    \-\-capacity\-providers [] \e
    \-\-default\-capacity\-provider\-strategy []
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "cluster": {
        "clusterArn": "arn:aws:ecs:us\-west\-2:123456789012:cluster/MyCluster",
        "clusterName": "MyCluster",
        "status": "ACTIVE",
        "registeredContainerInstancesCount": 0,
        "runningTasksCount": 0,
        "pendingTasksCount": 0,
        "activeServicesCount": 0,
        "statistics": [],
        "tags": [],
        "settings": [
            {
                "name": "containerInsights",
                "value": "enabled"
            }
        ],
        "capacityProviders": [],
        "defaultCapacityProviderStrategy": [],
        "attachments": [
           {
                "id": "0fb0c8f4\-6edd\-4de1\-9b09\-17e470ee1918",
                "type": "asp",
                "status": "DELETING",
                "details": [
                    {
                        "name": "capacityProviderName",
                        "value": "MyCapacityProvider1"
                    },
                    {
                        "name": "scalingPlanName",
                        "value": "ECSManagedAutoScalingPlan\-a1b2c3d4\-5678\-90ab\-cdef\-EXAMPLE11111"
                    }
                ]
            },
            {
                "id": "ae592060\-2382\-4663\-9476\-b015c685593c",
                "type": "asp",
                "status": "DELETING",
                "details": [
                    {
                        "name": "capacityProviderName",
                        "value": "MyCapacityProvider2"
                    },
                    {
                        "name": "scalingPlanName",
                        "value": "ECSManagedAutoScalingPlan\-a1b2c3d4\-5678\-90ab\-cdef\-EXAMPLE22222"
                    }
                ]
            }
        ],
        "attachmentsStatus": "UPDATE_IN_PROGRESS"
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Cluster capacity providers\fP in the \fIAmazon ECS Developer Guide\fP\&.
.SH OUTPUT
.sp
cluster \-> (structure)
.INDENT 0.0
.INDENT 3.5
Details about the cluster.
.sp
clusterArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) that identifies the cluster. The ARN contains the \fBarn:aws:ecs\fP namespace, followed by the Region of the cluster, the AWS account ID of the cluster owner, the \fBcluster\fP namespace, and then the cluster name. For example, \fBarn:aws:ecs:region:012345678910:cluster/test\fP .
.UNINDENT
.UNINDENT
.sp
clusterName \-> (string)
.INDENT 0.0
.INDENT 3.5
A user\-generated string that you use to identify your cluster.
.UNINDENT
.UNINDENT
.sp
configuration \-> (structure)
.INDENT 0.0
.INDENT 3.5
The execute command configuration for the cluster.
.sp
executeCommandConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
The details of the execute command configuration.
.sp
kmsKeyId \-> (string)
.INDENT 0.0
.INDENT 3.5
Specify an AWS Key Management Service key ID to encrypt the data between the local client and the container.
.UNINDENT
.UNINDENT
.sp
logging \-> (string)
.INDENT 0.0
.INDENT 3.5
The log setting to use for redirecting logs for your execute command results. The following log settings are available.
.INDENT 0.0
.IP \(bu 2
\fBNONE\fP : The execute command session is not logged.
.IP \(bu 2
\fBDEFAULT\fP : The \fBawslogs\fP configuration in the task definition is used. If no logging parameter is specified, it defaults to this value. If no \fBawslogs\fP log driver is configured in the task definition, the output won\(aqt be logged.
.IP \(bu 2
\fBOVERRIDE\fP : Specify the logging details as a part of \fBlogConfiguration\fP . If the \fBOVERRIDE\fP logging option is specified, the \fBlogConfiguration\fP is required.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
logConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
The log configuration for the results of the execute command actions. The logs can be sent to CloudWatch Logs or an Amazon S3 bucket. When \fBlogging=OVERRIDE\fP is specified, a \fBlogConfiguration\fP must be provided.
.sp
cloudWatchLogGroupName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the CloudWatch log group to send logs to.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The CloudWatch log group must already be created.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
cloudWatchEncryptionEnabled \-> (boolean)
.INDENT 0.0
.INDENT 3.5
Whether or not to enable encryption on the CloudWatch logs. If not specified, encryption will be disabled.
.UNINDENT
.UNINDENT
.sp
s3BucketName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the S3 bucket to send logs to.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The S3 bucket must already be created.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
s3EncryptionEnabled \-> (boolean)
.INDENT 0.0
.INDENT 3.5
Whether or not to enable encryption on the CloudWatch logs. If not specified, encryption will be disabled.
.UNINDENT
.UNINDENT
.sp
s3KeyPrefix \-> (string)
.INDENT 0.0
.INDENT 3.5
An optional folder in the S3 bucket to place logs in.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
status \-> (string)
.INDENT 0.0
.INDENT 3.5
The status of the cluster. The following are the possible states that will be returned.
.INDENT 0.0
.INDENT 3.5
ACTIVE
.UNINDENT
.UNINDENT
.sp
The cluster is ready to accept tasks and if applicable you can register container instances with the cluster.
.INDENT 0.0
.INDENT 3.5
PROVISIONING
.UNINDENT
.UNINDENT
.sp
The cluster has capacity providers associated with it and the resources needed for the capacity provider are being created.
.INDENT 0.0
.INDENT 3.5
DEPROVISIONING
.UNINDENT
.UNINDENT
.sp
The cluster has capacity providers associated with it and the resources needed for the capacity provider are being deleted.
.INDENT 0.0
.INDENT 3.5
FAILED
.UNINDENT
.UNINDENT
.sp
The cluster has capacity providers associated with it and the resources needed for the capacity provider have failed to create.
.INDENT 0.0
.INDENT 3.5
INACTIVE
.UNINDENT
.UNINDENT
.sp
The cluster has been deleted. Clusters with an \fBINACTIVE\fP status may remain discoverable in your account for a period of time. However, this behavior is subject to change in the future, so you should not rely on \fBINACTIVE\fP clusters persisting.
.UNINDENT
.UNINDENT
.sp
registeredContainerInstancesCount \-> (integer)
.INDENT 0.0
.INDENT 3.5
The number of container instances registered into the cluster. This includes container instances in both \fBACTIVE\fP and \fBDRAINING\fP status.
.UNINDENT
.UNINDENT
.sp
runningTasksCount \-> (integer)
.INDENT 0.0
.INDENT 3.5
The number of tasks in the cluster that are in the \fBRUNNING\fP state.
.UNINDENT
.UNINDENT
.sp
pendingTasksCount \-> (integer)
.INDENT 0.0
.INDENT 3.5
The number of tasks in the cluster that are in the \fBPENDING\fP state.
.UNINDENT
.UNINDENT
.sp
activeServicesCount \-> (integer)
.INDENT 0.0
.INDENT 3.5
The number of services that are running on the cluster in an \fBACTIVE\fP state. You can view these services with  ListServices .
.UNINDENT
.UNINDENT
.sp
statistics \-> (list)
.INDENT 0.0
.INDENT 3.5
Additional information about your clusters that are separated by launch type, including:
.INDENT 0.0
.IP \(bu 2
runningEC2TasksCount
.IP \(bu 2
RunningFargateTasksCount
.IP \(bu 2
pendingEC2TasksCount
.IP \(bu 2
pendingFargateTasksCount
.IP \(bu 2
activeEC2ServiceCount
.IP \(bu 2
activeFargateServiceCount
.IP \(bu 2
drainingEC2ServiceCount
.IP \(bu 2
drainingFargateServiceCount
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A key\-value pair object.
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the key\-value pair. For environment variables, this is the name of the environment variable.
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value of the key\-value pair. For environment variables, this is the value of the environment variable.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
tags \-> (list)
.INDENT 0.0
.INDENT 3.5
The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
.sp
The following basic restrictions apply to tags:
.INDENT 0.0
.IP \(bu 2
Maximum number of tags per resource \- 50
.IP \(bu 2
For each resource, each tag key must be unique, and each tag key can have only one value.
.IP \(bu 2
Maximum key length \- 128 Unicode characters in UTF\-8
.IP \(bu 2
Maximum value length \- 256 Unicode characters in UTF\-8
.IP \(bu 2
If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF\-8, and the following characters: + \- = . _ : / @.
.IP \(bu 2
Tag keys and values are case\-sensitive.
.IP \(bu 2
Do not use \fBaws:\fP , \fBAWS:\fP , or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.
.UNINDENT
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
.sp
The following basic restrictions apply to tags:
.INDENT 0.0
.IP \(bu 2
Maximum number of tags per resource \- 50
.IP \(bu 2
For each resource, each tag key must be unique, and each tag key can have only one value.
.IP \(bu 2
Maximum key length \- 128 Unicode characters in UTF\-8
.IP \(bu 2
Maximum value length \- 256 Unicode characters in UTF\-8
.IP \(bu 2
If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF\-8, and the following characters: + \- = . _ : / @.
.IP \(bu 2
Tag keys and values are case\-sensitive.
.IP \(bu 2
Do not use \fBaws:\fP , \fBAWS:\fP , or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for AWS use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.
.UNINDENT
.sp
key \-> (string)
.INDENT 0.0
.INDENT 3.5
One part of a key\-value pair that make up a tag. A \fBkey\fP is a general label that acts like a category for more specific tag values.
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The optional part of a key\-value pair that make up a tag. A \fBvalue\fP acts as a descriptor within a tag category (key).
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
settings \-> (list)
.INDENT 0.0
.INDENT 3.5
The settings for the cluster. This parameter indicates whether CloudWatch Container Insights is enabled or disabled for a cluster.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The settings to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster.
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the cluster setting. The only supported value is \fBcontainerInsights\fP .
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value to set for the cluster setting. The supported values are \fBenabled\fP and \fBdisabled\fP . If \fBenabled\fP is specified, CloudWatch Container Insights will be enabled for the cluster, otherwise it will be disabled unless the \fBcontainerInsights\fP account setting is enabled. If a cluster value is specified, it will override the \fBcontainerInsights\fP value set with  PutAccountSetting or  PutAccountSettingDefault .
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
capacityProviders \-> (list)
.INDENT 0.0
.INDENT 3.5
The capacity providers associated with the cluster.
.sp
(string)
.UNINDENT
.UNINDENT
.sp
defaultCapacityProviderStrategy \-> (list)
.INDENT 0.0
.INDENT 3.5
The default capacity provider strategy for the cluster. When services or tasks are run in the cluster with no launch type or capacity provider strategy specified, the default capacity provider strategy is used.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The details of a capacity provider strategy. A capacity provider strategy can be set when using the  RunTask or  CreateCluster APIs or as the default capacity provider strategy for a cluster with the  CreateCluster API.
.sp
Only capacity providers that are already associated with a cluster and have an \fBACTIVE\fP or \fBUPDATING\fP status can be used in a capacity provider strategy. The  PutClusterCapacityProviders API is used to associate a capacity provider with a cluster.
.sp
If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New Auto Scaling group capacity providers can be created with the  CreateCapacityProvider API operation.
.sp
To use a AWS Fargate capacity provider, specify either the \fBFARGATE\fP or \fBFARGATE_SPOT\fP capacity providers. The AWS Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used in a capacity provider strategy.
.sp
capacityProvider \-> (string)
.INDENT 0.0
.INDENT 3.5
The short name of the capacity provider.
.UNINDENT
.UNINDENT
.sp
weight \-> (integer)
.INDENT 0.0
.INDENT 3.5
The \fIweight\fP value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The \fBweight\fP value is taken into consideration after the \fBbase\fP value, if defined, is satisfied.
.sp
If no \fBweight\fP value is specified, the default value of \fB0\fP is used. When multiple capacity providers are specified within a capacity provider strategy, at least one of the capacity providers must have a weight value greater than zero and any capacity providers with a weight of \fB0\fP will not be used to place tasks. If you specify multiple capacity providers in a strategy that all have a weight of \fB0\fP , any \fBRunTask\fP or \fBCreateService\fP actions using the capacity provider strategy will fail.
.sp
An example scenario for using weights is defining a strategy that contains two capacity providers and both have a weight of \fB1\fP , then when the \fBbase\fP is satisfied, the tasks will be split evenly across the two capacity providers. Using that same logic, if you specify a weight of \fB1\fP for \fIcapacityProviderA\fP and a weight of \fB4\fP for \fIcapacityProviderB\fP , then for every one task that is run using \fIcapacityProviderA\fP , four tasks would use \fIcapacityProviderB\fP .
.UNINDENT
.UNINDENT
.sp
base \-> (integer)
.INDENT 0.0
.INDENT 3.5
The \fIbase\fP value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a \fIbase\fP defined. If no value is specified, the default value of \fB0\fP is used.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
attachments \-> (list)
.INDENT 0.0
.INDENT 3.5
The resources attached to a cluster. When using a capacity provider with a cluster, the Auto Scaling plan that is created will be returned as a cluster attachment.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
An object representing a container instance or task attachment.
.sp
id \-> (string)
.INDENT 0.0
.INDENT 3.5
The unique identifier for the attachment.
.UNINDENT
.UNINDENT
.sp
type \-> (string)
.INDENT 0.0
.INDENT 3.5
The type of the attachment, such as \fBElasticNetworkInterface\fP .
.UNINDENT
.UNINDENT
.sp
status \-> (string)
.INDENT 0.0
.INDENT 3.5
The status of the attachment. Valid values are \fBPRECREATED\fP , \fBCREATED\fP , \fBATTACHING\fP , \fBATTACHED\fP , \fBDETACHING\fP , \fBDETACHED\fP , and \fBDELETED\fP .
.UNINDENT
.UNINDENT
.sp
details \-> (list)
.INDENT 0.0
.INDENT 3.5
Details of the attachment. For elastic network interfaces, this includes the network interface ID, the MAC address, the subnet ID, and the private IPv4 address.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
A key\-value pair object.
.sp
name \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the key\-value pair. For environment variables, this is the name of the environment variable.
.UNINDENT
.UNINDENT
.sp
value \-> (string)
.INDENT 0.0
.INDENT 3.5
The value of the key\-value pair. For environment variables, this is the value of the environment variable.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
attachmentsStatus \-> (string)
.INDENT 0.0
.INDENT 3.5
The status of the capacity providers associated with the cluster. The following are the states that will be returned:
.INDENT 0.0
.INDENT 3.5
UPDATE_IN_PROGRESS
.UNINDENT
.UNINDENT
.sp
The available capacity providers for the cluster are updating. This occurs when the Auto Scaling plan is provisioning or deprovisioning.
.INDENT 0.0
.INDENT 3.5
UPDATE_COMPLETE
.UNINDENT
.UNINDENT
.sp
The capacity providers have successfully updated.
.INDENT 0.0
.INDENT 3.5
UPDATE_FAILED
.UNINDENT
.UNINDENT
.sp
The capacity provider updates failed.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
