.\" Man page generated from reStructuredText.
.
.TH "HONEYCODE-START-TABLE-DATA-IMPORT-JOB" "a" "" ""
.SH NAME
honeycode-start-table-data-import-job \- The StartTableDataImportJob API allows you to start an import job on a table
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
The StartTableDataImportJob API allows you to start an import job on a table. This API will only return the id of the job that was started. To find out the status of the import request, you need to call the DescribeTableDataImportJob API.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  start\-table\-data\-import\-job
\-\-workbook\-id <value>
\-\-data\-source <value>
\-\-data\-format <value>
\-\-destination\-table\-id <value>
\-\-import\-options <value>
\-\-client\-request\-token <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-workbook\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The ID of the workbook where the rows are being imported.
.sp
If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.
.UNINDENT
.UNINDENT
.sp
\fB\-\-data\-source\fP (structure)
.INDENT 0.0
.INDENT 3.5
The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.
.sp
dataSourceConfig \-> (structure)
.INDENT 0.0
.INDENT 3.5
The configuration parameters for the data source of the import
.sp
dataSourceUrl \-> (string)
.INDENT 0.0
.INDENT 3.5
The URL from which source data will be downloaded for the import request.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
dataSourceConfig={dataSourceUrl=string}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "dataSourceConfig": {
    "dataSourceUrl": "string"
  }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-data\-format\fP (string)
.INDENT 0.0
.INDENT 3.5
The format of the data that is being imported. Currently the only option supported is "DELIMITED_TEXT".
.sp
Possible values:
.INDENT 0.0
.IP \(bu 2
\fBDELIMITED_TEXT\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-destination\-table\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
The ID of the table where the rows are being imported.
.sp
If a table with the specified id could not be found, this API throws ResourceNotFoundException.
.UNINDENT
.UNINDENT
.sp
\fB\-\-import\-options\fP (structure)
.INDENT 0.0
.INDENT 3.5
The options for customizing this import request.
.sp
destinationOptions \-> (structure)
.INDENT 0.0
.INDENT 3.5
Options relating to the destination of the import request.
.sp
columnMap \-> (map)
.INDENT 0.0
.INDENT 3.5
A map of the column id to the import properties for each column.
.sp
key \-> (string)
.sp
value \-> (structure)
.INDENT 0.0
.INDENT 3.5
An object that contains the properties for importing data to a specific column in a table.
.sp
columnIndex \-> (integer)
.INDENT 0.0
.INDENT 3.5
The index of the column in the input file.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
delimitedTextOptions \-> (structure)
.INDENT 0.0
.INDENT 3.5
Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.
.sp
delimiter \-> (string)
.INDENT 0.0
.INDENT 3.5
The delimiter to use for separating columns in a single row of the input.
.UNINDENT
.UNINDENT
.sp
hasHeaderRow \-> (boolean)
.INDENT 0.0
.INDENT 3.5
Indicates whether the input file has a header row at the top containing the column names.
.UNINDENT
.UNINDENT
.sp
ignoreEmptyRows \-> (boolean)
.INDENT 0.0
.INDENT 3.5
A parameter to indicate whether empty rows should be ignored or be included in the import.
.UNINDENT
.UNINDENT
.sp
dataCharacterEncoding \-> (string)
.INDENT 0.0
.INDENT 3.5
The encoding of the data in the input file.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
destinationOptions={columnMap={KeyName1={columnIndex=integer},KeyName2={columnIndex=integer}}},delimitedTextOptions={delimiter=string,hasHeaderRow=boolean,ignoreEmptyRows=boolean,dataCharacterEncoding=string}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "destinationOptions": {
    "columnMap": {"string": {
          "columnIndex": integer
        }
      ...}
  },
  "delimitedTextOptions": {
    "delimiter": "string",
    "hasHeaderRow": true|false,
    "ignoreEmptyRows": true|false,
    "dataCharacterEncoding": "UTF\-8"|"US\-ASCII"|"ISO\-8859\-1"|"UTF\-16BE"|"UTF\-16LE"|"UTF\-16"
  }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-client\-request\-token\fP (string)
.INDENT 0.0
.INDENT 3.5
The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again.
.sp
Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
jobId \-> (string)
.INDENT 0.0
.INDENT 3.5
The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.
.UNINDENT
.UNINDENT
.sp
jobStatus \-> (string)
.INDENT 0.0
.INDENT 3.5
The status of the import job immediately after submitting the request.
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
