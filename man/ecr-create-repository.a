.\" Man page generated from reStructuredText.
.
.TH "ECR-CREATE-REPOSITORY" "a" "" ""
.SH NAME
ecr-create-repository \- Creates a repository
.SH DESCRIPTION
.sp
Creates a repository. For more information, see \fI\%Amazon ECR Repositories\fP in the \fIAmazon Elastic Container Registry User Guide\fP .
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  create\-repository
\-\-repository\-name <value>
[\-\-tags <value>]
[\-\-image\-tag\-mutability <value>]
[\-\-image\-scanning\-configuration <value>]
[\-\-encryption\-configuration <value>]
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-repository\-name\fP (string)
.INDENT 0.0
.INDENT 3.5
The name to use for the repository. The repository name may be specified on its own (such as \fBnginx\-web\-app\fP ) or it can be prepended with a namespace to group the repository into a category (such as \fBproject\-a/nginx\-web\-app\fP ).
.UNINDENT
.UNINDENT
.sp
\fB\-\-tags\fP (list)
.INDENT 0.0
.INDENT 3.5
The metadata that you apply to the repository to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
.sp
(structure)
.INDENT 0.0
.INDENT 3.5
The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
.sp
Key \-> (string)
.INDENT 0.0
.INDENT 3.5
One part of a key\-value pair that make up a tag. A \fBkey\fP is a general label that acts like a category for more specific tag values.
.UNINDENT
.UNINDENT
.sp
Value \-> (string)
.INDENT 0.0
.INDENT 3.5
The optional part of a key\-value pair that make up a tag. A \fBvalue\fP acts as a descriptor within a tag category (key).
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Key=string,Value=string ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[
  {
    "Key": "string",
    "Value": "string"
  }
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-image\-tag\-mutability\fP (string)
.INDENT 0.0
.INDENT 3.5
The tag mutability setting for the repository. If this parameter is omitted, the default setting of \fBMUTABLE\fP will be used which will allow image tags to be overwritten. If \fBIMMUTABLE\fP is specified, all image tags within the repository will be immutable which will prevent them from being overwritten.
.sp
Possible values:
.INDENT 0.0
.IP \(bu 2
\fBMUTABLE\fP
.IP \(bu 2
\fBIMMUTABLE\fP
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fB\-\-image\-scanning\-configuration\fP (structure)
.INDENT 0.0
.INDENT 3.5
The image scanning configuration for the repository. This determines whether images are scanned for known vulnerabilities after being pushed to the repository.
.sp
scanOnPush \-> (boolean)
.INDENT 0.0
.INDENT 3.5
The setting that determines whether images are scanned after being pushed to a repository. If set to \fBtrue\fP , images will be scanned after being pushed. If this parameter is not specified, it will default to \fBfalse\fP and images will not be scanned unless a scan is manually started with the  StartImageScan API.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
scanOnPush=boolean
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "scanOnPush": true|false
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-encryption\-configuration\fP (structure)
.INDENT 0.0
.INDENT 3.5
The encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.
.sp
encryptionType \-> (string)
.INDENT 0.0
.INDENT 3.5
The encryption type to use.
.sp
If you use the \fBKMS\fP encryption type, the contents of the repository will be encrypted using server\-side encryption with customer master keys (CMKs) stored in AWS KMS. When you use AWS KMS to encrypt your data, you can either use the default AWS managed CMK for Amazon ECR, or specify your own CMK, which you already created. For more information, see \fI\%Protecting Data Using Server\-Side Encryption with CMKs Stored in AWS Key Management Service (SSE\-KMS)\fP in the \fIAmazon Simple Storage Service Console Developer Guide.\fP .
.sp
If you use the \fBAES256\fP encryption type, Amazon ECR uses server\-side encryption with Amazon S3\-managed encryption keys which encrypts the images in the repository using an AES\-256 encryption algorithm. For more information, see \fI\%Protecting Data Using Server\-Side Encryption with Amazon S3\-Managed Encryption Keys (SSE\-S3)\fP in the \fIAmazon Simple Storage Service Console Developer Guide.\fP .
.UNINDENT
.UNINDENT
.sp
kmsKey \-> (string)
.INDENT 0.0
.INDENT 3.5
If you use the \fBKMS\fP encryption type, specify the CMK to use for encryption. The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If no key is specified, the default AWS managed CMK for Amazon ECR will be used.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
encryptionType=string,kmsKey=string
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "encryptionType": "AES256"|"KMS",
  "kmsKey": "string"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH EXAMPLES
.sp
\fBExample 1: To create a repository\fP
.sp
The following \fBcreate\-repository\fP example creates a repository inside the specified namespace in the default registry for an account.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws ecr create\-repository \e
    \-\-repository\-name project\-a/nginx\-web\-app
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "repository": {
        "registryId": "123456789012",
        "repositoryName": "sample\-repo",
        "repositoryArn": "arn:aws:ecr:us\-west\-2:123456789012:repository/project\-a/nginx\-web\-app"
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Creating a Repository\fP in the \fIAmazon ECR User Guide\fP\&.
.sp
\fBExample 2: To create a repository configured with image tag immutability\fP
.sp
The following \fBcreate\-repository\fP example creates a repository configured for tag immutability in the default registry for an account.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws ecr create\-repository \e
    \-\-repository\-name sample\-repo \e
    \-\-image\-tag\-mutability IMMUTABLE
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "repository": {
        "registryId": "123456789012",
        "repositoryName": "sample\-repo",
        "repositoryArn": "arn:aws:ecr:us\-west\-2:123456789012:repository/sample\-repo",
        "imageTagMutability": "IMMUTABLE"
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Image Tag Mutability\fP in the \fIAmazon ECR User Guide\fP\&.
.sp
\fBExample 3: To create a repository configured with a scanning configuration\fP
.sp
The following \fBcreate\-repository\fP example creates a repository configured to perform a vulnerability scan on image push in the default registry for an account.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
aws ecr create\-repository \e
    \-\-repository\-name sample\-repo \e
    \-\-image\-scanning\-configuration scanOnPush=true
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Output:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "repository": {
        "registryId": "123456789012",
        "repositoryName": "sample\-repo",
        "repositoryArn": "arn:aws:ecr:us\-west\-2:123456789012:repository/sample\-repo",
        "imageScanningConfiguration": {
            "scanOnPush": true
        }
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For more information, see \fI\%Image Scanning\fP in the \fIAmazon ECR User Guide\fP\&.
.SH OUTPUT
.sp
repository \-> (structure)
.INDENT 0.0
.INDENT 3.5
The repository that was created.
.sp
repositoryArn \-> (string)
.INDENT 0.0
.INDENT 3.5
The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the \fBarn:aws:ecr\fP namespace, followed by the region of the repository, AWS account ID of the repository owner, repository namespace, and repository name. For example, \fBarn:aws:ecr:region:012345678910:repository/test\fP .
.UNINDENT
.UNINDENT
.sp
registryId \-> (string)
.INDENT 0.0
.INDENT 3.5
The AWS account ID associated with the registry that contains the repository.
.UNINDENT
.UNINDENT
.sp
repositoryName \-> (string)
.INDENT 0.0
.INDENT 3.5
The name of the repository.
.UNINDENT
.UNINDENT
.sp
repositoryUri \-> (string)
.INDENT 0.0
.INDENT 3.5
The URI for the repository. You can use this URI for container image \fBpush\fP and \fBpull\fP operations.
.UNINDENT
.UNINDENT
.sp
createdAt \-> (timestamp)
.INDENT 0.0
.INDENT 3.5
The date and time, in JavaScript date format, when the repository was created.
.UNINDENT
.UNINDENT
.sp
imageTagMutability \-> (string)
.INDENT 0.0
.INDENT 3.5
The tag mutability setting for the repository.
.UNINDENT
.UNINDENT
.sp
imageScanningConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
The image scanning configuration for a repository.
.sp
scanOnPush \-> (boolean)
.INDENT 0.0
.INDENT 3.5
The setting that determines whether images are scanned after being pushed to a repository. If set to \fBtrue\fP , images will be scanned after being pushed. If this parameter is not specified, it will default to \fBfalse\fP and images will not be scanned unless a scan is manually started with the  StartImageScan API.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
encryptionConfiguration \-> (structure)
.INDENT 0.0
.INDENT 3.5
The encryption configuration for the repository. This determines how the contents of your repository are encrypted at rest.
.sp
encryptionType \-> (string)
.INDENT 0.0
.INDENT 3.5
The encryption type to use.
.sp
If you use the \fBKMS\fP encryption type, the contents of the repository will be encrypted using server\-side encryption with customer master keys (CMKs) stored in AWS KMS. When you use AWS KMS to encrypt your data, you can either use the default AWS managed CMK for Amazon ECR, or specify your own CMK, which you already created. For more information, see \fI\%Protecting Data Using Server\-Side Encryption with CMKs Stored in AWS Key Management Service (SSE\-KMS)\fP in the \fIAmazon Simple Storage Service Console Developer Guide.\fP .
.sp
If you use the \fBAES256\fP encryption type, Amazon ECR uses server\-side encryption with Amazon S3\-managed encryption keys which encrypts the images in the repository using an AES\-256 encryption algorithm. For more information, see \fI\%Protecting Data Using Server\-Side Encryption with Amazon S3\-Managed Encryption Keys (SSE\-S3)\fP in the \fIAmazon Simple Storage Service Console Developer Guide.\fP .
.UNINDENT
.UNINDENT
.sp
kmsKey \-> (string)
.INDENT 0.0
.INDENT 3.5
If you use the \fBKMS\fP encryption type, specify the CMK to use for encryption. The alias, key ID, or full ARN of the CMK can be specified. The key must exist in the same Region as the repository. If no key is specified, the default AWS managed CMK for Amazon ECR will be used.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.\" Generated by docutils manpage writer.
.
