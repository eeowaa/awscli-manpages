.\" Man page generated from reStructuredText.
.
.TH "EMR-PUT-MANAGED-SCALING-POLICY" "a" "" ""
.SH NAME
emr-put-managed-scaling-policy \- Creates or updates a managed scaling policy for an Amazon EMR cluster
.SH DESCRIPTION
.sp
Creates or updates a managed scaling policy for an Amazon EMR cluster. The managed scaling policy defines the limits for resources, such as EC2 instances that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
.sp
See also: AWS API Documentation
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
  put\-managed\-scaling\-policy
\-\-cluster\-id <value>
\-\-managed\-scaling\-policy <value>
[\-\-cli\-input\-json | \-\-cli\-input\-yaml]
[\-\-generate\-cli\-skeleton <value>]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH OPTIONS
.sp
\fB\-\-cluster\-id\fP (string)
.INDENT 0.0
.INDENT 3.5
Specifies the ID of an EMR cluster where the managed scaling policy is attached.
.UNINDENT
.UNINDENT
.sp
\fB\-\-managed\-scaling\-policy\fP (structure)
.INDENT 0.0
.INDENT 3.5
Specifies the constraints for the managed scaling policy.
.sp
ComputeLimits \-> (structure)
.INDENT 0.0
.INDENT 3.5
The EC2 unit limits for a managed scaling policy. The managed scaling activity of a cluster is not allowed to go above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
.sp
UnitType \-> (string)
.INDENT 0.0
.INDENT 3.5
The unit type used for specifying a managed scaling policy.
.UNINDENT
.UNINDENT
.sp
MinimumCapacityUnits \-> (integer)
.INDENT 0.0
.INDENT 3.5
The lower boundary of EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
.UNINDENT
.UNINDENT
.sp
MaximumCapacityUnits \-> (integer)
.INDENT 0.0
.INDENT 3.5
The upper boundary of EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
.UNINDENT
.UNINDENT
.sp
MaximumOnDemandCapacityUnits \-> (integer)
.INDENT 0.0
.INDENT 3.5
The upper boundary of On\-Demand EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The On\-Demand units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between On\-Demand and Spot Instances.
.UNINDENT
.UNINDENT
.sp
MaximumCoreCapacityUnits \-> (integer)
.INDENT 0.0
.INDENT 3.5
The upper boundary of EC2 units for core node type in a cluster. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The core units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between core and task nodes.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Shorthand Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ComputeLimits={UnitType=string,MinimumCapacityUnits=integer,MaximumCapacityUnits=integer,MaximumOnDemandCapacityUnits=integer,MaximumCoreCapacityUnits=integer}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
JSON Syntax:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
  "ComputeLimits": {
    "UnitType": "InstanceFleetUnits"|"Instances"|"VCPU",
    "MinimumCapacityUnits": integer,
    "MaximumCapacityUnits": integer,
    "MaximumOnDemandCapacityUnits": integer,
    "MaximumCoreCapacityUnits": integer
  }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-cli\-input\-json\fP | \fB\-\-cli\-input\-yaml\fP (string)
Reads arguments from the JSON string provided. The JSON string follows the format provided by \fB\-\-generate\-cli\-skeleton\fP\&. If other arguments are provided on the command line, those values will override the JSON\-provided values. It is not possible to pass arbitrary binary values using a JSON\-provided value as the string will be taken literally. This may not be specified along with \fB\-\-cli\-input\-yaml\fP\&.
.sp
\fB\-\-generate\-cli\-skeleton\fP (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value \fBinput\fP, prints a sample input JSON that can be used as an argument for \fB\-\-cli\-input\-json\fP\&. Similarly, if provided \fByaml\-input\fP it will print a sample input YAML that can be used with \fB\-\-cli\-input\-yaml\fP\&. If provided with the value \fBoutput\fP, it validates the command inputs and returns a sample output JSON for that command.
.sp
See \(aqaws help\(aq for descriptions of global parameters.
.SH OUTPUT
.sp
None
.\" Generated by docutils manpage writer.
.
